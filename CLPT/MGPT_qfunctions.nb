(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    492918,       9377]
NotebookOptionsPosition[    489181,       9248]
NotebookOutlinePosition[    489517,       9263]
CellTagsIndexPosition[    489474,       9260]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"Quit", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.744753897342163*^9, 3.744753899795726*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "MGPT_qfunctions  (August, 2018)\ncompute ",
 Cell[BoxData[
  FormBox["q", TraditionalForm]],
  ExpressionUUID -> "e1d1b740-bd35-49aa-ad8c-b8d9aecca020"],
 " functions "
}], "Title",
 CellChangeTimes->{{3.5050628362232513`*^9, 3.50506284168414*^9}, {
   3.531497665636333*^9, 3.531497681794804*^9}, {3.647774345060751*^9, 
   3.6477743600976353`*^9}, {3.663000389912932*^9, 3.663000391911227*^9}, {
   3.693145084358066*^9, 3.693145092954609*^9}, {3.693735982220573*^9, 
   3.693735986713805*^9}, {3.701867239716071*^9, 3.701867260440569*^9}, {
   3.7024658034588537`*^9, 3.702465806288926*^9}, {3.703148633922871*^9, 
   3.703148634489955*^9}, {3.704646750509082*^9, 3.704646752163433*^9}, {
   3.704882793486555*^9, 3.704882796644773*^9}, 3.705138340743878*^9, {
   3.705138431793377*^9, 3.705138436599887*^9}, {3.7051755153389397`*^9, 
   3.7051755196762743`*^9}, {3.7051758146569433`*^9, 3.70517581861097*^9}, {
   3.705313384132386*^9, 3.705313389811788*^9}, {3.705485116052347*^9, 
   3.7054851303623123`*^9}, {3.705490566451975*^9, 3.7054905868487797`*^9}, {
   3.7062640289399567`*^9, 3.70626402997397*^9}, 3.7062874135121202`*^9, {
   3.710173838715599*^9, 3.710173857016191*^9}, {3.71119391888498*^9, 
   3.7111939193999863`*^9}, {3.724688768528491*^9, 3.724688774377046*^9}, {
   3.724782196974523*^9, 3.724782199814604*^9}, {3.725012962586294*^9, 
   3.7250129640783157`*^9}, {3.7251824070401897`*^9, 
   3.7251824081906567`*^9}, {3.725184126699469*^9, 3.7251841296006107`*^9}, {
   3.725185310672593*^9, 3.725185311842661*^9}, {3.7257890257045527`*^9, 
   3.725789039078113*^9}, {3.7263097613372717`*^9, 3.726309763894353*^9}, {
   3.7440327410423*^9, 3.744032759002574*^9}, {3.7444507475559998`*^9, 
   3.744450791716119*^9}, {3.7444529222815742`*^9, 3.744452923095623*^9}, {
   3.744453231902237*^9, 3.744453238836914*^9}, {3.7444682550938396`*^9, 
   3.744468273416957*^9}, {3.744471201113576*^9, 3.7444712028553677`*^9}, 
   3.744478413431212*^9, 3.7444821035249968`*^9},
 ExpressionUUID -> "fa4d4052-7d34-4ef4-a2c2-1be7e39092be"],

Cell["\<\

Authors:

Mario Alberto Rodriguez-Meza (ININ, Mexico)
marioalberto.rodriguez@inin.gob.mx

Alejandro Aviles (Conacyt/ININ, Mexico)
alejandro.aviles.conacyt@inin.gob.mx, avilescervantes@gmail.com 


\
\>", "Text",
 CellChangeTimes->{{3.5057286061376343`*^9, 3.505728628000217*^9}, {
   3.506686870745358*^9, 3.506686885316695*^9}, {3.636286052227973*^9, 
   3.636286063745819*^9}, {3.646579894445087*^9, 3.646579895498218*^9}, {
   3.647084624808922*^9, 3.6470846405693207`*^9}, {3.647611882551482*^9, 
   3.647611886855419*^9}, {3.647620991221499*^9, 3.647620991322665*^9}, {
   3.6630003972950573`*^9, 3.663000407544524*^9}, {3.6933916766336718`*^9, 
   3.693391684895602*^9}, {3.7018672694481287`*^9, 3.701867282087358*^9}, {
   3.724602847159445*^9, 3.72460285507347*^9}, {3.724695359553027*^9, 
   3.724695360983019*^9}, {3.72478218521646*^9, 3.7247821853511963`*^9}, {
   3.725789495267005*^9, 3.725789530176879*^9}, {3.744032654648932*^9, 
   3.7440326608546257`*^9}, {3.74403270547289*^9, 3.744032733553393*^9}, {
   3.7444573418594627`*^9, 3.744457342912662*^9}, 3.744468284061948*^9, {
   3.744470893453539*^9, 3.744470994647352*^9}, {3.744471205866642*^9, 
   3.744471207238018*^9}, {3.744482028035802*^9, 3.744482047502104*^9}},
 FontSize->16,
 ExpressionUUID -> "26b4455f-e05f-4844-81c3-bc68561abc0d"],

Cell["\<\
References: 
For CLPT:                arXiv:1209.0780  (But we use the expansion of \
arXiv:1506.05264 )
For CLPT in MG:    arXiv:1705.10719, arXiv: 1809.xxxxx

If you use this code, please cite the reference arXiv: 1809.xxxxx. You may \
also want to cite the other references listed above.
\
\>", "Text",
 CellChangeTimes->{{3.744451854910817*^9, 3.744451873581196*^9}, 
   3.744468293613262*^9, {3.744470997901712*^9, 3.744471019558445*^9}, {
   3.744471056700426*^9, 3.744471105908955*^9}, {3.7444712236025352`*^9, 
   3.744471404563533*^9}, 3.744481330922483*^9},
 ExpressionUUID -> "868a5cf6-a4d0-4134-b07d-08e4f74713de"],

Cell["\<\
RUN:  shift-enter on the biggest right bracket \[Rule]
It runs in about 5-10 min\
\>", "Text",
 CellChangeTimes->{{3.744451683453739*^9, 3.7444517249311533`*^9}, {
  3.744471174654375*^9, 3.744471177815798*^9}, {3.7444821090053043`*^9, 
  3.744482119620695*^9}, {3.7446485608236217`*^9, 3.744648562404171*^9}},
 ExpressionUUID -> "63852856-43c3-4889-a7ee-371aa2a7d270"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"INPUTFILE", "=", "\"\<kfunctions.dat\>\""}], 
   "\[IndentingNewLine]", 
   RowBox[{"OUTFILE", "=", "\"\<qfunctions.dat\>\""}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.744648526887494*^9, 3.7446485533955193`*^9}, {
   3.744752999633754*^9, 3.744753005126236*^9}, 3.7447539052993298`*^9, 
   3.744753977718196*^9, {3.7447562026673813`*^9, 3.744756204466742*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "\n1. Starting ",
 StyleBox["Mathematica",
  FontSlant->"Italic"]
}], "Subtitle",
 CellChangeTimes->{{3.506693699863208*^9, 3.506693714419594*^9}, {
   3.506694239233597*^9, 3.506694245811788*^9}, 3.6469482653506517`*^9, 
   3.693391932174884*^9, {3.7272635418586073`*^9, 3.727263557530658*^9}, {
   3.727263612299082*^9, 3.727263617969593*^9}, {3.744032532838442*^9, 
   3.74403253445984*^9}, {3.744038915050564*^9, 3.744038915754362*^9}, {
   3.7441275904862413`*^9, 3.7441275911982183`*^9}, {3.744451794177195*^9, 
   3.744451799025074*^9}},ExpressionUUID->"5722d23c-3157-4c00-b8ff-\
9d3116935029"],

Cell["Initializing...", "Text",
 CellChangeTimes->{{3.4456211229641733`*^9, 3.4456211474543247`*^9}, {
  3.7440325433007107`*^9, 3.7440325832374077`*^9}, {3.744755090905691*^9, 
  3.744755094108403*^9}},
 ExpressionUUID -> "ef26b5e7-e60f-4f47-87d8-4d55d80391d3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], "\n", 
 RowBox[{"FileNames", "[", "]"}]}], "Input",
 CellChangeTimes->{
  3.50669368198448*^9, 3.744033256891781*^9, {3.744753911589108*^9, 
   3.744753911977108*^9}, {3.744753969493256*^9, 3.744753982840673*^9}},
 ExpressionUUID -> "99080ce5-960a-47c8-be3b-0880dae90a60"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"kfunctions.dat\"\>", ",", "\<\"kfunctions_F5.dat\"\>", 
   ",", "\<\"MGPT_CLPT.nb\"\>", ",", "\<\"MGPT_qfunctions.nb\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.744462722255426*^9, 3.744468308307767*^9, 
  3.744468453611348*^9, 3.744481347666196*^9, 3.744753024488139*^9, 
  3.7447538197927113`*^9, 3.744753875123172*^9, 3.744753994605227*^9, 
  3.744754235775277*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\

2. Definitions\
\>", "Subtitle",
 CellChangeTimes->{{3.506693699863208*^9, 3.506693714419594*^9}, {
   3.506694239233597*^9, 3.506694245811788*^9}, 3.6469482653506517`*^9, 
   3.693391932174884*^9, {3.7272635418586073`*^9, 3.727263557530658*^9}, {
   3.727263612299082*^9, 3.727263617969593*^9}, {3.744032532838442*^9, 
   3.74403253445984*^9}, {3.744038915050564*^9, 3.744038915754362*^9}, {
   3.7441275904862413`*^9, 3.7441275911982183`*^9}, {3.744451628567449*^9, 
   3.744451638205625*^9}, 
   3.74445179157203*^9},ExpressionUUID->"d34f82ea-747e-44fc-9b44-\
7558d7b01b5c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pi", "=", 
   RowBox[{"4.", " ", 
    RowBox[{"ArcTan", "[", "1", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pi2", "=", 
   RowBox[{"pi", "*", "pi"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"twopi2", "=", 
   RowBox[{"2.", " ", "pi2"}]}], " ", ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.731703411452982*^9, {3.731927643618544*^9, 3.731927654880117*^9}, {
   3.7319277718634663`*^9, 3.731927793150796*^9}, {3.731927931330085*^9, 
   3.731927969676676*^9}, {3.732045756320426*^9, 3.7320457607888927`*^9}, {
   3.74445310753871*^9, 3.744453111186718*^9}},
 ExpressionUUID -> "4740ee15-4dbb-46d5-ab70-9a9b6c5eb86b"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "\n3. ",
 Cell[BoxData[
  FormBox["q", TraditionalForm]],
  ExpressionUUID -> "bfc3bbf7-2990-4427-9b71-15e352d86957"],
 " Functions"
}], "Subtitle",
 CellChangeTimes->{{3.5066863565337048`*^9, 3.506686367684224*^9}, {
   3.506686613966511*^9, 3.506686622692828*^9}, {3.506694266561841*^9, 
   3.506694266695063*^9}, {3.531178815607143*^9, 3.5311788217708273`*^9}, {
   3.531497687011557*^9, 3.531497687778651*^9}, {3.642179479612159*^9, 
   3.642179480092396*^9}, {3.647774532301639*^9, 3.647774535061157*^9}, {
   3.693145116618022*^9, 3.693145116994025*^9}, 3.6933919067536697`*^9, {
   3.693391939325037*^9, 3.6933919485322*^9}, {3.7018673551434383`*^9, 
   3.701867360340748*^9}, {3.702464770521936*^9, 3.702464774128324*^9}, {
   3.703160918641246*^9, 3.70316091921454*^9}, {3.704282117232828*^9, 
   3.7042821203909883`*^9}, {3.7051398579700937`*^9, 3.7051398604013577`*^9}, 
   3.705175929006454*^9, 3.70522789957376*^9, {3.706265525893284*^9, 
   3.706265527587747*^9}, {3.706286563200179*^9, 3.706286564906068*^9}, {
   3.711195898843171*^9, 3.711195908954505*^9}, {3.7246924669451942`*^9, 
   3.7246924745430202`*^9}, {3.725789123301918*^9, 3.725789127332152*^9}, {
   3.725789212601597*^9, 3.725789238651923*^9}, {3.725803865649664*^9, 
   3.725803872614802*^9}, {3.72632131744506*^9, 3.7263213540175056`*^9}, {
   3.7265715411104527`*^9, 3.726571556388267*^9}, {3.727178889772348*^9, 
   3.7271788966050863`*^9}, {3.7276029948487883`*^9, 3.727603013967856*^9}, {
   3.727872503246994*^9, 3.727872525867734*^9}, {3.727872710023662*^9, 
   3.727872715766749*^9}, {3.728055032309638*^9, 3.728055040852248*^9}, {
   3.728055093796369*^9, 3.728055103138357*^9}, {3.728136469784626*^9, 
   3.728136471063732*^9}, {3.74403406544145*^9, 3.744034141807972*^9}, {
   3.744038948677055*^9, 3.744038949227332*^9}, {3.744112064001295*^9, 
   3.744112064114431*^9}, {3.744112358945138*^9, 3.744112359137405*^9}, {
   3.744127571590302*^9, 3.744127602094096*^9}, {3.744315452632174*^9, 
   3.744315457734589*^9}, 3.744467683332059*^9, 3.744755073498396*^9},
 ExpressionUUID -> "fa02b21b-dd17-4486-94d3-5a0edd824904"],

Cell[TextData[{
 "Dependencies: sections 1 and 2 and ",
 Cell[BoxData[
  FormBox["Q", TraditionalForm]],
  ExpressionUUID -> "72a26458-2888-4d86-a391-bf46ba540ccb"],
 " and ",
 Cell[BoxData[
  FormBox["R", TraditionalForm]],
  ExpressionUUID -> "949e44eb-97ca-4bc7-af50-76aaf6fb4bf0"],
 " ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],
  ExpressionUUID -> "d57d2bbe-109a-4b21-aba7-3706d75c97b9"],
 "-functions and power spectrum in: \[OpenCurlyDoubleQuote]kfunctions\
\[CloseCurlyDoubleQuote] data file."
}], "Text",
 CellChangeTimes->{{3.744038879277132*^9, 3.744038900282072*^9}, {
  3.744038956698884*^9, 3.744038960611829*^9}, {3.7440389940770693`*^9, 
  3.744038996437027*^9}, {3.744039814149437*^9, 3.744039823260783*^9}, {
  3.744127278585693*^9, 3.744127301496006*^9}, {3.7444508263913097`*^9, 
  3.744450845343046*^9}, {3.744451642693466*^9, 3.744451645765633*^9}, {
  3.7444519573328667`*^9, 3.744452012929335*^9}, {3.7444521440143948`*^9, 
  3.744452153325451*^9}, {3.7444531517225313`*^9, 3.744453177324583*^9}, {
  3.744453212447104*^9, 3.7444532155189257`*^9}, {3.74447995975351*^9, 
  3.744479965623229*^9}},
 ExpressionUUID -> "99dcf024-bed8-4f65-a1b2-7c4de5454416"],

Cell[CellGroupData[{

Cell[TextData[{
 "Importing tables (PSL(k), ",
 Cell[BoxData[
  FormBox["Q", TraditionalForm]],
  ExpressionUUID -> "e0748c29-dfa1-4577-a7ed-5a7298a0d07f"],
 "(k) and ",
 Cell[BoxData[
  FormBox["R", TraditionalForm]],
  ExpressionUUID -> "0c2a17ab-97f0-4a3b-bfca-3373e9fdcf42"],
 "(k) functions)"
}], "Subsection",
 CellChangeTimes->{{3.726324211483178*^9, 3.726324215250126*^9}, {
   3.72674953849334*^9, 3.726749546964682*^9}, {3.726930062878861*^9, 
   3.726930072943866*^9}, {3.727442646302916*^9, 3.7274426496492*^9}, {
   3.727694241026639*^9, 3.727694244364502*^9}, 3.728136618323822*^9, {
   3.744034202517852*^9, 3.744034262491262*^9}, {3.744452191057961*^9, 
   3.744452218296372*^9}, {3.7444691626336946`*^9, 3.74446917608624*^9}, {
   3.744469952376752*^9, 3.744469957560199*^9}},
 ExpressionUUID -> "e9905fc3-0f0d-4677-b97e-c2cec57b17e0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"QsRsTable", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"INPUTFILE", ",", "\"\<Data\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.744315609102438*^9, 3.744315613468101*^9}, {
   3.7443157563159227`*^9, 3.744315771673698*^9}, {3.744315806272093*^9, 
   3.7443158202968407`*^9}, {3.7443159639142303`*^9, 3.744315964814439*^9}, 
   3.744317949278723*^9, {3.744452352074634*^9, 3.744452359753055*^9}, {
   3.744479976884205*^9, 3.744479979040367*^9}, 3.744648622823636*^9},
 ExpressionUUID -> "7ad74938-327c-4abf-8b27-c39ad701cdc0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"QsRsTableRed", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{"QsRsTable", ",", "2"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.744316122531418*^9, 3.744316187900872*^9}, {
   3.744316288842785*^9, 3.744316289777276*^9}, {3.744316328369667*^9, 
   3.744316339648484*^9}, {3.744316547320757*^9, 3.744316571732181*^9}, 
   3.7443179563345957`*^9},
 ExpressionUUID -> "28b6fd73-f877-465b-a008-cf239d5c0c4a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"colk", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "QsRsTableRed", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"{", "1", "}"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"colPSL", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "QsRsTableRed", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"{", "18", "}"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";", 
  RowBox[{"colQ1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "QsRsTableRed", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"{", "2", "}"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"colQI", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "QsRsTableRed", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"{", "12", "}"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colQ2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "QsRsTableRed", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"{", "3", "}"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colQ5", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "QsRsTableRed", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"{", "5", "}"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colQ8", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "QsRsTableRed", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"{", "7", "}"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colR1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "QsRsTableRed", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"{", "13", "}"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colR2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "QsRsTableRed", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"{", "14", "}"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colRI", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "QsRsTableRed", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"{", "16", "}"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colR1plus2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "QsRsTableRed", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"{", "15", "}"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7443166181715803`*^9, 3.7443166279099083`*^9}, {
  3.7443166588607187`*^9, 3.744316673123776*^9}, {3.744316967510559*^9, 
  3.744317089005022*^9}, {3.744317171131432*^9, 3.744317332240417*^9}},
 ExpressionUUID -> "8a28f2f4-dd64-45ef-96db-ac0b1a9d099d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PSLT", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"colk", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"colPSL", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "colk", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"PSL", "=", 
  RowBox[{"Interpolation", "[", "PSLT", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"Q1T", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"colk", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"colQ1", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "colk", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Q1", "=", 
   RowBox[{"Interpolation", "[", "Q1T", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"QIT", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"colk", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"colQI", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "colk", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"QI", "=", 
   RowBox[{"Interpolation", "[", "QIT", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Q2T", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"colk", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"colQ2", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "colk", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Q2", "=", 
   RowBox[{"Interpolation", "[", "Q2T", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Q5T", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"colk", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"colQ5", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "colk", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Q5", "=", 
   RowBox[{"Interpolation", "[", "Q5T", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Q8T", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"colk", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"colQ8", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "colk", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Q8", "=", 
   RowBox[{"Interpolation", "[", "Q8T", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"R1T", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"colk", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"colR1", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "colk", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"R1", "=", 
   RowBox[{"Interpolation", "[", "R1T", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"R2T", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"colk", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"colR2", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "colk", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"R2", "=", 
   RowBox[{"Interpolation", "[", "R2T", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"RIT", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"colk", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"colRI", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "colk", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"RI", "=", 
   RowBox[{"Interpolation", "[", "RIT", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"R1plus2T", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"colk", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"colR1plus2", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "colk", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"R1plus2", "=", 
   RowBox[{"Interpolation", "[", "R1plus2T", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.744317363024898*^9, 3.7443175840288687`*^9}, {
   3.744317715882512*^9, 3.7443177274578876`*^9}, 3.744317969027018*^9, {
   3.7443181311017523`*^9, 3.744318133572275*^9}, {3.744318179515374*^9, 
   3.744318203019052*^9}, {3.744318248780199*^9, 3.744318337384712*^9}, {
   3.7444568484407053`*^9, 3.744456852374008*^9}, {3.744754663669915*^9, 
   3.7447546722896*^9}},
 ExpressionUUID -> "3c4d670e-3554-4ee3-9bfb-59b1fb7444f0"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{{}, {}, {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAAcyvSTUIpKEA6w2kTFwvQP0oKiEHQ
JitADOXcwdmkxz+/sJ9ZC2cuQLqKXTsVwME/qvPpm732MECKoE7AxeO6P1xU
lUD6mzJA/76pNgo1tT9Y+1B/7Tg0QMI00msqJ7E/Y+oaIfv4NUAruOYaP72r
P9YedngNmzdAtv4BoaYNpz9Ym98yOmA5QMzftgucKqM/JF5Zhx0dO0DUSB27
Gi2gP1hmZJEFvDxAlPhs29ngmz+btn3+B34+QATOl6Ny85c/IyaUkAcRQED5
tSTUPfGUPwCVcFOY9EBAwSBEp+E9kj8CJ1VjBNRBQIAN+qzvCZA/uFsCznKk
QkAdh/joep2MP3a0NmpuhkNAS+BnpMJsiT/orzNhbFlEQP6CDnUc4IY/f844
pUUoRUADg1lNELOEPx0RxRqsCEZAKsXhWmmlgj9v9hnrFNpGQAjOb79p/IA/
yf/17Aq9R0DFtnGrINJ+P0gs2jvcm0hALgqat8kYfD97+4blr2tJQG9wIODx
2Xk/te66wBBNSkDKGTHu97F3P6OEt/ZzH0tA/0cWxBHldT+3Pbx5su1LQILM
Sb/qT3Q/0hpILn7NTEBIh30fsMVyP6GanD1Mnk1AwnQTDl15cT93Pnh+p4BO
QA0IOviTNHA/AYUcGgVUT0C0UGGai0VuP1h3ZAGfEVBApW3e0nxbbD8zPn4O
AoJQQJxrrivsdmo/aFb8SObqUECMyDXRcdloP6EAPhyRXFFAfPrv5bpAZz9s
vAOWKcxRQMpZ8L2k02U/kcktPUM0UkC8byr0QJpkP7poG30jpVJApBNfYH1f
Yz89WW3qhA5TQMvYjvW/UGI/U1tD/tN1U0CBmqZBilthP2zv3Krp5VNAUEo9
crBlYD/f1NqEgE5UQNGlYk0XIl8/Vkyc992/VECnJBVnlXZdP2DV4RApL1VA
ogBf6VvwWz/Er4tX9ZZVQLw6c8oDnVo/Kxz5NogHVkCOyI6CE0VZP+zZykOc
cFZAyjxLagQZWD+xKWDpduJWQBbZ2eti6VY/CYt5NT9SV0DvzgjKUtNVP7s9
966IuldAahn/jo/gVD9wgjjBmCtYQEH7DwIT6lM/fxjeACqVWEAcb9TTRRJT
P7UZ5Pj//1hAE9SGL6ZEUj8fWoH1
                   "]]}}}, {
               DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                  None}, PlotRange -> {{0.0001, 100.}, {0., 
                 0.25067688842596036`}}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.0001`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{{}, {}, {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAAcyvSTUIpKEA6w2kTFwvQP0oKiEHQ
JitADOXcwdmkxz+/sJ9ZC2cuQLqKXTsVwME/qvPpm732MECKoE7AxeO6P1xU
lUD6mzJA/76pNgo1tT9Y+1B/7Tg0QMI00msqJ7E/Y+oaIfv4NUAruOYaP72r
P9YedngNmzdAtv4BoaYNpz9Ym98yOmA5QMzftgucKqM/JF5Zhx0dO0DUSB27
Gi2gP1hmZJEFvDxAlPhs29ngmz+btn3+B34+QATOl6Ny85c/IyaUkAcRQED5
tSTUPfGUPwCVcFOY9EBAwSBEp+E9kj8CJ1VjBNRBQIAN+qzvCZA/uFsCznKk
QkAdh/joep2MP3a0NmpuhkNAS+BnpMJsiT/orzNhbFlEQP6CDnUc4IY/f844
pUUoRUADg1lNELOEPx0RxRqsCEZAKsXhWmmlgj9v9hnrFNpGQAjOb79p/IA/
yf/17Aq9R0DFtnGrINJ+P0gs2jvcm0hALgqat8kYfD97+4blr2tJQG9wIODx
2Xk/te66wBBNSkDKGTHu97F3P6OEt/ZzH0tA/0cWxBHldT+3Pbx5su1LQILM
Sb/qT3Q/0hpILn7NTEBIh30fsMVyP6GanD1Mnk1AwnQTDl15cT93Pnh+p4BO
QA0IOviTNHA/AYUcGgVUT0C0UGGai0VuP1h3ZAGfEVBApW3e0nxbbD8zPn4O
AoJQQJxrrivsdmo/aFb8SObqUECMyDXRcdloP6EAPhyRXFFAfPrv5bpAZz9s
vAOWKcxRQMpZ8L2k02U/kcktPUM0UkC8byr0QJpkP7poG30jpVJApBNfYH1f
Yz89WW3qhA5TQMvYjvW/UGI/U1tD/tN1U0CBmqZBilthP2zv3Krp5VNAUEo9
crBlYD/f1NqEgE5UQNGlYk0XIl8/Vkyc992/VECnJBVnlXZdP2DV4RApL1VA
ogBf6VvwWz/Er4tX9ZZVQLw6c8oDnVo/Kxz5NogHVkCOyI6CE0VZP+zZykOc
cFZAyjxLagQZWD+xKWDpduJWQBbZ2eti6VY/CYt5NT9SV0DvzgjKUtNVP7s9
966IuldAahn/jo/gVD9wgjjBmCtYQEH7DwIT6lM/fxjeACqVWEAcb9TTRRJT
P7UZ5Pj//1hAE9SGL6ZEUj8fWoH1
                   "]]}}}, {
               DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                  None}, PlotRange -> {{0.0001, 100.}, {0., 
                 0.25067688842596036`}}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.0001`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("InterpolatingFunction[{{0.0001, 100.}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7444627232222643`*^9, 3.744468308555002*^9, 
  3.7444684546071157`*^9, 3.744481348786997*^9, 3.74475302534089*^9, 
  3.744753875823618*^9, 3.7447539959166317`*^9, 3.744754236902663*^9, 
  3.7447550417707872`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"kmaxQR", "=", 
  RowBox[{"Max", "[", 
   RowBox[{"QsRsTable", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"kminQR", "=", 
  RowBox[{"Min", "[", 
   RowBox[{"QsRsTable", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.744317363024898*^9, 3.7443175840288687`*^9}, {
   3.744317715882512*^9, 3.7443177274578876`*^9}, 3.744317969027018*^9, {
   3.7443181311017523`*^9, 3.744318133572275*^9}, 3.744318179515374*^9, {
   3.744754713374839*^9, 3.744754715813829*^9}},
 ExpressionUUID -> "978dc4c4-0e36-47a8-8c71-c0d705642b41"],

Cell[BoxData["100.`"], "Output",
 CellChangeTimes->{3.744462723692952*^9, 3.744468308831585*^9, 
  3.7444684550532703`*^9, 3.744481349214129*^9, 3.744753025932005*^9, 
  3.744753876370511*^9, 3.7447539965747147`*^9, 3.744754237586911*^9}],

Cell[BoxData["0.0001`"], "Output",
 CellChangeTimes->{3.744462723692952*^9, 3.744468308831585*^9, 
  3.7444684550532703`*^9, 3.744481349214129*^9, 3.744753025932005*^9, 
  3.744753876370511*^9, 3.7447539965747147`*^9, 3.744754237587997*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Bessel functions", "Subsection",
 CellChangeTimes->{{3.731703373869669*^9, 3.7317033766407623`*^9}},
 ExpressionUUID -> "90f3b071-e3db-413e-a7e4-e8489caf4ba5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"j0", "[", "x_", "]"}], ":=", 
  FractionBox[
   RowBox[{"Sin", "[", "x", "]"}], "x"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j1", "[", "x_", "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{"Sin", "[", "x", "]"}], 
    RowBox[{"x", "^", "2"}]], "-", 
   FractionBox[
    RowBox[{"Cos", "[", "x", "]"}], "x"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j2", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox["3", 
       RowBox[{"x", "^", "2"}]], "-", "1"}], ")"}], 
    FractionBox[
     RowBox[{"Sin", "[", "x", "]"}], "x"]}], "-", 
   FractionBox[
    RowBox[{"3", " ", 
     RowBox[{"Cos", "[", "x", "]"}]}], 
    RowBox[{"x", "^", "2"}]]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j3", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox["15", 
       RowBox[{"x", "^", "3"}]], "-", 
      FractionBox["6", "x"]}], ")"}], 
    FractionBox[
     RowBox[{"Sin", "[", "x", "]"}], "x"]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox["15", 
       RowBox[{"x", "^", "2"}]], "-", "1"}], ")"}], 
    FractionBox[
     RowBox[{"Cos", "[", "x", "]"}], 
     "x"]}]}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.73153421631081*^9, 3.731534218847816*^9}, {
  3.731534272032099*^9, 3.731534545098504*^9}},
 ExpressionUUID -> "8223dd7d-7038-4e35-b15d-327c2db59346"]
}, Closed]],

Cell[CellGroupData[{

Cell[" Create tables of k and q points", "Subsection",
 CellChangeTimes->{{3.731703387773542*^9, 3.731703390788002*^9}, {
  3.7317034667810373`*^9, 3.7317034777446623`*^9}, {3.744469149023135*^9, 
  3.744469152883708*^9}, {3.7444708602838383`*^9, 3.744470865293599*^9}},
 ExpressionUUID -> "1417643a-1bc4-4c85-8ad2-b84f3ee03d36"],

Cell[TextData[{
 "kT is used in all q functions except in ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Chi]", "L"], TraditionalForm]],
  ExpressionUUID -> "228a2a22-2d2e-4b79-8313-91c9450a29b4"],
 " (linear correlation function) and its derivatives"
}], "Text",
 CellChangeTimes->{{3.7317035021177683`*^9, 3.731703529206036*^9}, {
  3.744037357251812*^9, 3.74403737120758*^9}, {3.744453025518811*^9, 
  3.7444530304689503`*^9}, {3.744754303683715*^9, 3.7447543100541067`*^9}},
 ExpressionUUID -> "39cd8834-e8ea-4a65-9b03-e819181486d6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Nkpoints", "=", "1200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"kmin", "=", "kminQR"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"kmax", "=", "20"}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kmax", "=", "kmaxQR"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dk", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Log10", "[", "kmax", "]"}], "-", 
      RowBox[{"Log10", "[", "kmin", "]"}]}], ")"}], "/", 
    RowBox[{"(", "Nkpoints", ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kT", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     SuperscriptBox["10", 
      RowBox[{
       RowBox[{"Log10", "[", "kmin", "]"}], "+", 
       RowBox[{"ii", "*", "dk"}]}]], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "0", ",", "Nkpoints"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sizekT", "=", 
   RowBox[{
    RowBox[{"Dimensions", "[", "kT", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<kT2 : sizekT=\>\"", ",", "sizekT", ",", "\"\<, kmin=\>\"", ",", 
   RowBox[{"Min", "[", "kT", "]"}], ",", "\"\<, k2max=\>\"", ",", 
   RowBox[{"Max", "[", "kT", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.731534863442751*^9, 3.731534897779778*^9}, {
   3.731535107842719*^9, 3.7315351079728937`*^9}, {3.731535520401441*^9, 
   3.731535527685329*^9}, {3.731535621372406*^9, 3.731535633004611*^9}, {
   3.7315761299891567`*^9, 3.731576190863078*^9}, {3.73192705846504*^9, 
   3.731927062622786*^9}, {3.7319274510610313`*^9, 3.731927627967805*^9}, {
   3.731927823077669*^9, 3.7319278279745827`*^9}, {3.732021742977648*^9, 
   3.7320217590460043`*^9}, {3.732021993556409*^9, 3.732022007238514*^9}, {
   3.732022283729018*^9, 3.7320222838280907`*^9}, 3.7320227888572063`*^9, {
   3.732031865499926*^9, 3.732031870642115*^9}, {3.732272714632001*^9, 
   3.732272734156783*^9}, 3.7440206790100718`*^9, 3.744754047293043*^9, {
   3.744754164710886*^9, 3.744754180009673*^9}},
 ExpressionUUID -> "18ece467-e3ba-4f7e-b5ee-53d032610d46"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"kT2 : sizekT=\"\>", "\[InvisibleSpace]", "1201", 
   "\[InvisibleSpace]", "\<\", kmin=\"\>", "\[InvisibleSpace]", "0.0001`", 
   "\[InvisibleSpace]", "\<\", k2max=\"\>", "\[InvisibleSpace]", "100.`"}],
  SequenceForm["kT2 : sizekT=", 1201, ", kmin=", 0.0001, ", k2max=", 100.],
  Editable->False]], "Print",
 CellChangeTimes->{3.744462723794423*^9, 3.744468308851663*^9, 
  3.744468455077286*^9, 3.7444813493053083`*^9, 3.7447530260280523`*^9, 
  3.744753876395706*^9, 3.7447539966306133`*^9, 3.74475423762776*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"qmin", "=", "0.0001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qmax", "=", 
   RowBox[{"Min", "[", 
    RowBox[{"300", ",", 
     RowBox[{"1", "/", "kminQR"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nqpoints", "=", "1200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Log10", "[", "qmax", "]"}], "-", 
      RowBox[{"Log10", "[", "qmin", "]"}]}], ")"}], "/", 
    RowBox[{"(", "Nqpoints", ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qT", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     SuperscriptBox["10", 
      RowBox[{
       RowBox[{"Log10", "[", "qmin", "]"}], "+", 
       RowBox[{"ii", "*", "d"}]}]], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "0", ",", "Nqpoints"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sizeqT", "=", 
   RowBox[{
    RowBox[{"Dimensions", "[", "qT", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<qT : sizeqT=\>\"", ",", "sizeqT", ",", "\"\<, qmin=\>\"", ",", 
   RowBox[{"Min", "[", "qT", "]"}], ",", "\"\<, qmax=\>\"", ",", 
   RowBox[{"Max", "[", "qT", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.731534863442751*^9, 3.731534897779778*^9}, {
   3.731535107842719*^9, 3.7315351079728937`*^9}, {3.731535520401441*^9, 
   3.731535527685329*^9}, {3.731535621372406*^9, 3.731535633004611*^9}, {
   3.7315761299891567`*^9, 3.731576190863078*^9}, {3.73192705846504*^9, 
   3.731927062622786*^9}, {3.7319274510610313`*^9, 3.731927627967805*^9}, {
   3.731927823077669*^9, 3.7319278279745827`*^9}, {3.732021742977648*^9, 
   3.7320217590460043`*^9}, {3.732021993556409*^9, 3.732022007238514*^9}, {
   3.732022283729018*^9, 3.7320222838280907`*^9}, 3.7320227888572063`*^9, {
   3.732031865499926*^9, 3.732031870642115*^9}, {3.732272714632001*^9, 
   3.732272734156783*^9}, {3.7440206790100718`*^9, 3.744020680419265*^9}},
 ExpressionUUID -> "43456817-722b-49a6-a221-c69c1d8ee289"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"qT : sizeqT=\"\>", "\[InvisibleSpace]", "1201", 
   "\[InvisibleSpace]", "\<\", qmin=\"\>", "\[InvisibleSpace]", "0.0001`", 
   "\[InvisibleSpace]", "\<\", qmax=\"\>", "\[InvisibleSpace]", 
   "300.00000000000074`"}],
  SequenceForm[
  "qT : sizeqT=", 1201, ", qmin=", 0.0001, ", qmax=", 300.00000000000074`],
  Editable->False]], "Print",
 CellChangeTimes->{3.7444627238129272`*^9, 3.744468308862381*^9, 
  3.744468455089674*^9, 3.744481349318006*^9, 3.744753026354377*^9, 
  3.744753876740506*^9, 3.7447539966707783`*^9, 3.744754237656323*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox["q", TraditionalForm]],
  ExpressionUUID -> "42019721-758e-4fa9-a844-e3aa4e501cbf"],
 " functions (except linear correlation function and its derivatives)"
}], "Subsection",
 CellChangeTimes->{{3.731927386527287*^9, 3.7319274000845947`*^9}, {
  3.744037439343425*^9, 3.744037471683899*^9}, {3.744467750542161*^9, 
  3.744467757343707*^9}, {3.744469939296172*^9, 3.744469948874527*^9}, {
  3.744470850397292*^9, 3.7444708541341257`*^9}},
 ExpressionUUID -> "202840c4-8c5f-4abe-882e-890881e64074"],

Cell[CellGroupData[{

Cell["Define kernels", "Subsubsection",
 CellChangeTimes->{{3.73192873206299*^9, 
  3.731928747346799*^9}},ExpressionUUID->"19d61210-c723-4701-8220-\
4fd5b4547e58"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tildeV", "[", "k_", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{"3.", "/", "35."}], ")"}]}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"QI", "[", "k", "]"}], "-", 
     RowBox[{"3.", 
      RowBox[{"Q2", "[", "k", "]"}]}], "+", 
     RowBox[{"2.", " ", 
      RowBox[{"RI", "[", "k", "]"}]}], "-", 
     RowBox[{"6.", 
      RowBox[{"R2", "[", "k", "]"}]}]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tildeT", "[", "k_", "]"}], ":=", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{"9.", "/", "14."}], ")"}]}], "  ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"QI", "[", "k", "]"}], "+", 
     RowBox[{"2.", 
      RowBox[{"Q2", "[", "k", "]"}]}], "+", 
     RowBox[{"2.", " ", 
      RowBox[{"RI", "[", "k", "]"}]}], "+", 
     RowBox[{"4.", 
      RowBox[{"R2", "[", "k", "]"}]}]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xL", "[", 
   RowBox[{"k_", ",", "q_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"PSL", "[", "k", "]"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"1.", "/", "3."}], "-", 
     FractionBox[
      RowBox[{"j1", "[", 
       RowBox[{"k", " ", "q"}], "]"}], 
      RowBox[{"k", " ", "q"}]]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xloop", "[", 
   RowBox[{"k_", ",", "q_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"9.", "/", "98."}], 
      RowBox[{"Q1", "[", "k", "]"}]}], "+", 
     RowBox[{
      RowBox[{"10.", "/", "21."}], " ", 
      RowBox[{"R1", "[", "k", "]"}]}]}], ")"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"1.", "/", "3."}], "-", 
     FractionBox[
      RowBox[{"j1", "[", 
       RowBox[{"k", " ", "q"}], "]"}], 
      RowBox[{"k", " ", "q"}]]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yL", "[", 
   RowBox[{"k_", ",", "q_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"PSL", "[", "k", "]"}], " ", 
   RowBox[{"j2", "[", 
    RowBox[{"k", " ", "q"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yloop", "[", 
   RowBox[{"k_", ",", "q_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"9.", "/", "98."}], 
      RowBox[{"Q1", "[", "k", "]"}]}], "+", 
     RowBox[{
      RowBox[{"10.", "/", "21."}], " ", 
      RowBox[{"R1", "[", "k", "]"}]}]}], ")"}], 
   RowBox[{"j2", "[", 
    RowBox[{"k", " ", "q"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x10", "[", 
   RowBox[{"k_", ",", "q_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"1.", "/", "14."}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2.", 
      RowBox[{"RI", "[", "k", "]"}]}], "-", 
     RowBox[{"2.", 
      RowBox[{"R2", "[", "k", "]"}]}], "+", 
     RowBox[{"3.", 
      RowBox[{"RI", "[", "k", "]"}], " ", 
      RowBox[{"j0", "[", 
       RowBox[{"k", " ", "q"}], "]"}]}], "-", 
     RowBox[{"3", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"RI", "[", "k", "]"}], "+", 
        RowBox[{"2.", 
         RowBox[{"R2", "[", "k", "]"}]}], "+", 
        RowBox[{"2.", 
         RowBox[{"R1plus2", "[", "k", "]"}]}], "+", 
        RowBox[{"2.", 
         RowBox[{"Q5", "[", "k", "]"}]}]}], ")"}], 
      FractionBox[
       RowBox[{"j1", "[", 
        RowBox[{"k", " ", "q"}], "]"}], 
       RowBox[{"k", " ", "q"}]]}]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y10", "[", 
   RowBox[{"k_", ",", "q_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "3."}], "/", "14."}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"RI", "[", "k", "]"}], "+", 
     RowBox[{"2.", 
      RowBox[{"R2", "[", "k", "]"}]}], "+", 
     RowBox[{"2.", 
      RowBox[{"R1plus2", "[", "k", "]"}]}], "+", 
     RowBox[{"2.", 
      RowBox[{"Q5", "[", "k", "]"}]}]}], ")"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"j0", "[", 
      RowBox[{"k", " ", "q"}], "]"}], "-", 
     RowBox[{"3", 
      FractionBox[
       RowBox[{"j1", "[", 
        RowBox[{"k", " ", "q"}], "]"}], 
       RowBox[{"k", " ", "q"}]]}]}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.731701163610958*^9, 3.731701164333043*^9}, {
  3.731927899666473*^9, 3.73192791585*^9}, {3.731928267798871*^9, 
  3.731928322592428*^9}},
 ExpressionUUID -> "121bd9e6-a3e0-407d-ab5d-999276497e06"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Integrate:", "Subsubsection",
 CellChangeTimes->{{3.731928765531499*^9, 
  3.731928774678957*^9}},ExpressionUUID->"53f32edc-f513-4dfc-aba8-\
a62a4de16fbd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"U10LT", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"U10loopT", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"U11T", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"U20T", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XLT", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XloopT", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YLT", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YloopT", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"X10T", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Y10T", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"VT", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TT", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kmin", "=", 
     RowBox[{"kT", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"ta", "=", 
        RowBox[{"AbsoluteTime", "[", "]"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"qi", "=", 
        RowBox[{"qT", "[", 
         RowBox[{"[", "qoutin", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"U10Lp", "=", "0"}], "  ", ";", 
       RowBox[{"U10loopp", "=", "0"}], "  ", ";", 
       RowBox[{"U11p", "=", "0"}], "  ", ";", 
       RowBox[{"U20p", "=", "0"}], "  ", ";", "\[IndentingNewLine]", 
       RowBox[{"U10LA", "=", 
        RowBox[{
         RowBox[{"-", " ", "kmin"}], "*", 
         RowBox[{"(", 
          RowBox[{"PSL", "[", "kmin", "]"}], ")"}], 
         RowBox[{"j1", "[", 
          RowBox[{"kmin", " ", "qi"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"U10loopA", "=", 
        RowBox[{
         RowBox[{"-", " ", "kmin"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"5.", "/", "21."}], 
           RowBox[{"R1", "[", "kmin", "]"}]}], ")"}], 
         RowBox[{"j1", "[", 
          RowBox[{"kmin", " ", "qi"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"U11A", "=", 
        RowBox[{
         RowBox[{"-", " ", "kmin"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6.", "/", "7."}], 
           RowBox[{"R1plus2", "[", "kmin", "]"}]}], ")"}], 
         RowBox[{"j1", "[", 
          RowBox[{"kmin", " ", "qi"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"U20A", "=", 
        RowBox[{
         RowBox[{"-", " ", "kmin"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"3.", "/", "7."}], 
           RowBox[{"Q8", "[", "kmin", "]"}]}], ")"}], 
         RowBox[{"j1", "[", 
          RowBox[{"kmin", " ", "qi"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"XLp", "=", "0"}], "  ", ";", 
       RowBox[{"Xloopp", "=", "0"}], " ", ";", 
       RowBox[{"YLp", "=", "0"}], "  ", ";", 
       RowBox[{"Yloopp", "=", "0"}], "  ", ";", 
       RowBox[{"X10p", "=", "0"}], "  ", ";", 
       RowBox[{"Y10p", "=", "0"}], "  ", ";", "\[IndentingNewLine]", 
       RowBox[{"XLA", "=", 
        RowBox[{"xL", "[", 
         RowBox[{"kmin", ",", "qi"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"XloopA", "=", 
        RowBox[{"xloop", "[", 
         RowBox[{"kmin", ",", "qi"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"YLA", "=", 
        RowBox[{"yL", "[", 
         RowBox[{"kmin", ",", "qi"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"YloopA", "=", 
        RowBox[{"yloop", "[", 
         RowBox[{"kmin", ",", "qi"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"X10A", "=", 
        RowBox[{"x10", "[", 
         RowBox[{"kmin", ",", "qi"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Y10A", "=", 
        RowBox[{"y10", "[", 
         RowBox[{"kmin", ",", "qi"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"preVp", "=", "0"}], "  ", ";", 
       RowBox[{"Tp", "=", "0"}], "  ", ";", "\[IndentingNewLine]", 
       RowBox[{"preVA", "=", 
        RowBox[{
         RowBox[{"tildeV", "[", "kmin", "]"}], 
         RowBox[{
          RowBox[{"j1", "[", 
           RowBox[{"kmin", " ", "qi"}], "]"}], "/", "kmin"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"TA", "=", " ", 
        RowBox[{
         RowBox[{"tildeT", "[", "kmin", "]"}], 
         RowBox[{
          RowBox[{"j3", "[", 
           RowBox[{"kmin", " ", "qi"}], "]"}], "/", "kmin"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"kk", "=", 
           RowBox[{"kT", "[", 
            RowBox[{"[", "kii", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"deltak", "=", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"kT", "[", 
              RowBox[{"[", "kii", "]"}], "]"}], "-", 
             RowBox[{"kT", "[", 
              RowBox[{"[", 
               RowBox[{"kii", "-", "1"}], "]"}], "]"}]}], ")"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"U10LB", "=", 
           RowBox[{
            RowBox[{"-", " ", "kk"}], "*", 
            RowBox[{"(", 
             RowBox[{"PSL", "[", "kk", "]"}], ")"}], 
            RowBox[{"j1", "[", 
             RowBox[{"kk", " ", "qi"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"U10loopB", "=", 
           RowBox[{
            RowBox[{"-", " ", "kk"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"5.", "/", "21."}], 
              RowBox[{"R1", "[", "kk", "]"}]}], ")"}], 
            RowBox[{"j1", "[", 
             RowBox[{"kk", " ", "qi"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"U11B", "=", 
           RowBox[{
            RowBox[{"-", " ", "kk"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"6.", "/", "7."}], 
              RowBox[{"R1plus2", "[", "kk", "]"}]}], ")"}], 
            RowBox[{"j1", "[", 
             RowBox[{"kk", " ", "qi"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"U20B", "=", 
           RowBox[{
            RowBox[{"-", " ", "kk"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"3.", "/", "7."}], 
              RowBox[{"Q8", "[", "kk", "]"}]}], ")"}], 
            RowBox[{"j1", "[", 
             RowBox[{"kk", " ", "qi"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"U10Lp", "=", 
           RowBox[{"U10Lp", "+", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"U10LA", "+", "U10LB"}], ")"}], "/", "2"}], "*", 
             "deltak"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"U10LA", "=", "U10LB"}], ";", "\[IndentingNewLine]", 
          RowBox[{"U10loopp", "=", 
           RowBox[{"U10loopp", "+", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"U10loopA", "+", "U10loopB"}], ")"}], "/", "2"}], "*", 
             "deltak"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"U10loopA", "=", "U10loopB"}], ";", "\[IndentingNewLine]", 
          RowBox[{"U11p", "=", 
           RowBox[{"U11p", "+", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"U11A", "+", "U11B"}], ")"}], "/", "2"}], "*", 
             "deltak"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"U11A", "=", "U11B"}], ";", "\[IndentingNewLine]", 
          RowBox[{"U20p", "=", 
           RowBox[{"U20p", "+", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"U20A", "+", "U20B"}], ")"}], "/", "2"}], "*", 
             "deltak"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"U20A", "=", "U20B"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"XLB", "=", 
           RowBox[{"xL", "[", 
            RowBox[{"kk", ",", "qi"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"XloopB", "=", 
           RowBox[{"xloop", "[", 
            RowBox[{"kk", ",", "qi"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"YLB", "=", 
           RowBox[{"yL", "[", 
            RowBox[{"kk", ",", "qi"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"YloopB", "=", 
           RowBox[{"yloop", "[", 
            RowBox[{"kk", ",", "qi"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"X10B", "=", 
           RowBox[{"x10", "[", 
            RowBox[{"kk", ",", "qi"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Y10B", "=", 
           RowBox[{"y10", "[", 
            RowBox[{"kk", ",", "qi"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"XLp", "=", 
           RowBox[{"XLp", "+", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"XLA", "+", "XLB"}], ")"}], "/", "2"}], "*", 
             "deltak"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"XLA", "=", "XLB"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Xloopp", "=", 
           RowBox[{"Xloopp", "+", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"XloopA", "+", "XloopB"}], ")"}], "/", "2"}], "*", 
             "deltak"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"XloopA", "=", "XloopB"}], ";", "\[IndentingNewLine]", 
          RowBox[{"YLp", "=", 
           RowBox[{"YLp", "+", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"YLA", "+", "YLB"}], ")"}], "/", "2"}], "*", 
             "deltak"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"YLA", "=", "YLB"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Yloopp", "=", 
           RowBox[{"Yloopp", "+", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"YloopA", "+", "YloopB"}], ")"}], "/", "2"}], "*", 
             "deltak"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"YloopA", "=", "YloopB"}], ";", "\[IndentingNewLine]", 
          RowBox[{"X10p", "=", 
           RowBox[{"X10p", "+", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"X10A", "+", "X10B"}], ")"}], "/", "2"}], "*", 
             "deltak"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"X10A", "=", "X10B"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Y10p", "=", 
           RowBox[{"Y10p", "+", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Y10A", "+", "Y10B"}], ")"}], "/", "2"}], "*", 
             "deltak"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Y10A", "=", "Y10B"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"preVB", "=", 
           RowBox[{
            RowBox[{"tildeV", "[", "kk", "]"}], 
            RowBox[{
             RowBox[{"j1", "[", 
              RowBox[{"kk", " ", "qi"}], "]"}], "/", "kk"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"TB", "=", 
           RowBox[{
            RowBox[{"tildeT", "[", "kk", "]"}], 
            RowBox[{
             RowBox[{"j3", "[", 
              RowBox[{"kk", " ", "qi"}], "]"}], "/", "kk"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Tp", "=", 
           RowBox[{"Tp", "+", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"TA", "+", "TB"}], ")"}], "/", "2"}], "*", 
             "deltak"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"TA", "=", "TB"}], ";", "\[IndentingNewLine]", 
          RowBox[{"preVp", "=", 
           RowBox[{"preVp", "+", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"preVA", "+", "preVB"}], ")"}], "/", "2"}], "*", 
             "deltak"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"preVA", "=", "preVB"}], ";"}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"kii", ",", "2", ",", "sizekT"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"U10Lp", "=", 
        RowBox[{"U10Lp", "/", "twopi2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"U10loopp", "=", 
        RowBox[{"U10loopp", "/", "twopi2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"U11p", "=", 
        RowBox[{"U11p", "/", "twopi2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"U20p", "=", 
        RowBox[{"U20p", "/", "twopi2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"U10LT", "  ", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"U10LT", ",", "   ", 
          RowBox[{"{", 
           RowBox[{"qi", ",", "U10Lp"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"U10loopT", "  ", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"U10loopT", ",", "   ", 
          RowBox[{"{", 
           RowBox[{"qi", ",", "U10loopp"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"U11T", "  ", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"U11T", ",", "   ", 
          RowBox[{"{", 
           RowBox[{"qi", ",", "U11p"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"U20T", "  ", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"U20T", ",", "   ", 
          RowBox[{"{", 
           RowBox[{"qi", ",", "U20p"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"XLp", "=", 
        RowBox[{"XLp", "/", "pi2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"YLp", "=", 
        RowBox[{"YLp", "/", "pi2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Xloopp", "=", 
        RowBox[{"Xloopp", "/", "pi2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Yloopp", "=", 
        RowBox[{"Yloopp", "/", "pi2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"X10p", "=", 
        RowBox[{"X10p", "/", "pi2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Y10p", "=", 
        RowBox[{"Y10p", "/", "pi2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"XLT", "  ", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"XLT", ",", "   ", 
          RowBox[{"{", 
           RowBox[{"qi", ",", "XLp"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"XloopT", "  ", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"XloopT", ",", "   ", 
          RowBox[{"{", 
           RowBox[{"qi", ",", "Xloopp"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"YLT", "  ", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"YLT", ",", "   ", 
          RowBox[{"{", 
           RowBox[{"qi", ",", "YLp"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"YloopT", "  ", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"YloopT", ",", "   ", 
          RowBox[{"{", 
           RowBox[{"qi", ",", "Yloopp"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"X10T", "  ", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"X10T", ",", "   ", 
          RowBox[{"{", 
           RowBox[{"qi", ",", "X10p"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Y10T", "  ", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"Y10T", ",", "   ", 
          RowBox[{"{", 
           RowBox[{"qi", ",", "Y10p"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Vp", "=", 
        RowBox[{
         RowBox[{"preVp", "/", "pi2"}], "-", 
         RowBox[{
          RowBox[{"1", "/", "5."}], " ", 
          RowBox[{"Tp", "/", "pi2"}]}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Tp", "=", 
        RowBox[{"Tp", "/", "pi2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"qi", "<", "0.05"}], ",", 
         RowBox[{"Vp", "=", "0"}], ",", 
         RowBox[{"Vp", "=", "Vp"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"qi", "<", "0.05"}], ",", 
         RowBox[{"Tp", "=", "0"}], ",", 
         RowBox[{"Tp", "=", "Tp"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"VT", "  ", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"VT", ",", "   ", 
          RowBox[{"{", 
           RowBox[{"qi", ",", "Vp"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"TT", "  ", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"TT", ",", "   ", 
          RowBox[{"{", 
           RowBox[{"qi", ",", "Tp"}], "}"}]}], "]"}]}], ";"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{
         "qoutin", ",", "\"\<: q=\>\"", ",", "qi", ",", " ", 
          "\"\<:    U  = \>\"", ",", "U10p", ",", " ", "\"\<,     time= \>\"",
           ",", 
          RowBox[{
           RowBox[{"AbsoluteTime", "[", "]"}], "-", "ta"}]}], "]"}], ";"}], 
       "*)"}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"qoutin", ",", "1", ",", "sizeqT"}], "}"}]}], "]"}], "//", 
    "AbsoluteTiming"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7319279989146233`*^9, 3.731928104139935*^9}, {
   3.731928134293325*^9, 3.73192825076374*^9}, {3.73192833651369*^9, 
   3.7319283983731413`*^9}, {3.731928429823647*^9, 3.731928430204953*^9}, {
   3.73192846383047*^9, 3.73192867555795*^9}, 3.731928791386606*^9, {
   3.731929544254753*^9, 3.7319295459211073`*^9}, 3.731929727793606*^9, {
   3.744020925099435*^9, 3.744020938923373*^9}, {3.744021117559992*^9, 
   3.7440211196557426`*^9}, {3.7444677041555758`*^9, 
   3.7444677285245934`*^9}, {3.7444679475723248`*^9, 3.744468039435051*^9}, 
   3.744469376451172*^9, {3.744469737326007*^9, 3.744469826124918*^9}, {
   3.744470386199065*^9, 3.744470391181775*^9}, 3.7447562301151257`*^9},
 ExpressionUUID -> "3ee14f6e-1b8b-4633-84f9-c46dde5bf2e6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "280.58375499999999647116055712103843688965`8.468662436286683", ",", 
   "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.744462723871805*^9, 3.7444683088832912`*^9, 
  3.744468455117586*^9, 3.744469386341633*^9, 3.74446985827218*^9, 
  3.7444703919898987`*^9, 3.744481349354225*^9, 3.744753026465119*^9, 
  3.7447538775691*^9, 3.744753996715952*^9, 3.7447545182911167`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Linear Correlation Function and its derivatives", "Subsection",
 CellChangeTimes->{{3.7319300034030333`*^9, 3.731930027376251*^9}, {
   3.744037483447528*^9, 3.744037484561626*^9}, {3.744469144487576*^9, 
   3.7444691448295317`*^9}, 3.7444699297668037`*^9},
 ExpressionUUID -> "fd73ec98-19b5-4720-8249-a497db88a067"],

Cell["\<\
This is the Fourier Transform of PS. It should be computed with much more k \
points to avoid aliasing\
\>", "Text",
 CellChangeTimes->{{3.7319302155695953`*^9, 
  3.731930267973612*^9}},ExpressionUUID->"9a4dbb3f-90aa-4cc4-9475-\
e83258705b26"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Nkpoints2", "=", "12000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k2min", "=", "kminQR"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k2max", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dk", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Log10", "[", "k2max", "]"}], "-", 
      RowBox[{"Log10", "[", "k2min", "]"}]}], ")"}], "/", 
    RowBox[{"(", "Nkpoints2", ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kT2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     SuperscriptBox["10", 
      RowBox[{
       RowBox[{"Log10", "[", "k2min", "]"}], "+", 
       RowBox[{"ii", "*", "dk"}]}]], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "0", ",", "Nkpoints2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Max", "[", "%", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Min", "[", "%%", "]"}], "\[IndentingNewLine]", 
 RowBox[{"sizekT2", "=", 
  RowBox[{
   RowBox[{"Dimensions", "[", "kT2", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.731930058591652*^9, 3.731930074420397*^9}, {
  3.7447541977376633`*^9, 3.7447541998535147`*^9}},
 ExpressionUUID -> "8cb4c646-a762-4438-9a2e-dc264920319c"],

Cell[BoxData["20.000000000000004`"], "Output",
 CellChangeTimes->{3.7444630161568317`*^9, 3.744468729568728*^9, 
  3.744481650515201*^9, 3.744754518382634*^9}],

Cell[BoxData["0.0001`"], "Output",
 CellChangeTimes->{3.7444630161568317`*^9, 3.744468729568728*^9, 
  3.744481650515201*^9, 3.744754518384046*^9}],

Cell[BoxData["12001"], "Output",
 CellChangeTimes->{3.7444630161568317`*^9, 3.744468729568728*^9, 
  3.744481650515201*^9, 3.744754518385193*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xiLT", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LapxiLT", "=", 
    RowBox[{"{", "}"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Laplacian", " ", "of", " ", "xi_L"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nabla4xiLT", "=", 
    RowBox[{"{", "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"nabla4", " ", "xi_L"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"kmin", "=", 
  RowBox[{"kT2", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ta", "=", 
      RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"qi", "=", 
      RowBox[{"qT", "[", 
       RowBox[{"[", "qoutin", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xip", "=", "0"}], "  ", ";", "\[IndentingNewLine]", 
     RowBox[{"xiA", "=", " ", 
      RowBox[{
       RowBox[{"kmin", " ", "^", "2"}], 
       RowBox[{"PSL", "[", "kmin", "]"}], 
       RowBox[{"j0", "[", 
        RowBox[{"kmin", " ", "qi"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Lapxip", "=", "0"}], "  ", ";", "\[IndentingNewLine]", 
     RowBox[{"LapxiA", "=", " ", 
      RowBox[{
       RowBox[{"kmin", " ", "^", "4"}], 
       RowBox[{"PSL", "[", "kmin", "]"}], 
       RowBox[{"j0", "[", 
        RowBox[{"kmin", " ", "qi"}], "]"}], 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         RowBox[{
          RowBox[{"(", "kmin", ")"}], "^", "2"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nabla4xip", "=", "0"}], "  ", ";", "\[IndentingNewLine]", 
     RowBox[{"nabla4xiA", "=", " ", 
      RowBox[{
       RowBox[{"kmin", " ", "^", "6"}], 
       RowBox[{"PSL", "[", "kmin", "]"}], 
       RowBox[{"j0", "[", 
        RowBox[{"kmin", " ", "qi"}], "]"}], 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "*", "kmin"}], ")"}], "^", "2"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"kk", "=", 
         RowBox[{"kT2", "[", 
          RowBox[{"[", "kii", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"xiB", "=", " ", 
         RowBox[{
          RowBox[{"kk", " ", "^", "2"}], 
          RowBox[{"PSL", "[", "kk", "]"}], 
          RowBox[{"j0", "[", 
           RowBox[{"kk", " ", "qi"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"LapxiB", "=", " ", 
         RowBox[{
          RowBox[{"kk", "^", "2"}], "*", "xiB", " ", "*", " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            RowBox[{
             RowBox[{"(", "kk", " ", ")"}], "^", "2"}]}], "]"}]}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"with", " ", "antialising", " ", "exponential"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"nabla4xiB", "=", " ", 
         RowBox[{
          RowBox[{"kk", "^", "4"}], "*", "xiB", " ", "*", " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "*", "kk"}], " ", ")"}], "^", "2"}]}], "]"}]}]}], 
        ";", 
        RowBox[{"(*", " ", 
         RowBox[{"with", " ", "antialising", " ", "exponential"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"deltak", "=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"kT2", "[", 
            RowBox[{"[", "kii", "]"}], "]"}], "-", 
           RowBox[{"kT2", "[", 
            RowBox[{"[", 
             RowBox[{"kii", "-", "1"}], "]"}], "]"}]}], ")"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"xip", "=", 
         RowBox[{"xip", "+", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"xiA", "+", "xiB"}], ")"}], "/", "2"}], "*", 
           "deltak"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"xiA", "=", "xiB"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Lapxip", "=", 
         RowBox[{"Lapxip", "+", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"LapxiA", "+", "LapxiB"}], ")"}], "/", "2"}], "*", 
           "deltak"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"LapxiA", "=", "LapxiB"}], ";", "\[IndentingNewLine]", 
        RowBox[{"nabla4xip", "=", 
         RowBox[{"nabla4xip", "+", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"nabla4xiA", "+", "nabla4xiB"}], ")"}], "/", "2"}], "*", 
           "deltak"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"nabla4xiA", "=", "nabla4xiB"}], ";"}], "\[IndentingNewLine]",
        ",", 
       RowBox[{"{", 
        RowBox[{"kii", ",", "2", ",", "sizekT2"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xip", "=", 
      RowBox[{"xip", "/", "twopi2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Lapxip", "=", 
      RowBox[{
       RowBox[{"-", " ", "Lapxip"}], "/", "twopi2"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nabla4xip", "=", 
      RowBox[{"nabla4xip", "/", "twopi2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xiLT", "  ", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"xiLT", ",", "   ", 
        RowBox[{"{", 
         RowBox[{"qi", ",", "xip"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"LapxiLT", "  ", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"LapxiLT", ",", "   ", 
        RowBox[{"{", 
         RowBox[{"qi", ",", "Lapxip"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nabla4xiLT", "  ", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"nabla4xiLT", ",", "   ", 
        RowBox[{"{", 
         RowBox[{"qi", ",", "nabla4xip"}], "}"}]}], "]"}]}], ";"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"qoutin", ",", "1", ",", "sizeqT"}], "}"}]}], "]"}], "//", 
  "AbsoluteTiming"}]}], "Input",
 CellChangeTimes->{{3.7319301466561213`*^9, 3.731930189791163*^9}, {
   3.735229513902605*^9, 3.7352295161786337`*^9}, {3.7352295483739243`*^9, 
   3.735229650204205*^9}, {3.738399391584723*^9, 3.738399432708582*^9}, 
   3.742819144309723*^9, 3.7440218716943207`*^9, {3.744466471282648*^9, 
   3.7444665482555532`*^9}, {3.744466626764433*^9, 3.744466761298883*^9}, {
   3.7444671259891644`*^9, 3.744467155188302*^9}},
 ExpressionUUID -> "31c55317-6dcb-42ba-bb54-1767d775f0bf"],

Cell[BoxData["0.0001`"], "Output",
 CellChangeTimes->{3.74446301618076*^9, 3.744466780593371*^9, 
  3.744467160514702*^9, 3.744468729583164*^9, 3.744481650531324*^9, 
  3.7447545183909817`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "264.92817500000001018634065985679626464844`8.443728061068532", ",", 
   "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.74446301618076*^9, 3.744466780593371*^9, 
  3.744467160514702*^9, 3.744468729583164*^9, 3.744481650531324*^9, 
  3.744754783322897*^9}]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.731930127253392*^9, 3.731930170398913*^9}, {
   3.735229668586486*^9, 3.735229692204973*^9}, {3.73839943788476*^9, 
   3.738399440878607*^9}, 3.738399509057129*^9, {3.742819152965506*^9, 
   3.742819161305848*^9}, {3.744467058217449*^9, 3.7444670880134773`*^9}, {
   3.744467522386451*^9, 3.744467591350197*^9}, {3.744467868094944*^9, 
   3.7444678773040133`*^9}, 3.74446791170886*^9},
 ExpressionUUID -> "e751588c-fb81-46b2-9720-cf8384d4ea40"]
}, Closed]],

Cell[CellGroupData[{

Cell["Export files", "Subsection",
 CellChangeTimes->{{3.731929994437415*^9, 3.731929995371888*^9}, {
  3.744036943088751*^9, 
  3.7440369441591177`*^9}},ExpressionUUID->"a6b179f1-fc03-43ab-a0d2-\
8cc173fef5e1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"qFunctionsT", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"XLT", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"XLT", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"YLT", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"XloopT", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"YloopT", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"VT", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"TT", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"X10T", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"Y10T", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"U10LT", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"U10loopT", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"U11T", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"U20T", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"xiLT", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"LapxiLT", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"nabla4xiLT", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}]}], " ", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "1", ",", 
       RowBox[{
        RowBox[{"Dimensions", "[", "XLT", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "%", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"OUTFILE", ",", "qFunctionsT"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7319296733763847`*^9, 3.7319296738886833`*^9}, 
   3.731930289171385*^9, {3.731932941036771*^9, 3.731932946584622*^9}, 
   3.731933305113331*^9, {3.732031992661022*^9, 3.732032017799909*^9}, {
   3.732273456953*^9, 3.7322734792875223`*^9}, 3.738399521468976*^9, {
   3.7428106038927383`*^9, 3.742810604114196*^9}, 3.742814336441926*^9, {
   3.742823430630231*^9, 3.742823437172027*^9}, {3.7440371017663383`*^9, 
   3.744037121605955*^9}, {3.744452453945314*^9, 3.744452461684424*^9}, {
   3.744468156064022*^9, 3.744468160735849*^9}, {3.7444684157991343`*^9, 
   3.7444684204222527`*^9}, {3.744469728966367*^9, 3.744469729624956*^9}, 
   3.744470727408719*^9, {3.7446486432611732`*^9, 3.744648650386142*^9}},
 ExpressionUUID -> "f032b466-ffcf-49d1-aca8-c2d5a09c82b0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1201", ",", "16"}], "}"}]], "Output",
 CellChangeTimes->{3.744463223231838*^9, 3.74446898619487*^9, 
  3.7444697180535793`*^9, 3.7444707302957067`*^9, 3.744481925113556*^9, 
  3.744754783512541*^9}],

Cell[BoxData["\<\"qfunctions_F5.dat\"\>"], "Output",
 CellChangeTimes->{3.744463223231838*^9, 3.74446898619487*^9, 
  3.7444697180535793`*^9, 3.7444707302957067`*^9, 3.744481925113556*^9, 
  3.7447547837509317`*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["PLOTS", "Title",
 CellChangeTimes->{{3.744467842323317*^9, 3.744467844581039*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xiL", "=", 
   RowBox[{"Interpolation", "[", "xiLT", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LapxiL", "=", 
   RowBox[{"Interpolation", "[", "LapxiLT", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nabla4xiL", "=", 
   RowBox[{"Interpolation", "[", "nabla4xiLT", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"r", "^", "2"}], 
      RowBox[{"xiL", "[", "r", "]"}]}], ",", 
     RowBox[{"100", 
      RowBox[{"r", "^", "2"}], 
      RowBox[{"LapxiL", "[", "r", "]"}]}], ",", 
     RowBox[{"1000", 
      RowBox[{"r", "^", "2"}], 
      RowBox[{"nabla4xiL", "[", "r", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "50", ",", "130"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<q^2 xiL \>\"", ",", "\"\<100 q^2 Laplacian xiL\>\"", ",", 
      "\"\<1000 * q^2 nabla4 xiL\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.744469060458036*^9, 3.744469074625444*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
H80DQ3MqMy6KVv8P7ehSUQ==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
y+3k99TJzVWdZWw4VZXGpfdPE4daZy1Sy9nwEuoQNBqfJrYEW+gP3SH9IrTe
fbf8DEGcK1SqqGSjeM2HC/IuM8TdrjXp26vY6B5VWBbqOUMsX9ElqcpnI/hG
zL/4TTOE0hNloaM1bKhWy214cmiGSJG4F2H4jI18r9bUXzEzxBwue+zrczZs
K6XVX52cIf7+TPrPoY4Nmu/3qIKrM0SgmW7gyCtS7+Uq/QU3ZojOyKdd1+rZ
UDH9077h/gzxSn76o1gjme/SsJSJuhnCbkMmq7KJ5H97Vd+ndzPE/SLT+p3v
Sf8184XCO2YI/X+Njmof2Kj8j3u9uXuGuEoEP3n7kdRjaKm/1c8Z4onzTZ+A
VjaeRaU2CP6ZIb6wh4fH29hwSfsSnz48Q6gEhi3R6mRDV3D+xoXTM4TF3kf8
e5/ZWFU29ESVMkt4hgvwXL+S/Unnjw4KzxJpqXHJ+7vZ4NvE7NOTmCXKztdq
i/WwEXK4Tuq09CzRcFWiOqeXnA/c8+pf5s8SohVpgy/62fD89ztg+YJZIvJr
jqfyIBv3jzfO+714lsj5+fX3jb9szMiHfnm2ZJao/Lf4uP0wGwH3NTrO6c0S
o6LXH+4YZaP9H3sVDGeJYON76tXTZP97/u39bTVLJFtPVLBn2UjdsmqJEDFL
FK21Yf8Q4OC19q37y+1mie+8mliqMAcbQhZQ3zrNEr7Rb/o3i3Fw26G25jZ3
lgg7MT9mTJwD0Rq78o8+s8S5DI+FJyQ5mLMrM3/Zhlni3fV2+l0ZDo5EmGnu
2zZL/LmzqM9lPgf3Itfv2hU8S0jxNx77LMtBU80y98KQWcLlfe9tEUUOGtav
ffrtyCwR2KnnfkGJAw/KWe6PmFki7sfOXiNlDg6rPNNflTRLPJ4aWuCzkAOT
oJKo+nOzROdc81u/F3Fwy1Hrt+KlWWJKJsw1Rp2Dl5V/oyuvzRIW2gJHS7Q4
UNPxWqR5n9THwF7JTpuDY5/O6PTzZ4l9q+JuftDh4HFshI9y3SxR6ibRPbuU
g9grv7Y+/jRLvObSI04v42BCSY5N/Jgl+jemKSxdwYEtUyfNZGiW0AlVcmYZ
clDwjJu3do4AHCJ9unqMOMC/gOFwcQFsSsw5fNiEg0uu0mn/qALIyVl846oZ
BxaKp/tuqwlA/oWh7Kg1ByFuXRk5tgI46FMZXmLLgdY3hckmRwF0/Hbs2QwS
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
Dl6ruoQeJaZ4GZ+tGqdc72v60/HjpvgH2h3TvA==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
PlobEc5F/wdUA4VC
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {60., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{50, 130}, {-30.00588230404629, 22.635397739854724`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"q^2 xiL \"", "\"100 q^2 Laplacian xiL\"", 
       "\"1000 * q^2 nabla4 xiL\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7444690529979477`*^9, 3.744469075491288*^9}, 
   3.744481966627812*^9, 3.744754909739046*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"UL", "=", 
   RowBox[{"Interpolation", "[", "U10LT", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Uloop", "=", 
   RowBox[{"Interpolation", "[", "U10loopT", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U11", "=", 
   RowBox[{"Interpolation", "[", "U11T", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U20", "=", 
   RowBox[{"Interpolation", "[", "U20T", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"LogLinearPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"UL", "[", "q", "]"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"Uloop", "[", "q", "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"UL", "[", "q", "]"}]}], "-", 
      RowBox[{"Uloop", "[", "q", "]"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"U11", "[", "q", "]"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"U20", "[", "q", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0.0001", ",", "300"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<-UL\>\"", ",", "\"\<-Uloop\>\"", ",", "\"\<-U\>\"", ",", 
      "\"\<-U11\>\"", ",", "\"\<-U20\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.744469084287368*^9, 3.744469087062736*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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

        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwUV3c81d8bN6697r32uGahSEokXzmPFKFCpCSRjCJSaIhCMlJZZUVlhGxS
tnuys5WQZCUrJMkev/v7677er3PO87yf9/M+534eKdurJ+0Z6Ojoygh0dP//
Ley4W1DgLI3PqG6kEQxfofx4C7mzl6Xxz19MyzLnX6Ecu32JDI7SWK3Qpszi
2iuUsTwZbGorjd3P319njX2FXkiesvl3RhpzE4Osb4+9Qg/dFHgO6EpjSd0Z
49KgJHSR2HsFS0rjE1e02Lz6k5FNX+HIJXFpzOd5YSlhPhmdT318hiQmjVNH
bYe+sqags+o6h20FpXHKEImSrJqCjG1yRQnc0tjJMv3l1fAUpJkf0KS3JoVt
NKmqIoapiM94j3z7Fync0bK3OPzLa3Tj+b/dRz5LYQ7Occ6zf16jnrHS/eUd
Ujina7RKlysNxfsc0ktvlsLOMPvr4ZE0JJVl6nDvgxSem/nPrqY4DSkx30jd
nSOF02X7rSgp6Ui/okwyPEAKvz5hfbI++g3KZLknz+wvhYcHdn43L36DOE11
lL3vSeEW5/JeYu8b1DHZjC55SeF7Lmf/0YtkInPB7+fBTQp3OUTGDbzMRHbX
txLmLKWwi++MQMHbLHRX/rCwiYoUvusa9+bIRg6auheuMq8shdtnuxvHJHOR
eU//8SglKcz1WkSz8HAu2hXo6f9lhxQO9SROND7KRf0/0n5ZSEph6e96o6vi
eUjjJVuVLZcU/qwjf6p9ez5a4m+39RiXxBVXcvhyLxYgWxdRH/6fkphP8+yc
+a0C1FbrGPN+RBJXMkmcFnpcgNLc6VqWv0vinju5Gj/fFyDzzj2qPl2SeNTo
bWQmRyEqevSUJfCDJB4PDcIbpYXIjfFsdsxzSRz2Nfn0y51FyOLHidzDcZKY
3mNJWexQETpUo5P/J1oSD3B9tiuyKEL893cVGUZK4g7TDMv9IUWojIG+YitY
Er81zWcPnSxCBIaMZscbkri93pIUmPcOxdItTu03kcRqJN/OYpNi5Dc0NT16
QhI/9XGNHrpSjJzw4GzEMUnMFKi0Lh9cjA76fpz/pSeJ/7sefVCYWoxGthJW
X2pJ4myXqDd3lEqQ4pYOO6uiJA7sHdC+zFuK8EbEjl5mGr+AkAcri2WI29qt
8iRBEk8TkxQ5hcuRJT5h0koviZ1yJIb0/ytHv5gE5wNWJHCGKqeunm85Miey
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
HHgY/x/u+dSJ
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVl3c81d8fx+097rTj3ktWSIm0nFMp8lVJUqJCVgMlipKVhGQlK0pWRDbZ
nyMjWdlJCRkhK9nz9/n95fF8+Nxz3uf9fr0X3dLR0JqFiYkpn5WJ6f9/81o9
cnNvMJCr0rXIrxqJICfWRO7iNQYqgw8YmvqJ4L3VnngWWwbiolyszbVIBGnL
4/5nLRmobp957WxQInhFO2e+cIGB7jAbziQMJ4LAWzsE9x1noFuHn9kMRyeB
q4Sem4jGQG3pwYod1BRg3pv3y06Sge5/EDMIV0kBl5OfXSBKMBBLe5OXg04K
uKh5VNtSmIFKC/8+9XBLAQbmWeJsAgz05+xdfub+FHAwx7dBZ42Oxk20bLKy
UwHFYJf8ly46MvVLPJ5mlwbuvlzYeayDjjp6n1sUP0kDX0dL9pa10pGxjTbb
bGoaiH14ROdtIx2V/lB/1z2SBugZZ208q+goy+M21xPrdKDCcTd553s6Sgp8
Yfvm5jtworyUFupLR0oXWI6rv8wE7zg95Tl86OigRWd7HJYJ+M4eVXX3pCN0
wzx/93AmaB1vBHb36YiaUWg6ofweGAv3XYa36Kg82L8lpPo9sHLaips1paOK
/2QtxpaygIe8tugZNToqyS6r1a7OAROeoWpzqnS0AyWK7PyaA4y//jj5XIWO
HP84Unb9yQHKfi4+XQp05GBx8p47ORf8GEr9Y0KjowOdNPY91rlg/2vuSkt+
OvLKcw0E/HlgifrF0vk3De3MLsqLuZUPLO3FH1JHaOjySyG1vCf5oKXGNqro
Fw3Jf7srPfoqH6TeYWpa7qOhhvGi7oTmfGDctkv9YScNFdTr0a2VCkBBUASn
XxUNxVvPRh+fKQC3WC9mRr2koetY88KVp0XAZOhUlnYMDQ3af+h4k1IEjlQf
zfkbSUO6QhPHWFARoD5SLvgvnIaELpa6SC0UgVIW5vItf/y+fSpzLeYfABtL
WqPtXRqa23vMkqFVDKKZFif2nqGhVK1j25OJpcB7YGJy+BQN7WEKrmVSLQXX
Uf90mD4NTSW6VnmdKgWHvD7P/dGhIQk7wdt/npaCX1txq6+1aCh6KPvALa4y
oLR1lIdLiYa6q7q9zbjKAdoIU+jhoKEtUtTeOZlKIHDlVoUhGw0JJ2ve4v6v
EpiiU2eamWkoAQ3UG9yuBH/Yhed8V6SQwt33zbcqK4ExgSfMZEQKTWVM961f
xIDS9tkWlgopdPd98UzFKQR6TpXrnbsphULXBknTyVXgDtHNSc9WCp3fSQvf
V1YFBDrVY4GlFNo13HvgTVsVOGqSPa5wQQpt9avG125Wgayrif6bR6WQu7ea
n83Fj8DX1b/urbgUesRrtykvXA1UE42OrDZIIjmTmpjStzWg350ecqxOEtkv
tkxRUA0IPj/9PbRKEu3t/2/xaU8NmOTzd5ErlkQicyyZrdy1IO1eWZpRiiRi
Gu2xKbavBbSTDMFsT0nkW3jdR+pAHSAsz3y/ukcSpeZ5S+pOfQJYe7l89k5J
pIqdj3/IXQ8c3ge4rCpKIjECwbRzez1ospQWDKNLIq6EkZ2jl+uBf7PxkUoB
SbT7y83w1+31gCmpIk1kfBs6yRPlEIQ+g78nn7o0x29Dar36zE4f8NzZsWM0
P3obovK++PajtxEMcDUaxz7fhrICzk87bzaClmoeTduAbUiLw6xA+XgTyNwX
uMrksg0xEefI9V+bgM32AM89+tuQ28Nt0p2sLaB33S/g5aoE2taCZbvDVnCm
V3bVe0ECPVU3fwvPtYL6D3XX7WYl0BWtSYbU9VbwwYlDX31UAum4iisrRbSC
iLHHAl/a8O8XnuoFjreCU52+z1nSJdAR70pJl5g28DHDJ/7aeQl0bOwugUWw
A+yJvdNnayiBZPkPWI3LdoBUf6ttNicl0GcBwcxprQ7w1Pp4vOVRCST+5Mv7
s44dwEiKJ950pwSivtKOf9rWAUbCw+JOcuL2KH4f6nzZCbjuJ7zc9UEcjVhH
Nw3rdoP7dmHfd+aJo5a4HY3dVt1g0thHXOW9OLKs+/35j1c3aFOzeqmYJI4I
ujV3PUu6QeyU3EvpEHH0SuSwpaHSV7DDIjuWaiuOTJ8zuptFesAp3cqYFSFx
pPJB1M1CoBd0nsI2T5LEUWbcsY0epV5geg5dTeQXR+vf/xCd/+sFdpYflf9j
E0dGPfzh1IBe4ONeVxX3VwyVb7Y/5OH4DgpzWsZBkxhKjH/EGOT4ASRE+/f5
eYuh1Zm7xc7bf4JEqYFXve7491zGLHm6P4GC7CDrTlcx5ASGrUVu/gQaakPN
Xx3E0OxYvqZF/k9gcPK3hYKZGCp2eXx67Gg/8PWeCWjSEEOfenN8H2gMgD/j
W99Ik6KIky528OCtQbD/X4cly29RtIdfpfec3yDwX3/75++gKPp5KMXqadwg
kBU02Gj9Koqcw8sb9D4PAvM9CbSQalEULvyrWFLmF+j2gLa8L0XRacv8F/v7
f4Eqsvc8q54oEtcd3KNzcxgQtp17+E9bFPW8uX9zu98wuCyrwDEERNFjNdox
mYRhsK7ZJvxRXRQNJ5x09+0cBhqX6Qe86KIoYVHAq0NrBGSmVXmvL4sgfYUz
Dq2ioyDqEIvgwlsRNKU32uE88RusXh4t358kglYvdCYVcowBM6+G616vRBCr
Xn6SsPQYYFSH1/G+EEE6IylNwGwMZOlKezB8RNCPEs1NmdYxUHdWe+q0mQgq
EVw/bF05Dhav+TW+I4igPW+a938r/ANMnl53m+UVQVhR2cNn3X9AeeYpOQ1O
EdRwhCpgt/QH+MwIParaEEakAce60H2TQMDl7f6eCWG0qp9zoxCbBNu96tPZ
a4XRRGhEm1PHFDCK5PE3dxNG2u8dBZj5Z0FePWCvdBZGL7biPwZJzQLCmrOP
+C1hpL7/b4by7lnQdKXfvdtGGF005HTPPj8LjioU3NY3EkZHrpDSC5Nmwe7y
S6aaO4WRZE7mwUHwFxB+5agQRoSQ8LktE8uAOeBAGc2wHxBCX477rFS/mgNN
x8UVGr8LIaqmy59DBXPAP+OxtF+7EMotSFd90D8HtpwviqxjQoi9PnmH5N5/
YJqTjWUsVgjlOZaFbPvzDzQpn+/CDIRQ2Sz/kxqbBTBneeVu8X9C6MdCUr+H
9wIQibYVzj0uhCpWRdZM4haAFYurSeJB/P9qy8Q77Qtgozu6z1deCD0+8mRi
D1wEKl69IyeYhNBqUKWgKGMJhLZfWuzIpqKVuXgnV6YVUMRpE9X0jooy7ztu
REqtgB8HHTRrU6jo+vCf49+1VoD8W4/7RS+pKM1CtLLr4QqoevB6M/oJFZUK
FvZFbqyAOZlBjstXqOhJ6LS+I9saMLpnJTwmQEX73/l4vVPdAME17n0aPFRk
9saxztZwA3wmvkh6zE5F3yUcMvWcN4BWZu1O6XUKek/nn/Iu3gByg7K6l8cp
SG2k+2zpkU2wqjfu2llNQfvXtgLuXN4CCZIOvciVgqJIGsVcvUyw94ZfgqAz
BdXLNkxaTzFBaskrm8uOFHSDExr2MDHDwLNf5tasKajp6+ONdTlmeMdflXfv
WQoqFz+1qHOPGR6fmzvwXpmCjk7Ney2IssCp2nvxMb/IyPRoMLb3FiucpV59
8qiPjG707Tqm5c8K56xP3bbvIaPxoL2h5gmscJl9+7HDLWQ0e1Po23IrK2Q5
3j45VkJGugZSv++rsUGROqWDmmFkNPrgz4XeDTZ4pG6wtxuQ0VZV89usNA6o
LdRcg/aT0VyhZZ5ZDQfUsSnOeqdORqjf7IHCAAfU5wjx8dhBRocuPnsjJcIJ
zx8/qCgrTEYe7K2pXgGc8GZdpJvLNAkRNrtN5J24YGTdfyKUeBLicLC589KU
B0bI+bdRo0loMyOoqeA+DwzzrwkUfk5CGVeKpKdjeGCQ3qENsQAS6oaKXFU9
PNCnReUX3QXnCpLW+Hle6NhNzNx5koT8WB4KnDbjg7qjX8F/G0R0A3g5lT8U
gKvsVrY+l4hI7fOTL4LhRMjnmXOs9wIRCbVrfrdOJkLJ5XXp3UZElKf3ma+h
iAgPT7wYGNQjoijnidry70To3/LJ5LAmET1sNyjXkyVB4agd+kxkIopxkedn
riTBPfL/VD3qCWict9TxyRIZOur5rLqpEdC1HI3bMiFCcMz7I5vLAD/KYl+b
s3kmAWvT6Wc5v/KjJ7faMouTJGBim9ebmGZ+ZMdc2sVSKgFN6UCrspQfSTiE
MXmOSsAWVHaP8wU/kumehXxgG8zfKpiIOcGP3MaD56Wnt0GPh29bK/P4UGbl
SLTdYSlomsIhdSadD9lrOz9mMZaCms3W9kOv+ZDvpkzEk+tS8K+EDA/XMz70
otZK68xzKWhVnnD0jC0fgn2RGV1DUvDEWkzRkDgfehzdoyUBaZDiFhTH9ZgX
0SoelHu20aB3atjutvu8qD3sfmJFLw1Od0TWx9ziRUa7QuVHh2jws8qbeUUz
XnSwLaJrYYEGPYYL9U+q8aKJMXcypygd/j7dvx42yIN073Lqvb9Ih0YPh8Mv
fuVBSaf+ptyypMOP78blpZt50DKL91fR63QYxz5vVFDMgwLsWxIk3OjQoIzr
fXcIDyLcuCv/4wUdlsruviSuxYPehUSc4W6gQzmjvf+G1HjQ3cUHkTytdBjh
fTAgU4EHPczTzZ/qokPHH8cLD1F50PG5jPgLg3QoE27Kbz7JjWL3eraXLdJh
GGaeJP+LG5H1fc3q1uhwc9J639+v3GjBpvBoLhMD9ujcsvap5kaBHlvBcjwM
+GzDtyI5lhuxSXGdCxdnwFXFwLP2odzoXkPL4kspBrS7EDKu7seNLuq/WvKV
ZsAj+THUT7e58XnjWt28IgNmD7zKCLHlRmmSrLceqDCghEDy4QuXuFH3Ibra
4C4GXLTLsh/X5Ubrxro9JzQZ8GpkPmueFjey83fI1D/AgK3VxTH393CjTHaK
u4oWA2ZIVtfy0riR245kQshRBhTRrzftpHIjx/tuffzHGdDPrflvHC83klwz
LLqhy4DmnV+3qSxxIbaCaxU1+gxYLe1pKDvFha4FHhH7cIoBZe/IPpEc4kI/
87nnAgwYMOBjc5nQNy6k7OFpesiQASeJLrMCX7jQesiDW21nGfC0hcR2zlou
NB2oe+r4OQbMy6k22SrlQmqtTNQ4YwakMt0IXsrhQouOEmPt5xnQ9TSpeiaV
C41FGU9PXGDA769Kln7HcaGorPQzwyYMqDVtrjQQzoXefVUC2EUGfHOIy6LH
nwvN+o/9fmDKgGzPsl+0enChZ3lenmJmDGj7w7ih3pkLGV1/eOglzg07NjfR
dS6US1C9tImz8oMUtRJzLiRlu09C+xIDhjbo2+Uac6Hw0TsVN3H+Jzofl67P
hfYHZT12xdn42su2N0dwe2W6KmxxLik+whGryYXS/ZLz9+MswTWxP1yFC93j
biz8i5/veT7MMVCGC6VFxos+w/lXqmayjxgXit0xrc6P87HF/p77BC4kGWti
7YTbn3bsCf8dDi6ktHOWqwJ/H+8LlSM31jmRaEqG1xT+fofhrrtX5zgRFCvZ
w4Zzm9rDDNMxTsSxEBbMjPtrzyOZgbM/ORHLiuvqCO7fqPZGin4nJ3Kb8ZjK
xf2/Sr9zQruBE42xdvRYGzFgFarK21PEiUqTWfyenGFAGcK130qZnMiZg3hk
8TQD+l8hSGxP5EQnP9+eP4XH/9Tm5cfUYE4USVA7g/QYMPckRym/LycSiL8n
0ovrhxL/fpr9PidakudgG8D11Xtg/fyiNSfSzvublXeEAQ89TQqaNuVE50Yj
ErwgAyb06lWNnuFEOtcHZQ/herVxi1H8eogTmT1RcvPdx4BzRRobH6iciO38
5vjlnQx4juPnrhxeThTIL8VeoMSAxece26Qxc6IcziGZDQUG9Jjv+BI9xYHo
fZJ2DjIMyLP7dqJbLQfq7m6m/xJhQMb7DJ0DLhyIIJPPi+H5m6V0p67/Bge6
LqW2NrJBh/sy9x/zteRAfhq/PPnxfDfI+Hyk+TQHYjrCL22xQIce6b8PXVHk
QD7NZs3KE3TIo5BdzkrnQK4r/vU3f9Phi7S7B9KEOdCBh/PtucN0mPmWfd9f
Ng4UxbRj2qCfDr+nSO951M+OvmFd3xc66dBm+588uW52xHq81Mq1nQ7nkvN2
NTWxo6rL0ac58HrFk3x4J7WUHW2cCV853kiHkdLcWSU57Mg1U3V6tZ4O6Umt
SpffsqN9aYI95XV0qJl4RfFtBDu+j5+qv/mRDmvocun/PWVHl1QSeM0QHZ5+
My03682OTumqBJpW4vcnPNy+z5EdfagNDn5Wit8vdSy5z5od+UVd21ZVTIcP
X/NJ+5ixIweNQFHOD3j9fPWS1niCHY2H3dNoyqdDmuTV146QHXmpC57Tz6PD
jHhFScpedrTEzlk0kEOHGtvm4oqV8ftur34KyMbreVyJ+CUZdiTI5cyqm0WH
pyS8Y5nF2VG4xWyh+Hs6/PZSVzSVyI6UJOt02TPp0EqcEK3HxY6IngZC7Bl0
OBv7VWhmkw3ppR6yFH9Hh+5ir188X2BD9C1ikG46HXLG2lA0J9nQuvb2lqA0
OgwXVXn+4xcbsojjthx7S4eSMQtE729sKDwyL8YU53ciFaHbW9mQnHlTyGgq
bm+0r2BDHRt6n0t0DcD5o7B+sEMFG9px8pWPNs4no8j85AI2xHNKuFwY5x6h
708/vGNDVrHX9FhxtopM5DF7w4bs3Oz3c+I8S70ewBTNhuJzLwVK4+z+YhdX
SjAbGi7/evoCzlzUFb8Tj9nQ+FUj5xScn0cg9ukHbOjI7WvjPP+3l+LvG+7E
hhTcKtL9/2/v89Ose6+xIYkX9r6S+Ps0yMI+36+woTlivlkTzlXhP5m8jNkQ
0QJxheP+0CelesqcZEPmZ9SOO+L+6gmz36w/yoZa1jqGr+L+tCKqP7Tfz4ai
t/ZHOeL+ngldXyPuYkO5n/i4w/F4cIQ+XbkoyYY0HEwnRPF4MqgrmDqFDc1n
swTE59KhVqyNH4GHDd1Txcj7cT3cTT5MrltgRS2nSVZlRbj/FbK/JfxhRZ7i
Pl9f4XrKypJIeDDIiiYVa32jcb2NFi8p7WpmRTs+2Tg24npk0bL+x1vNig5P
X9pkqcLfX91eMlrMiiZajtifrKZD4+b3x+OSWVGkwLqUMK7/T4NXzTndWVFM
wpScBZ4/wzZtsr9usyL1zmIDMt7fmSa1psptWdERGYOOL1/x/FgUve90lhXJ
FgQvWvbRYRpP6/M+RVa0y5mu2TJGh/5qBz/lf2NBauYnB4K26DC5OP1Z8BcW
JGpzP0OHhQHRIWGja7UsSNiJyXSJjQGXdeYGJHNZ0MWXRiqqeP+nNF95u5LK
ggz5doQW8TGgqmGzfWccCzolMBOvJIj3f7O01QB/FnS0vdT4F5kBfQepVVYe
LOj46TtvpITwemjz6AlwZkFH9L556OD1qufWZcrCFRak5cVdbSjBgPMLjb1f
zrGg0pHsSTVJBiQ82Pfm3X8syC4iyHUNny90H1NUzPeyoJ7kvJR9+HxhxeMz
v1+ZBT2cGg3JwuuhV8hMKVWaBcndvH+KQ5YB4yiXvGdFWFBvnL06lMPraUyD
TqMACwrwNXU0lWfATklNgVQ2FrSPoyL2PF5fZ5NSOr1WmdGthkXePfi8wqdA
fmk6y4zq7rNZzOIsn+VloTHKjP5zeagftIMBtdWm5Yg/mJHKePI5Trxemxeb
Tv9pY0abxKyHFji7H/pcUPeJGZV0LXrG4hz9UePBmwpmJGTYdjkP5wKd5MPu
+czou7KAZjrOrU1ErvPpzGjkWdKWB86TZzxbdr1mRtpUZvoenLm/TkbwvcC/
5/ivsR6//1TQ/ZTnT5nRr8WeVB2cww9zFYn5MKOb5GT+DNzer4sv6t64MiOB
nFv//cPfJ5Ep/VXekRmNc+0SoONsbpH7O9uaGWHw2+ge3B8pQmBZw4wZhf5W
ubET99dEYxNXpSEzevdbzomI+1PF+6LosRPM6NzmjfzvuL+dNMYUmgAzsvZW
5w/B4/Hhj8v+sxrM6LhDwD0lBgNC4zBTC2lmZAZmjirg8fPllbo5JsqMhmfL
uwK3MeBnlOnuSMD9I/cptRefJw131Mc/3GBC7QayCydwfUQOnMtim2dC+kEi
Czdw/Xx/MVT5dIIJBT3P0vGm4PFn2uqP+cqEFBe233hKYMC7XeqMolwmFHJz
q/4YFwO+9ExKnbZmQmtVopqJS3Q4sGfXBxczJtT9eqQxDe93MhOVn9YNmdCT
KgK19B+ev0a9YzyQCTl0laazzOL9gttuJUyDCQVmsZw9OE2He7EFblFlJiQk
MSfjN0mHSIG4Q06MCT2uM5s6OU6HbP2vDmQRmNC1nZqaLXi/PBGhpK/OyYSs
Vnl9LEfpUPy5c4nr2haWrVc4zDuC599GSK/f2Ba2PC7N0zhEh8p2GWsRXVvY
Ph1794RfdFjUXieR9HEL095jovoMn9/BoV+HcrO3sInrMXphA3RY/3bjMha3
hdVdCNB+j/ffMyRRr+aALexclHb04E867HXf8+b73S2s4bywggrOVr9Pfxy/
uoVFbD3Wfo7Xh6kzN4aWDLawlnX/DgLOd8v92Di0trBt4LJf6g+8vsglbqfs
2MJsL8s4GOEcEFZxnCGyhSmmlY2I4kxa77FVZd/CcitMXRe/0+FLm3l/rblN
rMWRu2ocZ5k2wXf6/ZvYUnhQ/RzO7w/saLzYtIm1cfYNE/Dfa6Qen7Qr2cTY
zV4qHMUZI1jy30vdxF4nT970x1n3wUOVx883sSMoobIf5/aR6NPPvTaxIrWp
Kh3cXlODgltv7Dcxu+ULdAzn1k3yFwHTTczloXbHYfy92u/vKLvrbmJahX99
W3FW4VGbMJbexJbTfAX4cP8lFYfr1hA2schkrLIQZxHbudRdmxvYKRktZWvc
3yw1uVf5vm1gPFc+ebTg8bjnRPzoVreBkXjnm3zxeE3SbtN+529gBVs2I/vw
eajroWpfVfAGJutHJsTg8dVTCj2w030DmxR8/QLg8a/snYmJu7aB2Ulei+vD
WS3g9DL3+Q0s/aH0xdu4XtL2Zhvf097A9Nm+wxWct40KFA7v2sAM18ClO3j9
Do9wIBtKbWDyh5P2/MSZ82jLbYxvA2u1uGOoievP/a9yq9LqOvYB3v3sifPf
189UYn+vY0pecZH5ONucmgri7FrHltONT7bj3Luu/8f54zp2vzLYphfn0xmZ
J35lr2NPFesUGnGuMeFLOx2/jkGSqn4SzppcNzkqAtexBHhwwALn90WNVoqu
69gvo5MOHDgzrHdUR1mvYwvPZ3+F4PZFkZ/S2c+uY2wDt1g38ffwfZzwdIL4
eQ/+izPA2fuW3s9+5XVsbml2xA/3x6Lku4MnxdexprOF5m9w/91o5n5ZyrWO
6TvYsiTg/h14cG1FbnENM0xZ+OiD+/+c4ufzL4bWsJEQUxc9PD4NPfJFLG1r
mM6RbqslPJ7giT/lVuUatsz6QTcQz48C9TGnvow1zEj2rBYbrof48Lc7i/3W
MKkC1085vbieD3MGb3dew+JFf4uN9tCh34zNZLjFGtbD+1GAE++vt/Rl0+0P
rmHMgO8fqQPXF0cKQ3puFUNZpK1H+D5eUsDmHdq/ikUIRG/o4v1b5apV/0bT
KsYVSJvmwudXYSQd1/N2FWv3NJ33xvv/hFsiNfjSKqZyI+zrC3x+uCLP4rym
t4ppvDk3bo/PF53dFu12mquYVPa9mjMFuH7U6CFHyavYBs8Dq6P4vKL2y2sq
h2kVW4ZuNUb4vJkWOvCf5PQKxjXto+KKzzthU6+5VupXsMysC89X8flJ9u1/
i+0FK9jxp/d09+HzVrn50lBmwgq2bH7hQngKHRqKJbX5Ba1gNROdtzmS6XCs
4xRm7rqC1T95//BFIr4fPFvN3G+1gonZ5lyHb+iQopMaSzFYwYawPjWOBHx+
YzL0nz6wgvUUlqWNvqJDWLrhUi+3gtWaZQsPxtNh9530q4nkFeyDRdnUvzg6
vKl87oz71jKWEFhkJ4kzy28mYPxnGbtNCTe4/BLXT0KmkurXZez1+q6e3Fg6
VLp4QYynehljyhyYF8L5I5mNazhrGWOzM5oOjKHDC83ZCxWxy5hW9mM7Xpyn
/UyHovyWsfMDYjdfRNOhL+Rsu+20jL2jxjHJ4iy2mlf53+VlzP+2pWRpFB3m
5F/O3K63jInkfntzCufj9jyxW+rLmOWa5/aBSDr8IVv05Bt9GbtgMZl0A2en
AQuXfP5lrHByX/fUC3zejeW/+mxlCUtP27S8inP82RID25ElbOXboezPEXS4
m99a63DbEvZnukBrG871dQQl8YolbOyE7ifT53R42atcdCFtCXvVp13jE06H
8/vsOL9ELGFzFRdtQ8LoMPAfeSHNawkLLtzp6xWK7yfvsV8+N5cw1TrV12dD
8H5hc6PV7MISNn9K7StnMD4f04QrNbSXsITfgsZxQXT469vHDILqEnZpujpP
8Ckduj53iJkQX8JGD43mWwbg9ZCjzvnVv0VsPsa2MvUxnu/otqVr/yImpuUx
GfOIDlvcthkYNi5iOt1+Pxy86XB10nkHR9Ii1vC35OYndzoMTaWJDgQvYhpe
6rtP38f1Zt7EUXp/EVN5Gnvv4z1cXx3Sv+wNFzEhjcXBu050mF7SHt3FvIjV
jVXGutni8/YdD7/sqQXMZapNstQK17+SonPAtwWsyInKxmKJ96ME79OHchew
hXRtlkIzfF80UT4kHL+Anb4qtCZ7EdcH+ZviX/8FLPWZC8g8j+vBT5UjxXwB
m8jgC1wzxPUAfvzz0F/ARh9J3qg3wPWw8mTwguYCNiKh0JFzig6zb/aX8xHw
83a6fmnXw/Nb9um70bV57LBUzS++E3i97NeIRr/nsZmT7m7mOvj+cDb4jjM2
j90ImPA30Mb76c37C6mZ81if6tjdrSO4/X42977FzGPB+ZrbKw/TYWKp1gMt
53nsdmdry2WA99NOxY1bFvOYn5Hk0QNaeH2ZFvJMOjWPWZexe4gfosNDjBkf
LoV5zCCDg7d3P95PD35nOyA0jyku9DXk7sP3Z+NPfvas81iYYU2Gpya+/wS8
Dmzv+4fdIMjnz6nj/TTpKR974z/MQKncMWwPHaZW3AveW/wPk/y1L0xcjQ6d
/54Ojwv/h8XLvP0+uhPvp7wHKV88/2HyikPj21Xo8Mh2+Uhm+3+YR4umtq4S
HRJMmGJtdP5hk0F1H/bJ0+GS06R4zJ5/WGZq3QqnLB3+DOqJb6T/w5LCYmbL
pPF9GeW8UV2fw+QP8V/tkcT7V2+c9NXxOazps1XdMQlcf/P+KS+657Ch1oXJ
16J4vslbpK/mzGHa2j4V8hRcryHE3BrrOeydeUrpJBcdfk7f2L1kOIdlRhn1
MTjwfK0eL1CAc5jkNoW/lqx4fVqqKg4Wm8N2Jwwp8G7SoDUxa38V5xzWSUhQ
vr9Gg/o7Ysv/zf/FjI7Vz64v06DoFSd04ctfTKXvRNfxeRpkcrt85Gn5X0y6
YP2HwBwNjobr1VSk/8Us5ZI8Z2ZosKCOUc/w/YtNIoW1+T80aKDS8WVS8y/m
13FcfXCYBvfqYmekZP9ih3wUju4fokFJy4yOM+S/mNAVdYnoQRqcfPHoa9HU
LEbxeRRm+JMGO7IdTcZ7Z7FMRHFI/UGDpZ9Nv4vXz2L7id+OzvTSoP+GWr9X
4iyWYBa0fvorDToK0yzyQ2YxGXadMYsuGjTexTc04j6LzTn3xJh20KCM9fCo
3vlZ7F7cuZytFhrk9Wy1e6g9i/llpGBvm2hwLrp8InvXLLZquk1mTwMNYk0R
0xS+Wcz78M2EjRoaDB6K2bKdmcG07MnHWT7S4CtlHkZq3Qz22FCDZ6aSBiuq
JmwYLjOY0/pBWngxDa6PZ8yKtU9jFZWet15k0OD9/SpsfEFTmPCUvFxxBA0G
+r6S1bs6hSl6URhnwmkwtkXghP/+KczkHG/7VggNlljOPGMbn8Rmh+9NBzyl
wfrMKzlH0CRWZp173DSABnsWv7R7RU1iNSd2hik9ocHlwBzhjWOTWHTfp4UP
PjTI1UXbf2DbJObwlyZu7UWDIlJhZm7zf7B//+6krT/E45F/+81C4h9M42y4
1ldXGrz7ffeO6a0J7MsS8zTZngYdth10y/s9gtEdLm7v5sH9qzLokN/8FXOT
fF4T7iAJQVN61oXwAuyDkc6ZR/kSMOUUS9TMzhZwMsfMTDtZDBppylYtbwyA
zo8cu/liRaDs72urxnAC9BS6bbI/FoIVLJ11GrJzQDZ+LWVlFwUmbVxk2ta9
CCS7gYruBhHqqfbb9E+sgZZIiUP6qoLQ+G3K5UojJhjCfTsltZYHEvedtdie
xgIttKO5lcM4YKaN5/1VZXaYkelvHn6QBcoGvuat8OeEIpeFAitW14HXCa38
KSoPbL2Jb+WfFoB/4v6vc1I8cHczm+fOrAUQsqaxtqTAA/tVyuhREQvg1fud
R1m0eKCJ+LGbEuYLoJxI7xCy4YE7OM9l7luaByvfWP+BIh44ekxqi0NsHjhd
/7w73JgXzodcKBF9PQesnhrlaUTxwSAKp5rrnRlwtEA1KCSBD462ePb8d3IG
MPr4bMbS+WAeQZ7QLjMDBlRqRWPL+aDDncnUe+3TwKxd3XtjkA/e/Hfu/LDq
NDiwRjQ1/sMHS1XE+hfZp4GYzPSe7Hk+uHZF/I7L1ynQ45I6Zs7JD2fnvhtp
u04BI1FhgxolflhjfXCX2ZdJcOztt6kzH/lhGhL2uOI1AWRaCz+9a+SHUjcP
tQxYTgC2lbA3rF38MNf1oNbboxPgo57eucLf+HkJytG/1seB1nRpuQi/AL6H
JV0/fGMcaKjHPe0/LwDv1uz07twxBmSrLyvYTwnAyQijvlDuUeA8GlEWsiQA
a9LUbKcmR0A1d+PJPGZBmF95At1vGwHmBnudlqiC0GQ68nH5ixEQ2ydY5q2F
x7l9hDWabwSMMR0/mawrCO9KKhb8Gh8Ge2Xc++sMBWG91Il0+0/DoPP6GCuf
rSD8xiowFeQ9DKSDJSNVbgvCP9nCBnIXhoFTrpH8mQeCUMG67uRBpWGAOgNL
7zwWhFxPSq78YR4GgstIPzJEEAYfaPK3+jEE3COJxf0iBHhdfFSC0DEIpNOU
mP9uI0Di5eN7HpQOgoYSHT0WaQIM0jjlp5w8CJwaLZ+T5QlQT+iN7OegQSDa
9/CHjDIBPhy677h8axCg6ejtGrsJcMj+45mLZweBHVOBg85eAgzAvEh2ewZB
kfQE0/XDBHjDsYreujAALqmz6z04ToC9ppmJxG8DgE2H9jzoPwLsOD5yg718
AJy9brw9+xwBxrFZ5Sg9GACrD247oIsEeNaOVTH9/ABIfBb0oe0KAf5x8g52
2TUATrx+yzRkhduzrtOnxTsAZnM+npi/RoDsqbf2GH7pB9aNd75zlRHgtYUi
fe3zP8ByjcdWNUaA2/yLdnTv+gGCKgOkPWsI8O0eF71XfD+AVHGEzv7PBGh9
WndbyOh3kJf7+sZCMwF+L+Y1C6r4Do5lvAvJaSfAwInA514h30FPcmH+ja8E
6PfUJFbnynewGdW4NjhAgI3mCdSa9V4QFtYtFT9CgC8Eu3j/a+wFMk8Hj16Y
wO/PFIZtcb3gg++kLXmGAKVF7/w4Zt8L9DyWnrb8I8Cj7lEx7zR7Qd89lpyA
ZQKcb0xM6F35Bm7d5u/U3iBA6mZ+wZ6Sb4D1hsjyFjMR+rEmd352/wYiraQl
yjiI0FDYasffY99A3Ua7mb0hET4v2b24ca0bmCz1ecmfJ8K/KifNUg93g8nZ
seQhUyLsqm8X5mJ0A8+Jf/WvzIkwZW0OfODsBqThzUkTayJUf6vwRHGqC6T0
cROp14nwVe9VqmdDF9D8SlFvdSDCtGjxYw+Su8DlBsWHx12JUBAdEKGc6QJ/
q9XfMD8kQubLy34D27uAbwWsLfcmwrIEy4HtG51A+MN/4/f8iFC7J+IWo7sT
vMsx5ld7SoSnva6kGGd1gkPvLHZNhxAh9QGnPItvJ2hNunkuPYIIEys7oh4Z
d4Kr8ffcrGLw9w5P51dId4LFSJ94qVdEeOghyO0f6wABoc+qehNx+/suTN19
3wEkAqNHXrwlwvgTkorarh0g+1ES95lMItzY0XXqqF4HOPIwS5kvlwh9HAt8
o6U6QNfdkjOfCokwuotjhLbYDuxu1bj4lBLh2V0vdf5raQfBV3srlquJkN4X
Kx/k2w7ol0YG8+uJ0GXq1tldFu2gwHiW3bGZCPtvSf61ONgOek9wnBrpxu8z
XC6jTLcB+6NEp4TvRPhppiU9uK4NMB2SiDQdIELwTvvn9tdtQFZ198+2cSJM
F70Rb2LQBipFJne7TBNhaZUrt9GONmDMnPpE5B8Rnvw5OSfO0wamx6/8KFsi
Qrk/zhXjU63Ar11015V1IrS9astU0tkKJMs6HrMwk2CYUo/NTGUrKEp61pvC
ToKnWjwmit61glNBOjtP8JBgXLfi3RMvWsFvZ2bfSQES1Dmz7bmFWyvwulTW
E0ImwZXczSryxVYgctxFWU2EBO+wB5rNaLYCXeHxbjc6CQ5569i9nPgCBrYS
d2yTJUFZ4s5bFzO+ANcxMy+kSILAdr9cxe0vgNAm1HV1JwlOGRBlLNW/gLSS
VgXOPSR44MGb8Ud/WgBMDPR4p0mCCjpMzD+jWkBPoHbHyUMkWMWskdt5pAXc
urMp9/cwCeqKJf/8sdAMuMyK3SOOk+C3wM9mh983gwRtp7a9/5EgT12YwGfb
ZqCprCT7/TQJOq7d3/5Fuhm0UkfvexiRYN7r+6/qRpqA3ebrL3QTEtycKHB6
ndcEmH6byNReIsFgqU/Xq582gegvZDc7SxI88ZEgcfh6E1Atbm7mtcX94dT/
welEE6hPeMLIvkGC+5stFyflmoB5wOF7hrdI0POf01Mm9iawfHutccGZBGM2
PQve9TaC0IuFtBg3ErRVoBJsshuBwlFHl4MeJBjd+PXs5yeN4OMOhYZ+HxJU
q6OfX7rWCC5ShiQfPSFB51fpKOBUI5hbj7sjG0SCRk2H2u/vbASBI8b1n0NJ
8O/Ivmk+vkbAaCFss39Bgtn7nusHTzWA0qKG24RYEjR/lHVTYLABGL72rct/
RYKj549XEAcawMQTLfHzSSRos3xbrhhnn1vLjqtvSfDThsqjpe4GIGaSVxOf
SYJzhANZdZ8aQN7hm6KHc0lQgtcz7kteA9BTlHUYLiTBVWNaW1ZkA/hFGvj4
pJQEBeyexL291wDur8UI78BI0OPrCLXEpAG8a+Kvul1PgvmkoDJ7egM4UviJ
Sm0mwdf+A7kK7A2gN977enEbCa51vlf7OPwZOPkdwEy7SdA0IILAUvYZ8Dgu
kLd68fdHx4pJ3f0MEs9n2yX2kyDbTuFH7YqfwX54reLYMAmmlOYcbhypB+3y
0qTxMRIs/dhnrFZYD24Q+2yCpkjQ7gepPjCwHrCtRpbtnMPt3/6CHnilHsT9
MiB0LJLgSOTursDd9aApv6ZElIkMHV+X5pcOfQJWcR4CFWxk+N20SpOv+hNY
99W8as5NhuIPoj6KJH4CEfZzH1gFyFCJdbGf6v4JKBln8r0lkeFrW3C6zBD/
/sDzQ9nCZEh6VDdxjfYJNNHvO3yQIMNqJb3HEb/rQBynxWuMToYJV7q8+t/X
gZtTOq2fZMmwr+XiULJrHTjYocLcuoMM5TeGSS906gBfCXV3jyoZTrQ/EpQT
qwM/Xq1bDqiTodT9YUv/2VqQ4Tv0fGw/Gb4NBrqWzbXg/vWGmllAhrWNPD0e
JbVAzyB3YVmbDON4Y3YVZtQCMY1oWWY9MtQwvm5yIbIWTIh7nuc+TYY6QcmW
CzdqQSmzjT/RiAwbdy3rse6rBYG/9UtETcjQS3co1ZS5Fijmi4krXsXP9zc4
Ux1SA1ajmfV32+G/P+HJVWZeAxo8xtz32+PnE+0L9+6sAbFWX94fcSLD5fJA
quTfanBNr+in3j0yTJexnbR7Ww00VeMFz7qT4cJi5L7rF6oBl5AvNPUmQ5Z8
aUEhzmrQs3b99lU/MpzrXezKLPoI0gbPJN54SoZX/zx50nzjI3D9pNlxJ5QM
mTgD0i/JfwS676XY3F+QIe+9wO49k1VA5DmHum8sGUrHKcemllWBMdcp66DX
ZMh5XgR6hVaB4sudkRHJZDi1E5PzsK0C/tpln+LSyfD9nd/zfw5VgQuKicvJ
WWR4zbr6QS2xCsgRAhTe5+PnnzjMsdiLwOKC48XCYjweGs2lZokI1H03flpR
QYbm6lcD6xwRiKw6VF77kQwD9/74ffEYAjZvZaaaP5Ghm6WJLFUcAY1nvJLd
TWToslov4PEZAxx35k79bCPDGprCPO0yBrovfPMc7cZ/3yVWW8yPgVQtlDP9
nQyPPrj+OnSoEtyVeTu4OECGyY+iGXLVleA4TzBpa4QM9z0uLOePrgRCs85H
Of+QIU2aMl18tRKMdJk6C86SoaXVWc1wRiUoKDuSIrxAhtk5RrFsbRXA941C
t9QqGQYHfvEguFYAGfulvapsFHjzs8oX7+pyMG/4006TmwLPWk2cOe1QDmo0
a2OgAAXWsZz8li5dDiIkMxt0yRTI/ZhsXNxYBqzYnq8ZiFCg1eLvcN7DZWDP
hJuSyTYKnH1bptr9shSwtZpfsmBQoMmwyJ8xplLQWagTfE2OAo3P3OS8HlYC
kl6qYLeVKNAz8e9rJ5US4ORNnXXD9y7lqiTCeG0xOGK7TvPRoMCsPhZd20vF
gHRy6EzgAQrsK1GPrGEpBr92N/iEQwokPOu6MFvzAeSJ5ObHHqNAFNa4vyjk
A/DZjBpO1MPt+dWB1ow/AMNhD2rGaQpklRckfxX6ABgN1sfzjSiwK9rN+WRL
EfgZddDQ2oQCaSYzd1zdikCMNfmy8GUKZJIUeHKRUQSM1CaufbakwLAn2iot
7YWAwFzl8sAWf8/Vf/BnaCFoaonyVr5JgfuG+xQCzhWCJ3EOz/pvUaC3mv3I
imghOHL9WEyYCwW6mR6Y5RkuAJt7JVKO3qfA1ZCZuS/lBaCU/V/OggcFlix/
UbFCBcCl43P520cU+Mbp5bvYpgKg+iah3sSfAo9+2L3vWkMBmHS418n7jAK/
nDiv4ZJYANIOnhqoCKPAz0o2a4k3CoAVz/ZJx0gKHDDOlvJQLAC0nrUl+ksK
HA904c4bzgffU9pZO19ToCqL9MZwQj6IvJMu6JdMgRddscrrd/KB4WEvcc10
CtS44KU58l8+EBA8LzfxngIz7j46f10iHzT8UFaLy6PA6zP/OX/pyAN+79jA
qQ8UeKmyK2PcPQ8cdv2ux1ROgTVbDr1L5DywfizPOA9RYBr1C+v5l7mgmBxg
aVVLgZkyo2tFMrnAefCKg1ADBQZKMN9QrssBO7M17te3UCCoKLq1xz0HTLjz
+93voECXJXPJVa0ckKo3jI9GFNgZoWJ1ijcHWIqUxf/8gb9fJd14P5YNto2G
pYcO4vqJ1Djy3jkb9OTbFR4ZpcBnG8Xdd9WyQYQ3qJqfoMD/9IqDOWazgMFp
oebUGQo8reZ3zCUyC/Bum+q5MI/fdyR5CShkAZ/i2NnyDQo0iK//mX/lPdDy
u73uwEKFg5L9m32878HqWV0uOicVzh1o+XEjLxMU0aUoHbxUWBZbG3teKxPc
nlmQekygQv6DuN+6MoBSRdOOvVQqtBqgS2+PyQBjgUl7x0WpcG/AGD/1eQZI
vnD/6EtJKpT6N7rrTkIGMJc9c/qkNBXqt5mXOGVlAIl5OdMtOSo87Cbt+bkg
A3yt2rTJVaJC4n4j+7mMDBAe0uV0dRcVNnAN7U9xzQCnLmV6UDWo0PyInhGn
Wgbg2fEo8NN+KswhKW6zGnoHapdNIt0AFYrwDKc9D3sHvOpUE3doU2GWr0aN
nNY7cDCCM6tPlwr7n9k15q6mg2WLnyUhJ6lws8hu1/uydJC/s7D2sCEV3y8z
3uRYpwOHjadt/4yp0JD7ZNROLA0oNlr2pZhSYSr5yaODa2/BaPS+8fPmVHha
I1TdBLwFb2wIC9zW+P1DKk6rH1KB2Z7fTOXXqDCUcClHG6QCEZZKPgcHKrw3
57pQV50COr9EiNDuUKHQu49yPkdTQGj8DZn2e1SYfdp88l1nMtC/cUTV150K
LyiM316MSAac+0QPanhTIWdB2ON9d5LBhURIcfajwgTLB7T2C8kgjdduMvcp
FZbekw3PUU8Gy84hNTOhVEiYm92Y4kgGuj+L4pQjqZAecX5BOy8JROv8dL7x
kgotv/M8+XQiCYzlsJ9MT6BCi3km6/qpRKApprz9dwoVKh5NeZaenwj8Hxlt
yGRQYW7Zue0XfBJBz+SDLsscKjze++7i+oFEIG+c9D6hkApfKn4aKGBOBK5Y
w+OfpVT4OFt9jJstEXyWn7skgajwLZpy3amXCMTCRTUu1lKhzqzY5Z7wRHB9
DQpEN+D2nxezvRSdCEqt7Ea7vlBhh5jVd0vPRMDTElJJ7sLvf/nhsLFOIri4
90PkmV4qDOyXMj+w/ga8S/jpENJPhRdTS1cJH96AVW4OneZhKnw4VG76IPoN
0LujLMU7QYU2fOJ/7rm+AbE/jJZ0Z6hQt3BW0eXoGzBxzP2L3zwV2v9Sz0qc
SgD7s5Pe1qxQ4W5lljXOSwngqUijJ8sWFc4+l+S6tfEK/PCeOw/ZhKD/MtvD
Ie14oPRHVNWDWwiO3u4vGz0WB9yNDnOVCwjB8LljKVaZL0FThd3AClkIZoSm
J+fvewkk5EKL94oKQbW7GUi/MxbcDP0Q6iIpBK9/znWSfRILyld+2uVLC0FN
oi1v/rlYwHeV4/BfeSFY7XWzr0Y+Fpg1KYvuVBGCtOqPE4pjMSBT/dzfm2pC
8OxWV6NrcAxYf+X++Z2mEKSbuKv40GLASa7kN2OHhKBomb27SnQ0eHW70U32
qBD0jTRiPcsbDaZ7585Y6QrBjzUdPTzeUUBLW0wx8aQQ3Dr9fscLQhQIfn+Y
ZcBQCFItr1ihvkjwU+ha77YLQpCo9lJBny0KqHiF5pleEoLs105HXLaIAh7j
HwJjLIXgiK+ENoMtGrQY9lt+tRWCiQI/+K++iwaS5RwHqPZCcDHK5oTbWjRw
2K5CPuskBOWu07YSe6JBZfC5P6H3hGDe8OM/tb7RQHDZvbrFXQg6mHiffy0T
Dcwtkl/y+QjBN89YZybKokBOQ+MdvSc4Hxqc4XaJAkx7/v3nHyQEdy8T8v/s
jwIG8WIydWFCMPSn1LkddZEggePIOmuUEGRjrjp4uuEFmHW81nk4Tgj+6w4r
jEiOAPBbaKbnGyFYciJpTT74OQg9UuxbkSoE3zpNXhQNDgcDGf1maxlCUInA
ZZSeGAZUqZzq+3KFYNH28mMBnaHAy0OF/16RENzBpx7bcygUtP0+N1JQJgSd
4HNrc4lQwDjzsGIOCcF1g68ntu8JBU6lyS9U64Tgs7zLBssXQsFH6SZ7h0Yh
uDybSTG3DgWkZ/+OZbYKQcWCxfaS3aHgf+iV1mk=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
cwaNSiRlV+uRYTkhiEGj8AjyE8qqD0JkIDqMTUQ2KyJucsG0vjEZ+Kfzupon
dFAqRxn/4n4y5PHV+uSeNkc7CbU6BQfJYPZSlFEz6wiqWW894X6EDNkNZ/e4
77VEtot9QYrHyOA+bnZR8pgNmpj+nTFkTwbPa4FNpenu6Ob4bO0zRzK45O8+
8+rNDUT5tTFhe44MX+5ZbbTy30Yv+tjJAq70ekyxBSLECKTTwa/V7EH3tyHx
8CO3SPS1eYvtHW8yqGizDRslRqJTdcoB+3zJwCg2uXxnPAL9q9RKYwwgw93L
fmaa9PzQMqguDSaD69dwO/0DEUjo44Gxa2Fk+vvk0IUN+0iU+9aGe+cdMnz8
8LIkWDgKUXNPa0xFk6GyWD1WriwSNadfPJrziAxfQ4W+mcyGo7PJ1647JZDh
zr+QPouSW2ghLiR5yzMyXCxsnJSNuIYiH9wr735OhthbZp4Ww/ZIPCp++HEW
GUS4cyJi91vS3txKZz/8iq63tdh9NOw0bXdA3naufDIUBne4Vrifo7Vf/XT4
y3sy/T0zcjiD14Xm4lnlE1JMhqv6f+/sCnGhrV5oSqDSyMDT6/Y1wsqZdv9s
d9lSJRmKqR7LTO2ONOmTwwPvaskQktf8/K+TDa3QZprlUgMZzt1cabYzP0wz
sVxVUm4lg6YkmtQ9aE3rNmW1GP5OhjmN2MgdeXY09z3ky6k9ZHildef4GaHT
NAaqeJx9PxmO3GdRHtA6R3uorVAsOEyGx5ylLQczLtDk1Xf8aBkjQ9Jkzu9j
kZdon4UndvhMkaHtpIGzjrsXzYYxM1x4lgygPH96C8WTNjXm0FuySIbGYGel
bdRztLBWEQ2HNfp+OOmsxJe/jyZZ8u02EyMF1hi1XeyfnEIf0u91v2ChwDdf
7U8eu7yRxV0TNVMOCqRJn7I54BaARq8whk7wUODEkvWrz/RJDjpZ0hnNRwHn
Wo/QJMNgJLzPZ/tOYQrIXC1ebi0NQm9V1UK+i1NAYWm5V+XpTbRfaOz7dWkK
fDDbHUi4EoD6N59vk5CnwN+kMSkT5gDk+/tEEFamAN+2nsyQ9kBEahFsP6tG
Ae/LZtmz4jdR9qdmJTZNCjTkXabZM11H8DwqMFeHAin/rTgRTS+izijjbwep
FFjRbr7bnGuEPL03FP4ZUaBXVclpSc2ORjxRdOPRPgqkKtmrGo270VKNL7fs
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
0hb/D6pjDHg=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
ogE=
        "]]}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}, 
     GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-10.701752291395596`, -0.008380524903880235}, 
     PlotRange -> {{-10.701752291395596`, 
      7.195194394075615}, {-0.008380524903880235, 32.071950167100496`}}, 
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"-UL\"", "\"-Uloop\"", "\"-U\"", "\"-U11\"", "\"-U20\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.744469065649262*^9, 3.744469087929738*^9}, 
   3.744481966968913*^9, 3.7447549142229424`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"XL", "=", 
   RowBox[{"Interpolation", "[", "XLT", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Xloop", "=", 
   RowBox[{"Interpolation", "[", "XloopT", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"YL", "=", 
   RowBox[{"Interpolation", "[", "YLT", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Yloop", "=", 
   RowBox[{"Interpolation", "[", "YloopT", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"LogLinearPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"XL", "[", "q", "]"}], ",", 
     RowBox[{"Xloop", "[", "q", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0.0001", ",", "300"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<XL\>\"", ",", "\"\<Xloop\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"LogLinearPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"YL", "[", "q", "]"}], ",", 
     RowBox[{"Yloop", "[", "q", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0.0001", ",", "300"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Yloop\>\"", ",", "\"\<Yloop\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.744470752450013*^9, 3.744470824070421*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwUV3k8VO8Xtu/7OmPGmBlrhYSQcl87SZIt2ZItyrdUqGSvpMhWSbakhbRL
kZh7UFKWoiRLUfZ9X7L+5vfXfO7n3Pec532e55w5l+Z1ws6XjYWFJY2DheX/
v8VfI1++PEaH6o7ZuvaOAPxF5kFllwA6+JvOfjJZO4k/9dHOYTtCh0yniuJC
zVN4kbqw+GMfOsTxz+hbHzyOFy4Nx9t70cHNximbR9UXf1j9fn3lEB2a44ID
BdOd8XuJd4Lvu9Nh/4fekZ9tB/A8p7ARa1c6jPC//bm9wgvPpTp6zjvTweXX
eNDF2wF49sjWHzlOdHjG9UDm91c//HYJn7W5Ax2WVVR/tvMextMj+6sm9tOh
zdxIV9/KBb9hCbq39tFhs4d3zcHAw3iaWNZTtJcOM66Xro/uOIInd4XID1nR
waJCQZ5ocgxPfGh7O8WSDuRKd5cpzkD8atAW4R3mdBj/+P65bO0xPF6f69If
EzoUPl/vN3x5DL/E8Wf5ihEdVLzorvO+x/DYpndBmogO6hoH1Eb2HsWjM9IH
OnbR4efbdCcx4SN4pNdJtwv6dFjo0H3a7e6Nn1e1btmiR4dHkYYaDiqe+NkF
Jcvv2+kQoOEg3PXQDQ8FVka4Fh3ik452+Om74sFXu7QUt9HhpslwX3mKB37S
ofRRozod6khR1sdivPDjlDS5UFU62CqT1ETnfPDAocCblM106ImSC/vy0gs/
WmzB/1GZDi0sl3dcjnbD/cPpMScU6bDHIEb/3ws73M98bUFang6Ovhxue1XN
cG+Rn4FApcOp3IkRhau6uGdH8V9/Ch08wl5fWTxlinvcv+YsSqYD/XxMK3++
M+523L/pLZEO7GH7mj+ZeOMueiamXtJ0KGG1dTJL98ad2SjlfJJ0+PNZ18Tu
lQfu2LC09ZUYHV5IeBalezvgdunfHriK0GHw9Eqw9VZb3NbzGYlDiOk/x0e2
b3yscZvNV1Kf8NOh+A8PkfzeGt8z583tyEuHPLO3ewljtrglA4tY46ID3pjR
lFRpj5vHE2cfcNDhnurWrHckB9zUbs7fho0OmEOGcT7dDjcif/m9sEGDluyt
OYz9tjg28MjhzhoN5krlSde07PBdLy5+tlihgZDilk1oiyOuH3bIcGqJBq0h
GZ8DqpxwXVP9NxkLNJipbYj9FGiHawtJqhrN0UCpILcVPlnjmj8n7w5P0+Cr
7eXrax02uEb+Z+m0SRqE77TPOp17AFcLfHBNf5wGvsr1NUVenvhmnWj23hEa
GF/c+593iDeuwuJ6LmGIBqPp+Yub03xwpc/bJ7UGaMBZk3iA/Y43Ln9DxLer
lwYJinVi5/5zxakeox0X/zDPC5amvDXYg1NUam3VumkgMLj0iq1WDSfP5NW2
dtFgP5eFz/MADZxYcX5XZAcNHJqGv153NcCl4pyKlX7S4K7/sKjznAkuYbtN
5UsrDaTE2ZZPvzfDQ7Pmt5p9o8FtZcXWnABzvG3gre67rzRo2s0uH3XBFNfT
jETbmmgw5C/8vv6mEZ4ZYWxRUE8DOkSaLm1F+God1z7ZT0x8Ee1xfMYY7iFR
73S9lgZi4TVDceH6OBxK9uB9TwPLqxMcMmziOO2xvV9UFQ0MExKjhraro9gF
6ePzDBoEpf91HCJRUJ9RV8ixCub72yWqHwUb4+bX8iL+vKXBWKvdtYRTDnjh
T59LB0pp0JUU+cOz0RHnU9h0rbGEBoO03bQqhh1+7MT4DZNi5vlGvx9maTZ4
Q/nL7LfPme9X7NyevmaFq3OF3t/6lAaHd3leWnhpgafs13/yoIhZf/Ogpp6B
CT6Tvf6KVEiD/uwLaoHfEO4wVP0u9QHzfgO5u9iPGeGvtS7XcN+jQfSXYGdX
9d24VNSe+og8Ghx9Gj1bub4PP/tZ+NtsDg02xwkHv9m0B++Q/N4RkMXkI5qf
K0/ZBN91OONvdwZT7+avl9rOGuO5T9xGHNNpoDztzmehYoNvLFJn6q/TQHBz
pRT9mj3uadL/zyiVBqYWg8cOmlni1UmPWMuSaJB43nmVvUwSV+j4j1c9kQYs
ZuLOpgcUUJyipuj9K0y9wl3J/a/18KGgBYLMZRp0OJyyd6Xsw3dXlFNTLtLA
xOR6ntNla7yIO0qFK5YGCnfcDAZ0EC5gb6IRHkWDirPuWzQfSuPHc7n1ZsJp
UP0696XEZxn0dbge+Ycx+0vsjjSZTQNpbk+x+H2GBpmaJmnpPbroerTDPocQ
Gkyguxx7KBiaqycc+HyKBosvw6Z1txkjJ+lfHoZBNAjU7AlhLzVDZV53/d78
x+zHKydiaz+aIplnvsdVjzH9m5+rOv1ZAYX/2xSa70+DPvWMVfVVDP9lOhFB
8KMBJo5/eC+5F8dSii8ledPAKir4LPuIFZ7XGXqN4zAN2MLdde8vm+A+pzay
p1xpYGd3fJensTZeW1lz3+8gDUiN/Jzv9yjhyrzxT7qcmPmUL0Smpmww4h2s
S+wcaJCSn1yQwcuPRu6IVNTtp4HKxGT4KIsQbj36vQbbx+R75U3LUYet+DOd
2/Ul1jRw6bA7X2e4HReJdf+22YoGk2v39fY0KuMnG2mdeRY0SOPf87VnZYTR
Qhj4K2VGA//Trx7sWvzD0PYpGkk0Zs4fb9HDQoViePrz4zNshjQQEcGHk/5y
4kvLmstnDWhgM+laaow2IxfzRdZJfRpoVX808jTXR+9S3/H66tEg1//gb7cG
DUT+FSXauZ0GT5rYDi6XCuGRKqbE/Vo0eGduM+scpomPRKVozWjQoM7WyaDq
siru1Na197o6DbaE95XfiZXEq9U3+Wur0uDn2Z3JQvacSC0uJLZ1Ew1CRgUG
pMKpKONXVXaoMrNf1olzz+JVEMd2oVJpRRpsjbYyb7HdhIISXZrL6DTQcyi9
+CFICXX1Phw9SGXi5+KfjlKhIcuds5wrsjRotLv7SzBDDJWkIWo2ien/Nxnt
73NEEHUkQd+AyJyvTrO7hG23oQSjnw6/pWjQLGbK8S7WFC1kKJyIkqDB3+Yt
b9WC9yKvqaArVDEanFZy5bMIMkNNFpX3qoRpEMOf/bj51Rakf4eX4SVIg+92
dC7qvDz+cMHxJzs/DbT/CJWc1CDhYjb5M/d5aKAaa3ruQrEAinwwIWDOxay3
E15UbdqChlf1lQfZacDDL+3S36GFHBwuG8Wz0iDg16Op0KQdCB5/c920QYWS
G3OcTnsNkSo7NfTzKhUSUcoWw0VjlOESmHJsmQoOOvLuqZPGiKO4rEhgiQpl
puKM2lo9FMTL+eHpPBVq395li91OR12e+7ttZqkQf4b9mbstK25ZlvNvcooK
LIPrHGdeS+ElwiPiqRNUkCDqyU4ZknDqER11zTEqmFpjLs/30vBERqzlt2Eq
jJaYhXS+VcAXJb94BQ8y8f06p/7QRxH3+o8UIdlPhfqLQ9bBUbJ40/sjt978
pcL9oXNBax8EcH1yycsDPVQI7DhsO3ZrmfHwNEvD0i8qzD6KOHnsFTcuVm89
cLuTCsnXXM98JkjgkfTbLDvbqbBWPzaSNUDCR871y3T9oMJW2Quhwt/lcKfm
bdsjvlPhZnDhBJcXGa9WidxHaaFCXmzpmwXdUUw9+nMA/oUKzoMd2k1DVJTZ
JnXRs5EKykGUnzvf0RHnVu9c1noqgPZY0mDtDCMo7nlZfh0T35EdjW5vVPCu
XystJrVU2CI5u3mhYQtuud1yvK+GidfG/kyehhxekniDO66KCoXEs8nnQqcZ
1L4emjLO5HNc6v6k+RojcafarroKKnzX2cNOPCmBL6Wdcwoop0JmRv0HnZt0
3HvkQxBfGRWKPSl/FbU3401GYgmPX1PBhmcgfb/fVlz/tscD61dU4Lf9bXf0
qyr+cKoIH39BhaN9WocHyuRxMcvF9qRnVJDWDSFYnRHHI++YzG19QoWi36k1
HiUc+MhCslDzIypMkmS930quMpxsulROFVDBSLi6g/CBBa96oGIi/oAKIaJs
nmOrgrjqWrB7ST4VTrQTxM6fl8QzHKrOOOZRYWbERTf3lSjO8UQwbSGH6Q9B
rROnhf8xgthdntzKooJ3/IeNKxG9jIO9Ns9MbzP9+cz2s7esPG5cY/JiOp2Z
v+jiQcYfbVz1nl5x7g0qUO5xJl2Y3IlLXlAr2ZNGBexZ/ZEHC5r4uhf9zVIy
FV5StvzHJ0nCh4ylyx5co8LizoqZF4gFNdMFyu0SmHoUSbhVd3CjcjbWio14
KvzlyEpdtVzF7v2dr3wSRwXyfn3hG0vNjMTqEfzgRSqkheSVn3i4wgjN767i
iqXCZbmlvEeUacah2O81r6KoELn0Juw/Deb88Pr0wTOCCuWDyxzke1pI05jx
UfA8FUTukxc8/+5AJPqrT+VnqRCc2zdB5NZEHGyF9UdCqdDKeaNujxYRjf/J
bpQIZupd8/pR+29x/EdV6peqk1T4eYVXJD1jEw5345qPn6BC9O5Gm4S+bfij
mPPfSP9RIbZNTu5crQaedjiote4oFXJ/VHHGyCnj4Ua+bSH+VJiKDDilbSeN
+9Jc2ul+VCCKR7XaxUjgNqz7Or94U6GJyz3hSZs0rvvH5Ff4YSoEOXy/6ZnM
7N8qve5Nh6igdP9E4pU1Is53V+3PDzcqKNyVzfJUkcJno+m9F1yY/knlzLtE
5MW7PKX7NZypYHlHQ2O/cCtWaygw+MuRCsP8lt+gkw09p7IOX7Vn9pN6ZkB6
8Sojg2VhRHc/U+/jAYc0/qPjMT0jY302zHmwW0DqJp8GfhS6J1KtqdAz3F9b
2quBO+R9n8KsmP5xOvH3sJYabhD9aWbUgjlPOjk7eFVpuJInYy7DjAqG9Wjs
wggrEjF8tWBmQgXNlJwPow+V0D+5wqUZQyrE8d0rmi2mo78b2ct3MCp8NdDY
bVzBi9d3p65a72L6VWHZb9pfDS/B49b/7WDGDTlO3BiQx3PvnGcp0GX2q/lQ
wsmX/OhyVBCbw3YqnNrVeL8hexsKOuTLwapFhb3anEudd3WQC3LheqbB9AOb
9+u7nbrIRG4fj6s6FYRuq90lxWsj1Q0TPh5VKgzatrbO2qogyW49gdebqKC2
Q8lgrVAQrTPUhLyUqaAylan0vX4BG8qliwgrMuebdf1RASMJ1BwpLVZBZ/b3
zQdOHkV0VO4hIBFApYLHTmWThiUquo+xSklRmHwoHxd33iuJrlEWpGtIVFjo
z7VVuM6CQtdHiEFEpr72al7rT+ewQ7+7SbLSVMhRTLjWQZzDLBnfZT9LMO9P
MvUdEV3DNHM/yZ0Ro8I65zGF08JciBTJoCmIUOHDXJY6SxU/4vB4Jd8sSIUv
qg47j83yowmDQsVIfiqk3113O/yTDbXJ5ihv4aVC9sPHNe+mOhmwlrrpJxcV
bo91PGi3oeFCh4Iq7Tio4CbJ8t1qcRvuCjb7G1mZ84f78FF6rTZua+LyOXld
DlauQMH9G0r4KKf0zMV/cvBxXEhRp3SOEVf3jRg2Jwc92sEHVM8L4tSEFKMT
k3IwJBB1/TBDGX+3d2+Az4gc6JWhIW6FrbiTCF/qwX45qJa81nrSnoBPt9SW
2fTIwX86Yrr5rsIo8eaFHpNOOUhZNjlYep4LKTkb8uz4IQd+ZuUV566I41Uy
a1vVm+WAvpQlyxesgLv9entAvkEO2KsGOVY/i+MLd0KjCB/lwPrbMevfjCUs
1UurQLBaDpoG/SN7fFiRquJUE1ulHCTGRIRHhM4xPg4+WVgslYMnX3+rtHzh
x72KAijjxcz6fVpmlyumsdVAJfO/T+UAE/Lz9pQmoltbe/9rK5SDUBhYn16S
RZozd2423JMDdbatls/bJFBDiVtlVa4cSB57qdJ+lwMdOUPsf3ObmX8R+yFo
z4HY9H8IPLkhBwJ6vqD1mQvlrKZp302WgzRO+Tsrf9iQHr7PLf2qHHC5FJ37
WTGDtcQIXEy4JAdB82s3Rp63Yv+ZfnocHc2sf1/OMvzrHMbDHfct5Lwc5C2X
TMkgTpT/yXjlaKgcbDuZHhU1LYQMEjfonieZ988/gxM/i6KfNhVWjoFysPqD
xXbhvjA6LXrulNUROTD0EM/r3dOBCX3fnom8mPpQFGaWmgTwwvSZKm13OTgL
2XajjgTc5ODz4U3OcuBd80vS/h8B/00KFJWzl4PRCoJD/CkJ/OxvlR0SNnLw
NtGk+WUxCy5+t9+Td7cc6Pjwj+dZTmHPvPPj102Y9YpEx874rmG7lQ69mMXk
gKXpL6E+/wejb4j0c2gHM9+EWTkhiQOPfPxz45c2U3/zhV+7slcYxOM3lb9t
lQOJUEHptRt/sRINu311m+VA/6fpn12HBZHNrNCZSkU5sMpWzKDPkdDw6/rc
YiqTjxsb0TZ/6Oji2fjaApIc/Nj2jGRkTkNyO80msqXkgO2RlfIFCyIqX2OV
ShOVg6SdUy9t2UWRAzAMLgvIwX0H/f62MAE0GXveN5xbDtRK7e331nCjq2Z6
106yycHSB63Z7KElTIFnvsRvjQJ5lnNW/uzPGPjnl12uSxR4u3Lh9rvKaYbL
teMc+2cpkP/m6EH701OM+X1bVM0nKPBz59EXmad/M1LEhux3DlNgl8uk0Up1
B7a59f55jT4KnOUS83w7PYd9uHX4nmI3BS6JfzrUl7OCebpQ6mU6KODGRjim
kTyDLZM7Z4RbKTAlSmQXcivBbnbfkuH8SoEh2SzLu7DK0Mh3MF7+TAHTUx/O
GQ8J4t3htGSzWgqEHTh11sJTDE86MNGZUkWB41PtCaO1nLiB5juVrgoKFCY3
7PC0/80YE4gPUS6jgGfmOJugag+WNehQfeoVM9+CgPNhx26GVTVNmPGMAhfK
dYzn6lcY/7InXHmLKOB4bZfcjSdrjMIz7wodHjDzGUxs25CZZRywi5+/k0cB
P6fLHk8O/2RwqTkaj2Yx+WuDysTjBYzX3PRknVsUOFg6z3fP9yPm83eiMyaN
AlyFidT4Pd8x8cp3Ko3XKJC9oqXVov8Tq74VH0K4QoEDnHbWicW92MlTjtXe
FylQ7hXhzB+4jFH30oWfR1Hg95+S2xXbedEX5UnX5TAKbJ/6rF0xLYIi2SoK
zUKZenmJZe5W4kdqv+LnU05SYHXx1pOfTStYV6mjcVcgBViOfgwx8L7NSEij
Jyv7M/XaZPiBn2uWof/fZOcpbwosv+tO6HNkwYctKlQYHhS4mpRB869jwzPo
V0J4XZh4/8kskldZcIs1x2oHRwrcotm4P21cYSy00YXzbCkQ60N9kR27yHhQ
POk6uocCjDtbyt/ELzAcrlUU6lhQ4AXnXZEZuRUGu/+V+RhjCrwhRsk0NfHg
xcZOxo0GFEjbeOgZskMUPywrn0zYQYEBjk0M3mgRXGRpstNbmwJ2hG/n1tbX
GXhLhcrzrRRwMJAZ5l3pxo4/vRKyvJkCVnrH0ktvrWCy8U7VZkoU8HX67Pc8
bg1r8JIXTqVR4PShvVcfVS5g5w2mXLvITP+hO4WkhmZsM6GyUJlAAcG7j673
bR1mtM9cmT8lzvTf5aXQQ5MjjPhGJ2OGEAWcT9zmiJ6exnQL5ZN5+Zh8jRS9
5B7nQQOxU50OnBR49Tni3s92PnTTvVIlj4UCnSHJ3m6Ja5ip3tWQ0RVZsLRq
5//z4CE2K3agWmdRFlpvdI5tSx1n5I/LC8fOyAJXJFe+28wMY3/dlGvjuCz8
NFFZjvL8y2C5V1lIGJYFt81TC9GGy9jziKvz3n2y4Oijyfr1nTDycD5g/Lxb
FuxGXzr9kpZEgloKycsdsmD0J/zNeyEJVCE43Wn2QxYeCN3ViKoTQseGKlVS
m2VhynJKh9V9DpOpuRrS1SALMswv5T/dK4xPOQeqletkQdsgQrRFRwQ/e1ZB
+HSNLKiUcew958qNK9tPuzIYstBEZNFp851m/FBjFPKWy4JhYej69ehixiWe
hHmH17Lwiz1OLjt6iqHde8A474UsjAykvPqVscHorVRIHn0sCyXbeLYK7J5l
pGVMd+oUyEJD8ZtfLaZjmPFphkpsviw8c27y50/hRtN7E0Iac2QhPfEyr/4A
H/LfsmXgVYYsuL//nEUR4UE9PPVOmddlodTttaRLKRs6MHD0Y3SSLHSIpZZV
PF7Gmmr49I5ckYVQs+rMs/tGMfO7RYV7L8pCNNtyUO3JRkZlpBVRO4oZVzNv
9Lkxy9B2G7kiEyYLiRdV48WN/jGe7Li6zBIiCzv+1lJr704x5KU3Hxs8IQud
75f5+1R+MTLnPnU2HpUFhdAmUYWhIYZYS4B1iS8T3zWnWzd8FhlXnvNWZnrK
gnMvqOEYK85y7ZFajKssHNImVjk2ceBnj+7OPeIkC2xX5001WTjwSYthIZv9
svDk2ab5PIsBhp/ilShta1kYuOErXPZ6EfvFtmlKxkIW1l5EmHOzcCCHnjpP
VmNZoB7OuSSruIw1VPo3D+6SBQfBHQ2Hv3dgJlk8xk26shB/slLI7SeOlZ8t
LC7RZOrx4Gh0hksDpulkKZ+lJgs3A/jN7+1oxx5pDV2PUZGFlpfz/12724NR
ReM5/OWZflJ6xqDfHsRuTSiH2FBkYWyPo4SU0iIm1PCxX5vI1L9mcD+5YAOL
e3TEiSQhC9bSmWvPH85ha3HcH1mFZQHw3w/ypkYZwT4FukO8srD7saGhcTgn
PmZkUdjEIQvZHy8K/dZdZnjLDRJeb5Bh1fzpjR5KO9axGncla5kMN8yyjju1
rGH7O5SWY+bJ8FRD7RbbcRZUV1p71H+KDN3plm+md65hhjf9Om1GyZD9yX52
m84iVnqKy3r7ABlevvs2qRQ2hanbPqwg/SHDo/ebOk7rjWAP1czV2LrI8Jrg
Nql1bByT5R/IGfpBhnPXB7r4mO/fGLok9KWZDOTr1L0xTuMYf61i1OsGMnhM
LO+w1+nDYu99mMz6SAbDfJaDh0azsOVoX8/YajL4MEye/FkeYZz04Gz2ryTD
WuajWwk7FhlDOx8Y7SsjgxB3UbaH9xTDk2hWvP0VGVSE6jTKBV8x2hb66ORn
ZAhncdDL0Z7DbL5fvM72iAw/bsl2K7Rwog8vFTiG7zH5eL9mV39HEO1Kfh/8
JZcM0rv1zcqvcqKSQJ/+17fJgF0+FrWQN4ttseJwyr5BhvirWQIKT4ewfOX7
tbHJZLj7kc9z5fsKJsNpqhtwlQyaX9QU68o4Uerf3oJ9l8iw/npbgsY5VsQD
Fwg60WRIvdp298WXWSwqR/4K+TwZPJXrrshZ9GELYTX/2ELJwHYv29b2fC92
3Nn76HAQGXT433j1vOjF+rezd345RgYWVPKwy6QAcxO/t+eNHxmqC6sc5XR6
GN+njCuyD5PBwVhMRO5KN2NP01/VC25MPtP3RMNaHVb9ODYn4ABTr/J/tMyr
k5h25ulfR+yYeiOt5Db6PPYw3kfWby8ZnuuvHvPAFzHCGUd3H0syCKie9sEv
L2EJvuY5XiZM/cPdT/luWcLW7XV/eWLM+2aGneIPX8SCjFVkD+0gg3yoYmXF
viXsrwbR3V2bDG9H/O4fufIPc5Djy3HdSobPfs0f+BKWsVrBla6Dm5lxv++y
hPZlTG91lOysSAZjl4az7i//YUUjXW5OVDJQnhnQc9jnMHJ7Y7YDiQylc59H
Eu1HsKSPjC47KTJceRbXf7/1L8by5jl5vygZktrvH/q0OoSdup/ntk+ADJeP
j6q7yc1g/Wmp2Xu5yfCmlfEouXgZc46J7drDxvTTo2pZbjFW9PnEabLVGgn8
ucgJei0saJeHj5vlEgkC1Y/GcHwdx55ZO2abz5JA5dK29cL1FgZ1p3mX6QQJ
0PlDSbGH/zDSNumSTYZJwDIk/aW7yhrjIKi4GfWR4J+kNaV+4g8WykXMRt0k
iEy5thLW2YoNzfF2GXSQwLmrs7HFIJPh0rtM2tVKgp8CHPFHMr8xGppHXfW/
kgCOGT48u7WDgaArS6+eBDfePW9ev9jGKH7W2KlTS4Kguv/qr795iCnkMEjb
q5j5Lj9eL2j/haUnPHfVqiBB3b6wwNeFPRhPWF7WtlLm+YbhKLHKaizMP7Vz
azEJJIs9xd8JfmKMOcWS1J+SQER/7ZGYXiHmYXbaVbWQBIpfJtFYbzfWrOWT
tfkeCRy+1cntvj6BmdIdO1VySUA12bZ73WkOeyNiTlK+TYKc6dAd6QXzmMqG
jqviDRKY3NKY+Lx5CMscV86STyZBRrIxprXrJUOgi9BJu0oCt5c0kXT/Xkbk
Z14S9RIJLCrCb22U/WZMlS27UKJJIPeJdT/VppzhVTCaST5PgqVqWfvRonbs
+82uDplQEoSPSJbHFo1j5hcbZYgnSeAo0nQx0nceKzvFcJEOJAHvhcdRcuaL
2JbDzzMlj5CgKzrnlqz2Ipa7L69D3IsEy1/XSu9JL2IiWKqMmDsJhiKe9mnQ
F7BY1VgXEWcStIz2BCgqz2BzMqczhexJULq44wRFswvz4/XpELAhQfmNMemi
lE+Mn4sOMvy7STDjXHUj6cRXhtWAmQuvKQmmInzvMZY+YRXfdTK5EQnU9nM6
2m8ZxNRrlDs49ZnxrFdrJdEjWN5LggzHdhKMBSl84/g0jInl8bqwaZBAINFl
l1JHP3Ypafk2yxYS7DvBeuXJxR5sKXy0fV2RBD5CyrWrKe3Y0WNdxDUqkx/x
Q1WZc3+wroONB1dIJKAPixK75IcxG0vG7X9SJPBw7pKs9xzHvtvg63vFSBBs
ifNRQsYwV0fwzhckweHyI/jmG8PYX9equgUeElxiT6++ZdCH+XtVq+3hYOI5
tWlH+aFf2IR/TdqdDRl4wcH26Rq5DQs58X5xdlkGlNq6eWZnerHVkA9ulgsy
0Jx2+812/nEsNry2KntaBjI0DM/q/ZzAeC58VJoek4EostJhJac/WPKVugSz
IRkghjwm6tQxMKmUT1O3e2VAQz+iLe1dJZad/tlx4rcMNC6p3txH+oPRc+rL
jTtkIJPTo//UsSms8F6D3K1WGdi4fNm1MmAOUy9qvDj6VQYUN9XEpckuYK9f
NA2jBiY+xxxti5sL2K7SLzY3PsqAr9u9s7EuC1h15ddXQ9Uy8DGUyJ1sO49Z
vm8mGDBk4Dtj5/Uxr1ms6XNLROpbGThzXoxdsngKc2j+9re/RIb5lVj26NGJ
Mayz7buF/gsZKOP6MGJpOIp5/W59kvRYBk5sq2f7nD2GDfX9EO19KANhVdRQ
9GAcOz7aFqqbLwM98ntMTsQMY/PTPzsTcph8qCS2u+n1YeFL7YY9GTLM/9s7
i9e8ejC2jY4H2jdk4BBN0eI4+Q8Wz9nFdyVZBjxnPZc2JHsxYYFfJ35dlYEb
tempE9F9WLrY7+/b4mTg7G/S91MjfRiZ2L0jLkYGrt/capTONoDly/XkdoTL
gPqRCJ1i0RFsk9If9q1nmffX82sLDpzEXqj+9b9wWgakdbUNi4RmMB2t3sa2
4zKgdi9izH1kGqvY0aepelQG+uysh3uCpzETw/5b0b4yoFL3SrRdZQb7bD6w
+t1TBkqXZeOwvfOY7d7Bw5vcZEBqvtbVL34R+2E/VBtxQAbsSqwk07rnMHeX
4S0tdjIg5lU4Jb9/DOvzHElRspGBN8m54WYRv7GjR0bnw3Yz8UfXX/tt0oFN
/Tfm8sVUBgjSPjFuL3qwM8HjuLwhUy/TgY1KwwFsPWxC4exOGbjZeshj78gw
djFm8kqDjgwkKv/mokVNYHzxUxNUTRkoMe65syQxi6UmTduHqMmAfEvK/fmL
Sxjh5kzZJxUZyN/E929f4CqWmzUrS1GQgW2zadTnE/8whfy52FNyMnDEJmYr
n9Is9rhwfrBWRga0WGRraduGMM3nC9YkKRlwce+7LP67F2PunC9PiDLvW2v6
tpirD8MqlqTeC8hAJG1TX1z3IPah+t95Ao8M/J2xEMhNnsSsPy33BLLLwM6o
e3XeVrNYy5cVs6p1IjzdGbQAEzOY84/VIsllIhReWfFYjhnHfnetCR+dJwLP
pVcerJ8GMJ/e9WDGFBFOvDt+8qPzJDY6vNEuNkaE31/F+HC3RUx/9psX2yAR
DjlYdAQy98H41YLR6T9EgNHg9dH+ZayNMzz4TxcRHMKaLHwn5jElYdu1r21E
IHA8xE7TZ7FggkIctBBBe3F/ewljBquhLQm9aCTCneWYU4GtM5jYloZbd+qI
cJpyzmTcaAbz1M6jJtcQ4U2P6cb99mnsuUHwo0gGETQ4Y7KaxGawdXNLzeNv
iYCexRGOfZ7BrG3J79xLiCBu8LJyPnAWyzo4ZbL3ORGy/v6nvDozg414vW/Y
VcR8Dv2ysx1mML3ADEfVB0QYnOmM2HJxDrscEviblEcEmSm7kqC3TL9FGh7h
zyJCrnx9QRjPMqYYLzG1fJMIf80sbvQw95fg1KGzIylEqC49b/P8yBxWnVnB
2pFAhFS+7HA25r4mej/l6qc4Irzy76+WU17APJ/6iL+NIYJKVprNmOc/7Nkb
vezCcCIkV6nVFAysYmu4gGLGGWb9lOcbBoc2mHr2PL18ighCr9mF1sbXsMyW
Ep0z/xFh6ma1gP/EEjbcGY/7+TPxP+0d5E6Zw/T63SydvInQ/8ZarpWJL25C
o9nMgwgFJV+tt4atYK2LHC7bDzLzRyuY8zatYAqs7X8VHJh+kBcdy81ZxE7x
PT0msY8IeffiEvaFzGJV4jFz7FZE0K0YrsvfPIeJyDpGzJoSgYXNoEQubAHz
UNrE1YuIMHZozj2/awl7unUtqUWfCMW6V5y/Ri9jq3rN0tXbicDqK+vOGr+C
WRk/yHupQYRV9dRfjrtXsNt7zm26u4UIpK/v2XJVlrEhh73FKUpESNHWreha
WMR0PGg7o2lEKOsSlSayzGOXjszXnCATwWvjq1/oqxnse9An60PSRDgsUcm+
Z/ssRg/LabURI0JYVmVhu9U8dvLCSQ9MkAjPymF/eMoSBolmg2o8RDjleoBT
P24VE0onBsmyM/H7Bn88OrmBud8ZXxJYJ8D7O+El5aos6ElhVczqEgH6BYnB
eakb2MrLm3xjswSIfJnXdll+A7N6F3C9c4IAW/Komjt7N7CM9wbk+mECKFKH
fLVPs6DBRtEH5X0EMICLT8PYWJFOW79aUTcz/t5JYXsIK7rY8/bN7Q4C2Dy/
tEa4yIq+DV9DV1oJ0Fg/tf8KFyuizx6uO/uVAD+4sVzBYywoaHX7fv96Anx7
L5UuIcaCcE6+jgO1BHhhvpNT7eMGJiT828uiigAiPRtTltc2MDdC8ahOBQEa
yqqdJI5tYI9pccFKpQSoTpG5yWjewJY3u6xJFhPg3e5TL4pHWZCltnoc51MC
7Nc0v6C4iQ3dMmATni8gwPdfp1+EfWdDyx4DFfr3CNDcb/OO7MuG3KI/H43O
JcA2kT011h2sCL/7jFB7mwCtLOEJfEJsiF6TVst/k1n/vGB7zRc2dKkvNHh/
CgFUd+zn4z/DjoY4Xem3EgiwLDJ1yXuFDe1RRl+74giQqVyNXpixoWeW8pH0
WAI83fPH0YODDYke5Vb1j2Dyj35mnZthQ8EJo+1PzxKA08FkOf0HO2p78uXy
7GkC7BqYJDQFsSP9plfbd5wgQPolyz6JOVaUM3mrN/IoARZtX32uaWRBLKLh
qe99CVA41V/8WYMNeWt6Ir7DBKixLA37fZ4D1dqbju9zI4C4nkPUXwcutClE
JevmAQI4ub379UqMCyWmC+zutGPykZX8q8aXE02WTi1QbQgwohKx/k2dE9m1
f7/vt5sAfkb0vtPPOdHr5TK7J6YEyD5rVPBWkwsRyDksM4gA9//UzpuKcKHz
BjHPdHcSoCt0+cKPR5zot4evW4QOAbS7A7XvHONERtG7+Wq2MflWKQ+oYudC
9++qlfGoEaA3OGWl9gUX4q4R9bNRYZ7P9Pd0/MeFjvbNi9+QJ8CD6ycMhO9x
oUbOjqp2CgHKR7LVI3S5kIYy44ScDAFUivfQtIhc6LplvqyvJAG+pPIZbjXk
QgsBcfVFIky/3PfqJKdxoYMJR89N8RMg+FLA9A1VblTxxEZZh5sAZQW/dhp8
4kZyTZqt59kIMJ850XROiQfFTkpdqFqThr6DmhP9ojyoX2RFg/ufNNwiTkrd
HeZGlprdv63npOHyU5fvPFPc6LF9TWLapDR8B9o8rzIPEgop0P85Ig2P5YPq
zEN40Mn0hCHZAWnoNan4KtLPg76Xnkj3/iMNfgF6QwfteZFuu73poy5p2L67
hyJykxdlLuvOTLRJw76ggM9xZ3nRGomcp/1NGu6cHtO758eLPA1YbMKapOFg
Nb1J6j0vqvboW8E/ScOZQ0Gsh5L4kGJ03SPOD9Kw4UeVsTnBjxzS+eI9z0nD
f7f9Q1u4RVBxHeJkBEuD0vXD885CIkhkJTiWFCQNDXOEnOvM+HG1oo2zx6RB
wGB2RphTBDUc6g7/4ScNLONJ1YNqImhzmsSylpc0ePhwnl9xEUHx73efSXWX
hi2JxXcrj4uggYXIuQlnaZiXKzwgZyiCTDaVnLR2kAbtOxk0E7IIynMdnni0
Txq8vFPzt+4RQevXKIHce6RBqvsbv067CHID+2Efc2kQcXBptj4pispn4v2q
jaShx/Jt+xcQRQRFRq+cgTTsuXrzU0OXKAo9MOsZoScNNVta8XODokizwt1V
b6s0wKLHxUxxMZQykfbz5mZm/fh61rEtYmiCWuc4qygNHLN3d3abiyFr+7UW
WxpTPxXRP+cDxVDRJU3bZ2RpcBDYEqH4VAzxlB1p5CdIg9PY7q9h3OLIbyTb
KkBcGkIN9ce6PMXRe3LLx1ohJt4nzm6ut8QRbR+3mQIfM9/VAZ3aUnEUGbOr
OoZTGi79vDXJ/U0cdb06ibpZpGF3TtWqyIY40h94WLFrVQoyFT/taleVQBmE
rh2Zi1JQpOpMMT0ggRasREsXZ6SgKt7iyOhZCeQQYa7tOCEFt+qXcm5kSKDi
5+dfFg9LQeIeia6cUgkk8veFuki/FDy0iN9T9lMCHZcYePxfjxS0/Cyi67JI
ogZz0qb6TinoWS8YydGRRJvP2T5UaZMCHpz85vJZSRT/+JJ8XIsUXPn3WXqx
ShIN/CrP622UAovR4NESKSlkKjIla/RJCn6KCX5yD5BC+caKWbnvpaDMJhqv
eyqFNoJdCKu4FDTxBiUM/5BCbgXJNw++k4KIDw7P4xekUHn7e7HSN1IQNsx7
gS4ljUKxrYKnnkqB+gBhYcpFGn0P8rn6pVAKXhwU4Pt+Rhpp3rvNrXZfChY4
1BZI6dIopbXp4tU7zHinIF9+hTSa4OZgG8qUgvVvh91ClqWRtf6OKLN0KRhN
0umIMyagosDjq/mpUhC+FHilM42AeO7cO8dyTQp2t25b3D1MQH7NPxfc46XA
y6p4pFCPiN6zCwW/uyAF+20Wm/yPEBFdx2SaECUFMFvfLBlGRNH+Z4+HhkkB
14cnatQ0IvqV+XT0W4gUnObfbWj5m4j0G//6bzspBQcIo9/LzWRQxob0QFKg
FNikWMY/eCGDFrbt9R47IgWpjO8P+zlIyMEntme3txR4nBV2bLAioeL0UvcC
DylIeTkhEXqGhEQ+jXVwuEjBgEDEyOcYEjq+QnP2cpQC7/v9+LVrJNSgdqAV
t5WCbQaNdVurSGjG61Bo2R4puJr3kf5YkYwIGUekX5pLwcusSp/w62SENZ4o
e2QkBVq12xW/DJCRD9vZg/m7pOC60JPEPVqyaO1Hxq+LKlLACF9zaQulIPXo
jv7dLFLQe37ZflMcFTm8/htnvCIJv8XL9dvvUFHYyIjyzgVJSBa/GB/1hory
5GbrtKYlYeJwm79rExXVOqwEqI5JQmSE4Q2JcSoau8LOrzgoCRFWGTRPAg2J
4fxPZP9KwkFcm6V+Dw3pzYnvlfolCRxvH64WJ9DQoU3kCaGfknBNif/XkS80
FOehkMz9TRLeZSv9NuKloyfXVTVYmiThgJlg/PVNdNRSp928VCcJSjph2nfM
6Ghpbdep6RpJcEx6f3nuPzpKaXFf+PZcEszKv1XlKsujN9x+txqKJCHgdvvu
cQd51LXruN6HB5Kw43Nq+6tL8kilIDLsTZYkuP3Tc3o8LY+qzt9Zz7gsCVEu
tbwBHQpoRuEPl8chSZhuYJdJClVCBJfhAicXSVj/gwV/fKaEsORpy32OkqA6
2/Ymd0AJ+bz/N2xhKwm1kz1AkVZGV/+xJhjukYTRyCv5fRbK6IU6n+oOc0n4
97xz/nCMMvrhLda4zUgSAisWlns+KiP5JrqwvK4k/DV5dsfQXgU5nPGRHhKS
hJvuR3Iu6m1GSe/Df+nwMfE/Jq5N/rcZfRK9ee8SJ7O+xLO3Ec82I45DTwO+
s0hCwj2iSfPCZoQ9+bBVflUC/jRbOhOxLUj5j5Klx7AEtCfcb/LWUUXLVsNn
v9dIwDzLWROlAHWkncGK5HEJOL77Z2TwI3V0op/IeapcAh53Ezp2zaqjIk3N
engtATIcRzoD9mxFfVFWqcIvJUAk6oxYxb2tiNLodcDjiQTwlYd5r41vRc4y
52WfFkhAsFrSXQspDZR25HrvSr4EvN0RbhGjrYEaSx4/ssqVgIHtqFrFUQPl
UY53wFkJEMWyCuSztqGOY3F5wsEScK4vW+FKzTYk+TbXz+OEBAyPRhnxjm1D
V+2/zKz4SsB/e0UCnu7QRKfjNfh17SUgBQ11D49rIvOZmZ1P1SRgs5dk+/BB
bTT+4UzO7b/icCdFSswgURdNSXpfvvBLHK5lbPkU/EkXzfjanPzvpzj0w3mF
Vm49tMSpaGbUJA6tHyYpQxf0EJt5y9jQW3Fg7Z6/WhSxAxFqVXfppYrDMWOt
CIfMnUhGiqBETxSH0P8Wmse6dyJZP3YRgcvikHw+QCpNeReic3X0doeLQ22N
a8Dg211IzfxywmV/cVjTtanK6DFAxrV/On4gcfjCorZJWc0QmUo1vgd9cTi/
M0Guw8kQWfiVPSvaLg4rnH0mwdGGyJorOTZyizjMOVst9X8zRAfMd21WkhYH
SnGdxXKEEQqsTT8XMiEG3hkKh/ZPGqP02j0EiRwx2EHEue6om6MbyvHNkhli
wNv9MVjVzxylxr+/Kn1dDIJ5o/24cs1RopXBmswVMUhdkuHIEbZAsU3qf2kh
YlA+ZSS3eckCnfgh+mTrXjG4+WH1b1f/bhSoa+O7zVIMBCulSniUrdDRjKsU
LRMx+Hx47OUffyvk58KeqrNDDMyLQ5+9H7dCbr/nQgwUxeCBVNozyvIeZDnQ
hvasicKPQ6IWH3baIHMLiX/WS6IAri+/Kly2QSaFtsU2s6KQcNpdweCbDcKO
flKwGxYFG/mhNv7/9iHtiXLeg62iUHb3ZX6xgy2iLeR883sqCue8VhWd7u9H
y5w+R2LdRWEmH7q90h2QQNQLsw5nUeb+5aNArXVAlKVVeU0HUdB4f/fFxLwD
Mhq52fPHShSSXO8e6HJyRPFNHw8a6YnCrvHac7YUJyR9a4s1i7goqGWfKMTe
H0AqImc3OwuJwu20kyIqKweQ/pX3PC94ReFnnI+qm6Yz8jjv/uEQiyjcN6eK
bsl3Rg8PJWP4uAjso8Slu8cfRNoqsxqRdSJQHTX2Kec/V2R+Fwn/qBGBLIUP
Zx49cWX2U+K4Gi4CGikm1l5jrihcQLHo12sRKNzduvfFf26oZspJ3uCeCNw3
kZw+GOqO7N6WS65GiABBtq781/1D6IRV7PI5LREIXVje8EJeyKr27mqgughs
FvecvxbohRSMq9YPbRIB3vGAV9syvdDPHSzs5nIi4JNdQty36IUMN0Xyi/GL
AP76iCXxjTeiiszpOXwQho3Xp0IJVr7oO7eWgf47YWAVvkKojfRF8Rsnjagv
hUFCuWto9pUvmp6Y3D2WLQwkbpWuFjk/VN046nIxWBhc/dXXCtb8kHdCb3iJ
vDAMXgnXGG7xR4QL9JhMojCc3CoQRBQJQA1hhy9FCwsDFrZjuWNvANI+2n3N
ekUIpJoHxfjqAxDH7s7cvhYhUGt7ez+g4Sh6yPUNJGKFYObt9dCGsUA0FFPN
EdIjCFINL1OqfwShD49o9txtgmC9++AH/rUglN8cffd2oyDEi2SxFcqfRK40
hDHKBWHN5deJ3pMnURO8O8N9UxAGn2yQLomdQq82SkZu7xaElQsJ+919TqMU
ZYkdqoaC8GKRY2VXymkUuO/0ZYaOIMQV4cpnKk4jpTvbFHrlBaGCVb6OUyoY
ZWDP3FXXBWDxKuypbgxGkREFXxnFAnD9KesHSdtQ5PqAS27/IwGY15L+oBsb
ivQaff/rvSMAT1i5NteUhKJpsgIfzzUBMHgXF08knUE+FXkm+48IgBhmmTg2
dgbtXrn9ppckAAE/ww26HpxDEucSs3ku8cMD8jm37lMRKOZhqmZzGD8w0qhv
At5GoIlv6XW3g/hBz/ZT/HWWSPRJ/e7cZjd+WEv1aWpMiUSRfa+t92rxw+37
e6RbyqLQ4L7u1dQ/fEBz2ftBVSKGub/2pbm08UHkuv3Vol0xqLpoWEW+kQ8G
uLyao31jUDbnnENJGR8E9b6v2VkWg2zf8Tz9kcwHh0fXYhYOx6JyJU13EsYH
34vWbot8vICUHXRne7X4YHxXhkXA/AV0I2bXlSeb+KDObSRDUeEiOtFl/tpA
kg985V+eq4+9iBTSXAU9x3jhXMCRXx2ml9C1tYuV9zN5ocuq2fVpVxzy/N4m
q77IA60nbzljnldRjXyUndI4D6yIG9XvzrqKlE4rXab08kCqfsCF+h9X0Zho
yJTQFx6gjdsEbt+XgM7uE6uZfMgD/7xfZb40S0Qpn639XzrxAP7wcCi7VRKa
Jc5lP7Lmgfzh810NiUnIKSCr+a4xDwjNjpUSviYhMs+Ifpo6D3Bs7x7Td05G
hWaXBU9z8UCahqDEId0UVAVVxdpvuCEs/9GTdy6pSEEkYFD1CTfMjTXc845O
RfGHRMiK+dygf8z8qf3DVGSz7nFJMokbRF9cCxOYTUUdO1cPLPhyw63B/qKx
5DQ080ZnrVSSG2xpO858abuO6E8fW+wM4YLz3759OHgvHT1TPV3bfYwLGrap
JBZ8SUc7nuibXfTigjGZ+R7D1XRk+/iTceM+LkgqC0xydrqFIh8NGhzazAXJ
r1+FKwploM4H8toXujlhw4OwMyfxNrqRm0Wt380J2i7vrI7WZSMqxfvOCUNO
qCgJC5HYyEaPczZTJHQ5wcMtlSijk4Oqs9+S3BU4wa14wlj/QQ6aymyTmlzn
gErbIfbfl3PR3lviguIlHDBnVtuZuzUPcaUk/HOhcMCCnpF1uFo+okv+w7dL
cIBZVB++sT8fYZl+cSJ8HMCfHVD5ITQfhd43Eq+dZwcF2/NqpKp8NFC2qLqt
kR2WkiaL/znfQx//eHtyh7NDZkrbhZWb91G81q6Pr9rZgD9ofO+SZQG6X/bo
WtIXNviY7GrUFlqAwEDaIeADG9w221PG96AALVnM9FBessGh3+qvTrIVIn+3
wuUr8Www+bz38v6qQmR5SULdU5cNvgWcIQ3tK0K8bWM3BG6ywtb9tslir58i
m8SwB9cTWIHT6BnbxMhTlGbE80YmlhV29t+5q0h7hshP5NtUTrACuuOT9zjp
GVKPcSGa7WaF9cQzEvLHnyO7LXU5EWssEOhuxHv3zguUFXXv4YQvC5DeKQ4b
3CpGPdrbSkPcWIC6cdUgtqwYKYwwPq7asYBCwMT59fZi9MyhY4jPkAXEaR78
ebKvEGwS3aIsw3we/WGUWvAK1RWseeDZG/j2AnZaeG0JcrUtCbr73zp+UvMA
omqVoq/r4l+EXNfxmU4D5T2upcj06Wm1cMt1PIb12fvSC6VInU9rxEl+HZ/m
92460FqK2N6/9BZoX8OBfJsfP1+GCnWfO50xXcNXA5b/S2h9ixYoRbv2klbx
TEIFxQwq0LFG3qxynlVcqFbdL3a6AvWcD/invLCCrytw9QvLV6LPP1XesDWv
4F6qk8GylytRTlrB1rK4FfzPWLa/iD0DmXI9oMvPLOMfJ/8dq1nGUer4HZ5/
df/wX+bO+0Nqq5BSwZ6FlpJ/eGzcVy6FwSpU4bnY+yTvH34scNNLfp5qNPTN
Bvc8+w9v/TjtcdmqGhmWr4XUKf/Dv+1Se6DfUo0m4lx7b8Ut4aYPAgsHx2qQ
NVWaoWO6iJtskOP07WrR3/bqxyIai7iBScfTxrBadPb68dsjpEXcrunkxsN7
tegeV21w7uwCHiqrNKK2UIuWx4K3cN1bwEljSUG3cz+iR29bMlpZF3DCfxT3
vWt1iMs+6XQwPodHvh72OT9fj8YDw+YfPpnDDZLKKt0VGtD3OL8z7bfn8MTq
m8+u2jeg/HLsPBY8h8utTNNrixuQAX0ylmfTHP7v077ZL8GNKHh6X1p22ixe
8pdkmM79Bf1NFn353ncGvye3IHJnezP69GhNc9FuBuctnDmmZteMXtQMl2wy
nMETK0xfDh1vRpGLVWVJMjP4vnQPtsHCZkQ8dAqcv0zjAhJS67xyLchW/duX
Mb1pPCeVlaIo8Q3hDTcmJASm8ET1j6hAvhUl9d7eODI5iT9nLJaZ7W5FuWp8
9Ie1k3j6WOQt+ROtqLJqxI8eMonLCUQL33nXilaHH0/JtEzgYsKeTXcO/EBh
+uocAonjeNC35AJadhsK7dTcMrExgnff+yRFcOlAcYr39qq2jeBT2tfKjsd3
oPQT4kFHn43gOwYv2ouVdqDX7HMlA24juOaUxB5jyU40t+U11v12GB+q3LLL
rrUTnQrXtft6egi/dvHfxWyfX+i47K5zxYP9uLM05dDTwz3IcVJb6jnejzd/
ze3NiuhBu6rUXj2+1Y+fxnUNS2/3ID5fufH7Fv24yWBkfEhLDyp4wnb4VkEf
rtp/rEDa/A/q2fnJMvxIL34s+/JOdZ2/yN7FiWA+2INfbTzz7dbOPqSvuu+1
Md6DB3tMMgrd+xB93cIO3erBz2tuC5+M6kNTd3ck6ln04BE2OQVyH/oQ4dsO
Fiebblzpj2aguF0/ujpd+0WuqQt/0Mb7PSl0AJ1Q/3P8VWMbfktfRos4NoRi
7b//E7rQho/WtWSXig2jG2c/Xjyq14Zv7KTOX9sxjN5WP82k3fuBl394eKP3
8jBiPxBWm3y2FU/c7FSkrzyCbkWJUwLlv+FSLsrHOoJGUdTdhMzdMw24v2H0
QTbNCXR/9OQLFvcG/KcEu5uW5wT6tN25tvRjPR6jVU9/mDSBxD8rzCjmfMZp
aY/32o1NoIKZyt1slnW4sF3/waaiSfTFZGqpPKcG36JQY2ObOYVQw6Nnzmkl
uHTi8/dCaAbdFtP9kmzzCj/inHpr3G0GzTq/n6zlK8brT+W++hc2g/bWVx4+
yvUcD358+V1m6Qwiryv7yQ/dxwt1lqq4tGYR9Uxi99NTjvg2FZXQSs05FOf/
FNUMvEIcGfnbjx5YQKp0qlzi5teoVEUw5b/zC6ilM23d4fgbdKD8pvPDOwuI
su9s5cB8GRLp7bB6O7SASreb7OTjZKDpgX3HAiMWUXBMYFah6HvUJMo3Y/Zy
CT2wYbs1ubUJxZ0ob/houoKmCst8hD82oaRL+4Xl/1tB+uwnNLd6fEEpnWaj
JTdX0FDnuJ+u+VcUU2t2PGJw5X8N0/lDzHkDB/DpoDRhmCMdS+eoiCGl+/NG
jmqrma8K6SDKlaSQDT1RKFSjXSKSJUkHKqmnQyVHx5RarBIVqbY708zo9Dz7
J7x+eJFTQk/5sCNNxEaSn5cRN0Uyxk0tZY1vievuSfs/v02T6brudElsM9Gz
HPQN86VBd7wyLvp9Mym2OXjPJYyGTdyUIyydFmIYMRC4PoGGxMjNa1cVtZAi
DQdGYjkNhmYVn0O7PxJZcK8wS0cO1K3rrNG1n0l4lqra//rl4GbBrRyb7iAj
m9uYS5IVMHcj3Upe7wshapl5WQUKqHUfyaNv+kL0zpfNdW1SwJrQ4rSFiV9I
7xGfaz+VFbHsoUuMPfcrUYxfMqQYrghl/TBXoUsnSd95QPDGbwbK5lZ/Xpza
Rax8M1b585VwfGGOx4oXXaREdiPrXLASVpkkvrHq7SLbo2gZb4RKyHT0qnQ2
7SalK0Ibm5uUcO3sSFro626yoF1ARO7KCJlcEFg+3ENW5Ia3ePrPArdn34QH
+ohN6aFiszQ6Utufup3f20dGhz/MfC2iY0GzwqNCYR/xbDAduiSlg16TsmvB
lz4iPbQ9oHCjKkYym0Qtp/vJsnRf2aUhVZQEWaZ6VQ0QdllQ7v4Nc8CXKdv7
bRgmtWs/ulkLGagZcr+VGDRMBqK5TgoZDKztuTP2/OowyZ65fHZvOQNmzTY5
ej3DpEtbvGfOCAOzvS0uiteNkHddwltVgnkQ2wVK8r+NkCgD5t7vGvNRJv/u
lTlXTGZLRBPcl0xkLCz2lVmIybE3qS6K7Uz8YXV7rMBJTLy7nSp+jjERGBJo
bHZYTArDjno7mbCg8VUx3rRUTDjxVgYbklg4VmnmzqNGCe2Vg+6HYDZ4kUmd
RhES8jAhfvk8azVo3Tx1slcoIUXPCpwqt6pBqWgX+8FdCdkUlSC8fEwNbcPL
NxrWSIi0Zos0MU8Ncb7VmVyWlHRNiD5oLl2APrvxw3qZUuJkz9m63UAdd6c9
ab/8LSM7pJa3rVdoImiOdFZwn4zcjj7QM+GuCYtFCcyqnzLS+941rjNcEw2o
4u5b/IM4Zm0/tOKlJsailjgXHP9BOtdKOp9v18KvKlPXnTXHyLTlgOEH4S+Q
cVJMI3aMk1H7bfV1s7VRsXi1bdORcVLp3J/SpquNixZNG/Rjxwnjwf4pJQtt
aHvO8KzNHScLM4+m3PLThlPKwUiOwgTZuWyJ/OcibdzWs6t/eG+CFO7vqc/c
pwNHXntAe98k8RaoS/s/6eJFh8WnlulJYqf+ies2qgvby4mCd4wpouUojmqa
pQeeeL1NjfkUqbRI6KOv1gPnSfa8/DNTJLYlKz4yUQ9fV4eXntOYJg7DOhYh
zvo4Qdjzlzn+JM+DT6SWvjWAx/17Ps/caNhSuvhQr54RUrwfT9B9aLDJnTjm
SYzwjVlyddseGppidKRfPI0QEtnYIPmNhhtv6wNXJRohftuk3ZJUGh7c9Bb3
yBnjJV2w6FovDdbHHnvEdxljVfBU++EIOYiO+jlNlS3FPMvNOw0y5HE3826U
uicP1b2FBTZ58vASPGzSCOQhIllLxa1UHpYXYlqMInjom+zKO9Moj6KYQLXD
d3h48ey4YseYPJJpmb+m9fNw3P7W/WQHBWRat/mlRK5Am2vv4Nx+BQR4RLi+
e7IS2QH/CZ8wmQHVg/vj2tebgXshlV4Wo4QzsbYJBslWiHSwyx9kq8BtcmXV
b+eB3Rfd8syTVBH/k1Z8aHgduFU+RgcH50DbqythgrcR/nWhrcolDMiv/+xd
fMcRXN7KtqbeeXBTp7+ZSnbGUo9s1fvzmSCnFlwTs/iYsv7d9pEaE6t+DMXq
a/Ah0gkPKtRiQjNs99+bF/EROLix8TWXiWNytMBMIz6yojt//8eKCcuyyhmr
7fgwztfQNN7FhEnsI7nqAD4WM2KNcvKZSFlUMDO2gA+Z9JBnQRETl56ouG4p
5uNVq8fFsjImToy0NuuU8xFwX3+w/jUT73UcYrOq+Ui3q3g81MrElUJzF2Er
H/oHf6zmKf779OSrXUk0AXRr/Tfku7GgFjXDdvdGAdqSbCj/bSygZtRxp5MA
1/2ZPmo+LHitq7X3dBWAIVd59MQeFpjfbIfIFgF+rta6ty6chd6mzUUtAQK0
3vtL4V0qC0rd0hz7swL8cZpUSvpYqEseNu1/JgDflVOfPsyCY1CO1c7nAtB/
GWzeKmHhZWrwj79eCnCmKHmkdJoFFXpO4gORAIeHpYvOMtg4Jfq0Ve+jAC7e
2RFsczb8zBJKHCQCKFmq25ifZkNcw1A+YEBh6x2wjpxjozxKK++xIYUM+t6B
3Its7PCgWX1fQmFT29ObJlfZYMhGBvxWUoiJcpvWz2IjLtGFzCIUVBoSnjHf
s1FnrFqyewsF1V0z13w35GA7+opCoyl4iUzUly/jgGJahGmdp5Bt5v490JSD
RQ79SRWxFJyV0/78x5aDvVe1WJPxFOJz1sh3UByYPrc+Y3mdwtyxk1UNJzmw
qbpwsiObwo6daTdUz3DwkVaVteYRhce1daGO5zm4dvLKhVu5FPgpGvqvLnPw
X8/1e5yeUhCuLYouS+dAdDWJHVJOoSOr3Wsyi4MPgRfNcysp8NhKZpa5HIy2
thgOVFFo6nHvelLCwYnTc4Xu1RR0BafKxBUcfI8Jnx1dSyGkOO0K79W/nnUt
Bx6KKDzXEx0MquMgYJvk0bsGCvPjRtdnN3Jwu5/bLmuk8H8XRiae
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
HMhuFkbKez/1XKf7f65DRes=
        "]]}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}, 
     GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-10.701752291395596`, -0.004442843415537157}, 
     PlotRange -> {{-10.701752291395596`, 
      7.195194394075615}, {-0.004442843415537157, 75.2650678520281}}, 
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"XL\"", "\"Xloop\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.744469096308169*^9, {3.744470814618414*^9, 3.7444708245909777`*^9}, 
   3.744481967123518*^9, 3.744754919127838*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
clFYn5LauUKAjpdypv78914E6nbsorvN0XCjfcNEWC8/2AaE+LtO0zDBo+ai
7o5ezj1374vO4zTMqrhaB5t+c5k2zp1Lh2lY+Xz0JvvZAjdbx4LuNEjD5145
hTNq/IQQWdvf4RsNFV2//ivex0fEi1AuQhcNZ2d16+REBIiBCfFOu3Ya1t2s
bX8my0/49s7QbD/QkGl21eaQ7Ti3vumHn/U7Gmr//dbHOdTFAey8YPmGhqdp
76tsIwWh9F5Dh3k1Dbf1ybbb8CuA+iUubUklDTP3amlo0ihwNuO+n2k5DSv8
3PdpRiqCWGLBhcVPaCj5boOiUfwYJzEiq8OolIYRthi0U0eY+OmTSjO8S0PK
XvHlL90FiYBlu/z0b9JwTZbQs9OsIW6TacgF3SIalsvdurLK4TVnKdu7Qzuf
huLkrGnXihbuY1lnmtZ5GqoKeF32Kx7gai+Y+2mcoeE5cf6hrq/tnLxfWhfU
TtKwsXKwJa2SDyQ7yR2sYzRUEY4PSFskBkl14jTmYRrW5j/SclUXgNGnM76M
ZBpam0Sq7dk/ygm+8SOPvpeGfCtf5eTI1HNbcjrbqfE0FMp7tHHPu3Gu86EG
KmUnDR+cjrr1+OwM92kM15cURUO3mo1fltsPc/U23c9TCqfhO9ESvavfcjn5
KwvaFYJpGO937Wvyhm6OLCeLKr+RhtJVka1VVr2cVP1UX9n1vHzo4qV55htn
grorT3otDX3Pvnnl8fonJ0w8pF3Sk4bzp65t1l06xvn0x4u6aDkNdxb+o6l8
H+e49S/zFV9Kw6mRY4IaoeOc8hbzPFGgoYfy1kFxvTGO4QutdmFrGub0cfOT
No5yCh6QqUJLaPjLku6jXTPCkS8Q9xUw5unF2vh7xTveeeDEzHk+PRr6Mchm
+kZ8ML3vR9u8Bg2bXwTIfHsiAJFbOylzTBpKyKQWDYuPcjo3NGz4R6PhpqAT
r6yieriertzzf5VpqNWzoJTx6ze3xZOY95Cn4cSiW0e097/j+nnj5kIpGurv
dBE+2dTP6fGrrJ0So2HTn+7W92Y9nIjgKoMVQjw9qeGXHSrecIcjXmRfXqBi
7YjL0PlNw9y4HS//jM9Q0Tf1gsLxkG/c2bhX/q5TVLS0i+/ebXKNm7qvuvLi
byr29TpF3Q3r4YgdrNH8/ZOKxcqKFbeIYc7Jo7UZywao2DzSpykwOcZRPvV6
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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
be26LiKx9dJ9rpMMvO6ZfZ7BxV8Eh9J/j72PM7COZlgve0Ab4XD+X+z4UVb9
UcfEl0O7iPLCT8+cDjPwHyltXN/UTSitCcxqs2ZggUMhrzN6/xCBVmZvLK0Y
OFv6btlLgS5iKEGkoMKCgc2v6IqevdNOmP1t/ETsZeA0r0u1rmy/iGztqOo3
Zgw8ZWb/ak/5L0LE3+b7elMWHxf8BQ84dxEetYzWRCMGvmcgdl0it5dokOj7
Q93F8p8naW6X0EdsdsgcCt7B0pvQzpysrl4i4qXbJAdi4MjixsNec73E/KLm
otd2lh40dPZ1pw4QRwzn2Md0GfijycIPq/i/xMfQj2scdRhY8W4Fj/PdEUKm
/bpo6xYWv0+PNx2wHCV8lXdKWmgxcM+9xSA/PEIMXQ/RmtzIwJUf/SdXg/4S
1j/a9jxSZ9VDb79KwewAUaqu4rJZjYFLUnvu6Sj1ExsCPP2bVBi4MD7PR1e7
j4hsL4m9pMTAp0dO+6wL7iW4tgi9F1/HwGf5OZ0Mr/YQ54KP1OcxGZjGnlQu
/66baOtO/XuYzsBoYllltKObMP5vinuJxsAX5CWbzpT0Em/CgB4rzcDf1pZ3
pUsOEPShIN3tkgxMiuH8K986SATpt1j9pjLw72am9Yb5IWI2UsH9Opmlt4rv
TzpPDhN24+fu0sUY+M23sfrf7WPEV6PC5BJhBtbbQezEtROEbsKaIru1DHx3
8NukYN8kkTp7oIVTgIFVrnq/vjs4QYiZJ00+42PpfaJlavuNccI3ZVTQkIeB
/4nk7PXyGCMGl3WV+jlZ/anCPmqmboywsrqjH8jO0hun3otIk3ECP/9+VOUf
HYvuP3tS3G+cUOOkX6papuMnZ781ubH8RR5xDTmzSMdKtgluC0rjBFdOXqbg
PB3/cswVeVg7Qpxbw132YoaOmcaXVtfe+0u02Vp0mE/R8US9p17Hhb+EcV7c
wtg4HTflBZc7bRwl3ggPkUJH6ZhXI9BMImOcoDtrq2sO0/HRZtFvWw9OEMFF
/sbfB+k4Z4TrRejJCWKOUmd3sZ+OG7arZRSvmyDszkpfo/TS8VbPlC6FmnHi
62fnJ+/+0PHbsNJdIe7jhK7Mm9cHO+l4jfeOack940TqBbaa+XY6LtzUsXDj
9jghVm3WF9VKx//MK2xiSlh8MaPY/vtJx+SU79bGMePE0JVeqbZmOj4upLAq
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
tNzb+X3PdjG06vdgXtuiCfiO5fmEG4oh5WEbzcA3jeCymlDHOCyGBqO02xa8
vgNb/2GFMhsxlBnj4y2s9h0i60hXXOzE0DPvR9o5nQ1QkXiH+fKMGDrV52y6
tK8BVAzcPfV8xZC12KH/9pjUQ6mqSlWHvxj6/HvEZVagHo6Qu2Vv3hFDB9cN
+6V8+waTy7EXFINZ8T+50rz/yTe412tdURkihsb3KPdvtv0GzK8itLOPxVAa
XHoyqPoN8t9VeYhEiyHNurhD4zN1YJlwqzw3Xgy5RF984BZTB0N3COmDyWIo
nF2mb9S4DvzPzbsvpomhjEr3KG32OpA6nPM5LksM5d5J3WRewnr36btK6r8W
QxU+u4QS7nwF0/WKbj1vxdDVnM3xfpZf4Y9YZ+mdfDH0pB8/YWd+Be+lKHHV
YjE0OXzsldhMLSvf+12/fhJDNWL6MXurayGzZm2JR4UYKnY3dDqYUgs73n6h
UGrF0Jchy+DyW7XwK87vdF69GDL+czkoxbkW+N1nSP9+iaHrjgmiOhtq4Yxo
u1PwiBgS0uRYeJ9cA2rWWYJpYiR0Ylt65O+71bD836PtL8VJ6OFoTOuMYzXU
MLzd3suQkM51k0oTqAbXEaNvXxRJSNru1lLsaBXofVdn/6ZKQrtcvpEEyqpA
8ANFs2UjCTX29++KiqqCtvhlu84tLHsulVP+Z6rg+a3uRwO6JJRc9Cs/gKgC
79NVn8eBhPATdek2ahWY7ns9M7+ThLwk3yf6TFXCkPT1g2v2ktCO3uORnm8q
YX2ulPR6exLady49lbK5EhYj2c00XUjo37ZMKp9YJVT5DvjoniWhIJmIzNHR
Coh2qHux4zwr/ldnjt2troBTpu9+m14moUmbYdJSSgXobIwT3u9DQlojo/fr
vSuAj3oLHfUjIa6OkPGknRXQsnTawz6AhDJ8QwPj+Cogvcsi6UwQCbHv0dVW
rPwCXl90vl8IISGPRS5JkztfwPiFHJfPYxL6KaGjw2fwBQa8RhyDE0ho2y1V
ucNvy0FJ5K7Ki1wSEt7iWPk8rQxmZ9yPvM0jIfsPFVqijmVQ3modVFhIQpuO
8dkO0MvAKU1hpPYLCX0vfymw/OgzaN8XkG2uIaE9jSmJGWafgefCpPnvehKi
vpq3/8H9GVIJ/Gq0lYTEvGVPbfb5BJcU0rpmO0nokLca6ZPeJzDkfyD2r5eE
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
XTD8D56MZAU=
        "]]}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}, 
     GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-10.701752291395596`, -0.0020067445410391557`}, 
     PlotRange -> {{-10.701752291395596`, 
      7.195194394075615}, {-0.0020067445410391557`, 22.33622820671895}}, 
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Yloop\"", "\"Yloop\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.744469096308169*^9, {3.744470814618414*^9, 3.7444708245909777`*^9}, 
   3.744481967123518*^9, 3.744754919316221*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"X10", "=", 
   RowBox[{"Interpolation", "[", "X10T", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Y10", "=", 
   RowBox[{"Interpolation", "[", "Y10T", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"LogLinearPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"X10", "[", "q", "]"}], ",", 
     RowBox[{"Y10", "[", "q", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0.0001", ",", "300"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<X10\>\"", ",", "\"\<Y10\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.744470774763269*^9, 3.744470785514287*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
T3kY98Pg41b8/bI0M+BnIA+L3DlzHJCbexpU72rLQxc2ZZojclh1SuRfNXmo
66Rch1su2b3VShnlt81vtxN+Pn0VRDPoKB+ZZ39wn9oy6zUoKw9VR/ODt+P7
QbKxQkVSHqa6K77H/Wku5fdhojzM3qlptwM5ucvdvElEHt4E1V9xs5U0VkhO
ysFmGgVzx+8zhwuRXYVy8MLjAUkf5P3q6t8e5MhBT7Ff7bhH+Drc8y7LwQpm
UsI+5O5nApuCUuSgzbaxv77I1jduVzgkysGMunOlfsiNsXZSBqfloNkZU3t/
5Cqj83/ZIuWgSrrvhwBkBQm1AxPhcrCaXHg3EDlv4fVAV4gc1D5nkBKEnHKX
vzHPRw7aOUDtYORApZTTBvZyMCframso8meODbPSNnLw4YaHRQfx8zXyyofd
HOUvf8IiDD/v+Xzm3RvloFf8sd5wfH3Fk7n2K8jBtUmJI0eQ+1eTUvL/ysJn
v0sUTiHv6Ff+G/9bFv7k26ocjfzqSVvI/llZaE+tU4pBfnKYx575TRYardnQ
TiNf+X5W5M07Weh01dr4DLJjb+Jljluy8NS3GbOL+H6rTCgM3ikLO08lWRQh
G+Qd+RzkLAstBnQzbyCXJfvLBTrIwqyg/0aKkS8EWBf6WshC8xOVV2/i86EK
FHppy8LXMu8jKpHHMzMKHHhl4bBamMcT5F3xCYPbOGShbt7CUi1ye/gRWbs1
GXg7I/FqHX5f2bsVWM/LwDFx3QeN+PubR6oAG5aBC8AGPMfv35NF+bpPZKCz
o7RJD/LJ/RkD2jUy0CF+jqcXP8/uCTJa1TJw+qDn1Afkd/r++WolMhDrEKz/
hK/XtEq+QpoMrNMZCRhFVt93N48cJAObPVOf/8LrYduUu0yRgXaGAuUU1jTW
69i87kCQgZ1F39ikkL3coF+xsAy8dOm9twzyft9WzW1cMjDvt5Q0DTkhuq2l
4Jc0bF85v7IB+dG97kmsUxrm3RiqMEU2efLG8cpLaSi7NO5khtza+PbB91Zp
+EFubM0Cubu9JybjqTSkdQcnbUX+/vU/8bEyaVj5cfKHK7Ks1LBRUrw05HiW
ORaKXEwdudYfLQ31CoW4DiFvUB7l1I6ShjITYupHkA31x7o+hklDVxG/CyeQ
tztM7NuwWxrOyj2pSkJOjJ9J6TSUhvcY5n7FyD8m/30i/JSC5teOhowgG8+/
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
quotBfw7bvT6G/L/AIOvqmY=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVV3c81d8bt/e8y4x7kT36JkL5PAclCUkiiSSUQpEklVVJktVAUbSTlJEU
clCSLZKMkJGRvWe/+/vrvt6vc86z3u/nuZ+H4XrSxp2NhYVljp2F5f+/OQ3B
2dkn5HBe8X5jZ5gg3tx1UDrgKYeDnZ/sKTg5Qrxy25TKdlQOt7UJNyVpDhAZ
msLkl25yOGDq+NZIuR7i+cJQ5F5XOZzrPR0sfuIn8bTs09ryITlceXCzmvKL
b8Sj6Af+j53k8PaMx42ydg1Eml3QsIWjHHZrsjq6q6aRuE/f5zK7n+nv7Gey
6M1mImVYqyXVTg5rPfZ5O3XuO5Gcx2dhaiuH2Q4uxf9TbyHuBPeXju2Rw0lb
Z0sUjH4Qt8zw5sTdctjAWau5dvoHkUC69wos5XCUten3n687iNiOM/KD5nLY
i1orZW79h4h+ap0cZyaHZW17ioeOThNRp9SE9U3lcGy+nd33S4tEpAHXlR4T
pr1fW/wOLM8SVzh6lq4ZyeHoDBaeHYXDRHhd4amNIIcdsdlT+YIfRGjSnYG2
rXJ47/IfmRbbP0Swq+/BSwZyeMW0xrPRdZo4r27xTU1PDs9v8/9O05gnAucU
zZp15DCP3s88r5hJIgCzfrygLYd996nwyl/pI/yjOrTX/yeHeRsvsdtGthK+
tu9e1GrKYcF1cltdFVoIH5kE2QB1OTwwomWm799CeA163ZZRlcPCUsk39xk0
EMdzdvB/UZLD8RqLC2ZtmDh2QS7s5Ho5rPDn7N6n8WmEh+nqnJg8M74jfmeO
kRM/HhFp9cJ0Zn3MOcobTycSLm05v4/JyOEFcgNNNaWJcH58Y7+otBw+cWeZ
F7hHiIM+x+reS8jhvwqe7/qTZokDeibbXMXk8L6L67LEz8wT+9lkPvBR5fA2
ylmf1r4ZYl/NglYuSQ7Tkrz3bJCcJGzuND1xFGHa49xqIlk5Sli7ZElxCMnh
9qd1BkXXRggr1Wvxmfxy2Px4/GMZ6TFi18wR7n28chhHCo7c3zxDmH0kLq5y
yeG+tpvFtk0LhGmkxPQTDjls/aQLSlrmiW02M8es2Jj6GS1hTKZNEkbS9b/m
/jGwlK5E4azhAEEMvLB9sMrAS/8Zhwhz9hFb31yu2rHMwB6BLncq5wcIg6BD
aGKBgQsgbiUNDxObtxnkJ80x8LHEIHL18WFikxBV3WiGgXNTek8HUoaJja3j
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
Nd2pTD7Fj3nfp1TM/OuFr5rpM6oH+XH82fDMuN19ENz31sJSmx9/t7+QZTDZ
B392d63E9/DhrsPPJtcTA/BBcaOTFMGHd98bkbBaGQSX5h/rNOd58O2RDSnv
J8dA7tXLHVvOcGHO/Yx/O8tmIUv9dEXXCS6srnakULhtFvQzDbZfduXCh9vi
pVonZ8H65Vfj2t1cuFDCNcOXMQfBL/4YHlLlwiySpj71oXPQ/kR+06UuTjzR
Uu96Ec3Drfv36NU7OfHzY94Z+RULQJc58uAk4sSRHy0UYrsW4GWqqgxlMyfO
ZOk3PLewAGUp76WcFDix+Gqq1hXVRZi4+4M2vsaBp/c9uB0XuwiWiWRBch4H
TnCoXmQ4LwFX3PXFAzIcmCRi/audtAJy1MUSHQoHDnxibtzy3woQdz0iRPg4
8IuV2wbse1Yg4LERuWKWHT9y7AxYiF2BgYJ59f9q2fGLzhQ2T5FV+NJzxIX7
AjsmglzkRaXXIFJ765fcn2w4NiiO+LeBBT0ueHEjpp4NG4m71G7dxoKwoZit
52c2HLAS/izZngUt7Jjqlslmw8FqyeZvglnQsYPPl65FsmE1P+dHO+tYkNkV
iqbLZjacTOe3b/VjRbw//t4SuM2KZ1veSj6uZUNW0UFPbl5nxZdIooa+v9lQ
ghFPvmQ4Kz5vsvjbfJ4NSWfK/1A+yYoPXdMPZjDYkWbYAYntO1mxS/OuZKsz
7MhGrTL14ioLzt/PkblTlgPdC3n0dMydBW9edPHUDeREjtZ5p9K910p8Guo/
f7fkQQ1r5Hohx7WSvsD4mSB3HrTt1WmNC2ZrJTdNecq2XuRBmnzaw3byayVq
vFGs4q94ENun7CMCP1dL/BdlD2wS4kXPN7+2O7ttteTn14sq1BZeNCeTsdVS
aqUkuWp9OiWIH8WPPuBZrFws2X0068LTUSHEtTfmtH/JTEmUEI9vZC4ZldTc
GqMITJQoh68nq5qKI591W8/l/OkvyRL6cp/96zp0UrPHJ7f2R0m+QtLn+AoG
gpoXWfsT8koOOCrrnwxSQMmkzfWxVrklR7t2jU1dUUDT+z+NV/DllIy5p3X6
xSsgy+riw8e5XpcE1nnoHXmugKTXlDzkBx+XuC786Vj8roDoZ6O7XvntK0nM
zWy+u2E9ijj2CsoHcuHTX6LN/Pd69MSKLXFcqw48zi9NDWoroYnnBW7CX+pg
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
7cZj24quwf8A2PZnGQ==
        "]]}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}, 
     GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-10.701752291395596`, -3.4385640419184517`*^-7}, 
     PlotRange -> {{-10.701752291395596`, 
      7.195194394075615}, {-3.4385640419184517`*^-7, 21.659771515398457`}}, 
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> NCache[{{-9.210340371976182, 
         Log[300]}, {-3.4385640419184517`*^-7, 
        21.659771515398457`}}, {{-9.210340371976182, 
       5.703782474656201}, {-3.4385640419184517`*^-7, 21.659771515398457`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"X10\"", "\"Y10\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7444691003925743`*^9, 3.744470828149317*^9, 
  3.744481967442597*^9, 3.744754922378525*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"V", "=", 
   RowBox[{"Interpolation", "[", "VT", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", "=", 
   RowBox[{"Interpolation", "[", "TT", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"LogLinearPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"V", "[", "q", "]"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"T", "[", "q", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0.001", ",", "300"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<-V\>\"", ",", "\"\<-T\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.744468134247365*^9, 3.7444681435327263`*^9}, {
  3.7444692643123093`*^9, 3.7444692815627117`*^9}, {3.7444697021166477`*^9, 
  3.744469702255872*^9}, {3.744754976726839*^9, 3.744754977405246*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
2H6gqZ6ox1Dpy3s0EgSYyDByW+iAak4KcYmRYETNu4a7nQ5uqQNBgTIkeLKZ
U/hIJx3GrpP9Y/aRwHLZRyTgG+FnGMKz9SAJdg0JfXz+g/DbK+udpU0Cq+Pc
lzx76NC1cMSj1IQENxZlsmQH6LD2axfrUQsSsMStOfz9Jx30sd3dFhsS2Biv
z7w7RIfKh0/dBm6ToOdQz8rD33RYZSU+d9WTBMYTjqU/R+hwQCvj5qwfCZR0
h/cqjtIhm7fJnhxJAvK10KlX48R8/rH4E/CGBPst+GRSJugg2zBlI8IgEXl8
bk+cpMPFLM+h6PckqGV1XQmcokNUMO2SbBEJhHZs8LeapsMX5zd9mVWEz7my
u9IzdKCZ7Lug0kgCZSZUNRCsp1r1vaSTBBdKRS9cnqWD70YTU91eEhzZunho
mOAKll+dzb9IoG/4w/LUHB3Yem8Zm06RwKGhrSid4P1lvK39SySw41M/OUmw
y5twg6scZPjCtW+d5Dwdsrx3NMzwkcHIcD2fKsF/bPCxuzQynGNJ23GQ4C3H
TnwiiZHhvLye8y6CLeW6tQNkyPCEVt7LS3AkxaFCWI4MIdK7nZqI8Tun2NSj
95HBnaON7kmwUNuz4i0HydDIGvhLguATH4g1qE2G2Tb1yiTC/0lYToGyPhne
KFnlbiC4/I6GSokJGe7W2Wa5Efmzmre9P2JBcMpgXglRL9VDl/c225BBadK2
aZaopzN9PuvsDTL4hp5eohGcyemzq/82GTZHf1eSIOo/Mrgu3c6TDJF4cyCN
mJ/NNSnbZvzIwPoznjw7RgeLVNVk9xdkiHLek1JMzG/E088ypEjiXFEccXH9
Qweq4aikMIMMJuef5iT+osPxvfeiot6TiVeG49skhungIyywcUsRGZTdC394
DNKB5etuEeVGMgxA1trV/XRQwSUvijvJ8MPBKES+lw5O0YbUI71kaOa6Z6nW
TYffF53WnJ0iQ9hXhW6Zr3S4XGTXpb9ExLN9eU38Cx16N1xM0mbngoqrl5c5
O4j6NhkcVqRywfcPdOmIZqJ/D+5ypihwAZ/AZeZUNR3UwjercalywfzPNW6m
lXTAc2ICLGpcMMBbdCi7jA656atTRgy4QHUhiGUbsb5jRX9/q3TkgvVsofvV
iPW/0bU3Bd/iAq/1shdFM+gQ2tzpkvuQCxYVsU9fKh0CnlRR4p5xgYTCrQLV
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
bcK90f8Ate043w==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxF13k8Fd//B/BrufeSiItrLWWrkC1Zos47ZefeqCRFFCpEIdlafOxEpM1S
9hIlSxLRTEKWLMmSfc2erZAsfe/v8fg9av45j+dj5jFnzuuc98yZbWdczeyZ
CQRCDROB8H/tJx3D0PAUEZzw/8efNf67dx/9s/LrgaTHcf/8QNq7KD/mn8+Q
M0c6/f95qZqoI3vmn8WN3zN9Ev9nLzN1X8504X/35z/ye1+M0F/3vnx8Kz1a
8K+DnSte8t4T+GutPuppxUDqX3/bGb8tIIj/rxNlDC8FXOb7a7pJC/3WGd6/
XtC7rV1nT/nrZ7883xcd4fl3vf/tI51HuP96+Djr9w35XH+tK3TQqDRm419H
hg81dtzb8Nez53qczVzZ/tpz69fYfod/XvnaXOJi/c8kw2q2CJN/FpUrSP8g
+8+pwy/qTCX+efujzPk+4X9+fixNyIXyz8pcj2GVnQ032rL/Xkjgcayo6uG5
cCY23EC05tviCxtM60ZslOAyGbfrEtC2Jmli5WpRhU9myXhz9InQIof/kN5s
aLfKGBnvvhk9MSN7D33KDGD50EfGf+f6y+HKycjM9rqMaTsZ//LqeeHt5RTU
LuRt2tdAxi9q1+jxbEpFp5rdvS5WkfH3m60/W7mkoMFwl6SVMjJeYUaQdfNI
QecOXqgKKyTjtT7fUEZyCppaOftd4AUZ9yBPDFyqT0Fur6z5nqST8Xnhrzsq
f6WgX84nNFUSyfjlWFP7UIlUdE3q6JnyWDK+XMg9u5WWikLvG+T2/kfGNVVq
b4qmp6LHXirGArZk3P4N+aiLfhqSVFJwz7Ag4y7zyQFFV9LQs/Gd8bsPk/Hw
yJs8LBlp6JWl2BgdkfGTvg2XPjKloxqtDYGhm8k4SpM6KFGcjn4S+t8ud5Bw
ir7VmwHdJ8goLEK224yE7/cRUJ279gxFV4uxrBqS8IM0PPhQ7jPUSn7VKXKQ
hGuojg+tfXuGTgd3h53cTcIt7/pzrB3PQu4Bu8Y6eUm4tVhr/9yubJRwrTG9
o4WI350dtdo89BxNXubd0m5OxD2Dvo44muYixbynC4s0Il4Q5TOYcykXXZnV
rKfqEfHQwsOJrbdz0R8XOz9zNSK+GgTHX9fnIl7nws5WASIePfBi6YZxHtJ0
OP6g5Ssrvp79oE3wZD6KsEzgbrZkxTNf3pLiffQK3fwTfVTPjBVvEzpxK/Pj
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
eRMVUkA3+VjLBvgfx8vZdQ==
        "]]}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}, 
     GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-8.168908745491985, -0.06580001527593007}, 
     PlotRange -> {{-8.168908745491985, 
      6.964935941166049}, {-0.06580001527593007, 63.12255807458713}}, 
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"-V\"", "\"-T\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7444691043486032`*^9, {3.744469264911364*^9, 3.7444692823826017`*^9}, 
   3.74446970276854*^9, 3.744481967598958*^9, 3.744754925750915*^9, 
   3.744754978173582*^9}]
}, Open  ]]
}, Closed]]
},
WindowSize->{1164, 716},
WindowMargins->{{17, Automatic}, {Automatic, -10}},
FrontEndVersion->"10.0 for Linux x86 (64-bit) (June 27, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 136, 3, 32, "Input"],
Cell[CellGroupData[{
Cell[719, 27, 2064, 32, 150, "Title"],
Cell[2786, 61, 1323, 28, 242, "Text"],
Cell[4112, 91, 636, 14, 128, "Text"],
Cell[4751, 107, 379, 7, 50, "Text"],
Cell[5133, 116, 454, 9, 99, "Input"],
Cell[CellGroupData[{
Cell[5612, 129, 618, 12, 81, "Subtitle"],
Cell[6233, 143, 262, 4, 31, "Text"],
Cell[CellGroupData[{
Cell[6520, 151, 387, 8, 55, "Input"],
Cell[6910, 161, 418, 8, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[7377, 175, 588, 12, 81, "Subtitle"],
Cell[7968, 189, 703, 16, 99, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[8708, 210, 2130, 33, 81, "Subtitle"],
Cell[10841, 245, 1187, 25, 31, "Text"],
Cell[CellGroupData[{
Cell[12053, 274, 852, 18, 45, "Subsection"],
Cell[12908, 294, 574, 10, 32, "Input"],
Cell[13485, 306, 442, 9, 32, "Input"],
Cell[13930, 317, 3067, 91, 231, "Input"],
Cell[CellGroupData[{
Cell[17022, 412, 5312, 166, 451, "Input"],
Cell[22337, 580, 10629, 211, 98, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33003, 796, 676, 15, 55, "Input"],
Cell[33682, 813, 238, 3, 32, "Output"],
Cell[33923, 818, 240, 3, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[34212, 827, 165, 2, 36, "Subsection"],
Cell[34380, 831, 1450, 48, 192, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[35867, 884, 329, 4, 37, "Subsection"],
Cell[36199, 890, 538, 11, 32, "Text"],
Cell[CellGroupData[{
Cell[36762, 905, 2177, 50, 196, "Input"],
Cell[38942, 957, 563, 9, 23, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39542, 971, 2094, 48, 174, "Input"],
Cell[41639, 1021, 594, 11, 23, "Print"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[42282, 1038, 536, 10, 38, "Subsection"],
Cell[CellGroupData[{
Cell[42843, 1052, 164, 3, 35, "Subsubsection"],
Cell[43010, 1057, 4218, 139, 301, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47265, 1201, 161, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[47451, 1208, 18641, 455, 2629, "Input"],
Cell[66095, 1665, 416, 8, 32, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[66572, 1680, 322, 4, 44, "Subsection"],
Cell[66897, 1686, 254, 6, 31, "Text"],
Cell[CellGroupData[{
Cell[67176, 1696, 1258, 34, 196, "Input"],
Cell[68437, 1732, 159, 2, 32, "Output"],
Cell[68599, 1736, 147, 2, 32, "Output"],
Cell[68749, 1740, 145, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68931, 1747, 6490, 167, 737, "Input"],
Cell[75424, 1916, 193, 3, 32, "Output"],
Cell[75620, 1921, 299, 7, 32, "Output"]
}, Open  ]],
Cell[75934, 1931, 512, 7, 55, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[76483, 1943, 211, 4, 37, "Subsection"],
Cell[CellGroupData[{
Cell[76719, 1951, 3009, 74, 121, "Input"],
Cell[79731, 2027, 238, 5, 32, "Output"],
Cell[79972, 2034, 215, 3, 32, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[80260, 2045, 88, 1, 93, "Title"],
Cell[CellGroupData[{
Cell[80373, 2050, 1103, 33, 121, "Input"],
Cell[81479, 2085, 76784, 1327, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[158300, 3417, 1363, 41, 143, "Input"],
Cell[159666, 3460, 130617, 2247, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[290320, 5712, 1453, 41, 165, "Input"],
Cell[291776, 5755, 53063, 925, 240, "Output"],
Cell[344842, 6682, 58846, 1020, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[403725, 7707, 693, 20, 77, "Input"],
Cell[404421, 7729, 51263, 896, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[455721, 8630, 918, 23, 77, "Input"],
Cell[456642, 8655, 32511, 589, 271, "Output"]
}, Open  ]]
}, Closed]]
}
]
*)

