(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    630108,      12105]
NotebookOptionsPosition[    625666,      11960]
NotebookOutlinePosition[    626003,      11975]
CellTagsIndexPosition[    625960,      11972]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"Quit", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.744483409693211*^9, 3.7444834182090263`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "MGPT_qfunctions  (August, 2018)\ncompute ",
 Cell[BoxData[
  FormBox["q", TraditionalForm]],
  ExpressionUUID -> "e1d1b740-bd35-49aa-ad8c-b8d9aecca020"],
 " functions "
}], "Title",
 CellChangeTimes->{{3.5050628362232513`*^9, 3.50506284168414*^9}, {
   3.531497665636333*^9, 3.531497681794804*^9}, {3.647774345060751*^9, 
   3.6477743600976353`*^9}, {3.663000389912932*^9, 3.663000391911227*^9}, {
   3.693145084358066*^9, 3.693145092954609*^9}, {3.693735982220573*^9, 
   3.693735986713805*^9}, {3.701867239716071*^9, 3.701867260440569*^9}, {
   3.7024658034588537`*^9, 3.702465806288926*^9}, {3.703148633922871*^9, 
   3.703148634489955*^9}, {3.704646750509082*^9, 3.704646752163433*^9}, {
   3.704882793486555*^9, 3.704882796644773*^9}, 3.705138340743878*^9, {
   3.705138431793377*^9, 3.705138436599887*^9}, {3.7051755153389397`*^9, 
   3.7051755196762743`*^9}, {3.7051758146569433`*^9, 3.70517581861097*^9}, {
   3.705313384132386*^9, 3.705313389811788*^9}, {3.705485116052347*^9, 
   3.7054851303623123`*^9}, {3.705490566451975*^9, 3.7054905868487797`*^9}, {
   3.7062640289399567`*^9, 3.70626402997397*^9}, 3.7062874135121202`*^9, {
   3.710173838715599*^9, 3.710173857016191*^9}, {3.71119391888498*^9, 
   3.7111939193999863`*^9}, {3.724688768528491*^9, 3.724688774377046*^9}, {
   3.724782196974523*^9, 3.724782199814604*^9}, {3.725012962586294*^9, 
   3.7250129640783157`*^9}, {3.7251824070401897`*^9, 
   3.7251824081906567`*^9}, {3.725184126699469*^9, 3.7251841296006107`*^9}, {
   3.725185310672593*^9, 3.725185311842661*^9}, {3.7257890257045527`*^9, 
   3.725789039078113*^9}, {3.7263097613372717`*^9, 3.726309763894353*^9}, {
   3.7440327410423*^9, 3.744032759002574*^9}, {3.7444507475559998`*^9, 
   3.744450791716119*^9}, {3.7444529222815742`*^9, 3.744452923095623*^9}, {
   3.744453231902237*^9, 3.744453238836914*^9}, {3.7444682550938396`*^9, 
   3.744468273416957*^9}, {3.744471201113576*^9, 3.7444712028553677`*^9}, 
   3.744478413431212*^9, 3.7444821035249968`*^9},
 ExpressionUUID -> "fa4d4052-7d34-4ef4-a2c2-1be7e39092be"],

Cell["\<\

Authors:

Mario Alberto Rodriguez-Meza (ININ, Mexico)
marioalberto.rodriguez@inin.gob.mx

Alejandro Aviles (Conacyt/ININ, Mexico)
alejandro.aviles.conacyt@inin.gob.mx, avilescervantes@gmail.com 


\
\>", "Text",
 CellChangeTimes->{{3.5057286061376343`*^9, 3.505728628000217*^9}, {
   3.506686870745358*^9, 3.506686885316695*^9}, {3.636286052227973*^9, 
   3.636286063745819*^9}, {3.646579894445087*^9, 3.646579895498218*^9}, {
   3.647084624808922*^9, 3.6470846405693207`*^9}, {3.647611882551482*^9, 
   3.647611886855419*^9}, {3.647620991221499*^9, 3.647620991322665*^9}, {
   3.6630003972950573`*^9, 3.663000407544524*^9}, {3.6933916766336718`*^9, 
   3.693391684895602*^9}, {3.7018672694481287`*^9, 3.701867282087358*^9}, {
   3.724602847159445*^9, 3.72460285507347*^9}, {3.724695359553027*^9, 
   3.724695360983019*^9}, {3.72478218521646*^9, 3.7247821853511963`*^9}, {
   3.725789495267005*^9, 3.725789530176879*^9}, {3.744032654648932*^9, 
   3.7440326608546257`*^9}, {3.74403270547289*^9, 3.744032733553393*^9}, {
   3.7444573418594627`*^9, 3.744457342912662*^9}, 3.744468284061948*^9, {
   3.744470893453539*^9, 3.744470994647352*^9}, {3.744471205866642*^9, 
   3.744471207238018*^9}, {3.744482028035802*^9, 3.744482047502104*^9}},
 FontSize->16,
 ExpressionUUID -> "26b4455f-e05f-4844-81c3-bc68561abc0d"],

Cell["\<\
References: 
For CLPT:                arXiv:1209.0780  (But we use the expansion of \
arXiv:1506.05264 )
For CLPT in MG:    arXiv:1705.10719, arXiv: 1809.xxxxx

If you use this code, please cite the reference arXiv: 1809.xxxxx. You may \
also want to cite the other references listed above.
\
\>", "Text",
 CellChangeTimes->{{3.744451854910817*^9, 3.744451873581196*^9}, 
   3.744468293613262*^9, {3.744470997901712*^9, 3.744471019558445*^9}, {
   3.744471056700426*^9, 3.744471105908955*^9}, {3.7444712236025352`*^9, 
   3.744471404563533*^9}, 3.744481330922483*^9},
 ExpressionUUID -> "868a5cf6-a4d0-4134-b07d-08e4f74713de"],

Cell["\<\
RUN:  shift-enter on the biggest right bracket \[Rule]
It runs in about 5-10 min\
\>", "Text",
 CellChangeTimes->{{3.744451683453739*^9, 3.7444517249311533`*^9}, {
  3.744471174654375*^9, 3.744471177815798*^9}, {3.7444821090053043`*^9, 
  3.744482119620695*^9}, {3.7446485608236217`*^9, 3.744648562404171*^9}},
 ExpressionUUID -> "63852856-43c3-4889-a7ee-371aa2a7d270"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"INPUTFILE", "=", "\"\<kfunctions.dat\>\""}], 
   "\[IndentingNewLine]", 
   RowBox[{"OUTFILE", "=", "\"\<qfunctions.dat\>\""}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.744648526887494*^9, 3.7446485533955193`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "\n1. Starting ",
 StyleBox["Mathematica",
  FontSlant->"Italic"]
}], "Subtitle",
 CellChangeTimes->{{3.506693699863208*^9, 3.506693714419594*^9}, {
   3.506694239233597*^9, 3.506694245811788*^9}, 3.6469482653506517`*^9, 
   3.693391932174884*^9, {3.7272635418586073`*^9, 3.727263557530658*^9}, {
   3.727263612299082*^9, 3.727263617969593*^9}, {3.744032532838442*^9, 
   3.74403253445984*^9}, {3.744038915050564*^9, 3.744038915754362*^9}, {
   3.7441275904862413`*^9, 3.7441275911982183`*^9}, {3.744451794177195*^9, 
   3.744451799025074*^9}},ExpressionUUID->"5722d23c-3157-4c00-b8ff-\
9d3116935029"],

Cell[TextData[{
 "We begin by initializing ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ":"
}], "Text",
 CellChangeTimes->{{3.4456211229641733`*^9, 3.4456211474543247`*^9}, {
  3.7440325433007107`*^9, 
  3.7440325832374077`*^9}},ExpressionUUID->"ef26b5e7-e60f-4f47-87d8-\
4d55d80391d3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], "\n", 
 RowBox[{"FileNames", "[", "]"}]}], "Input",
 CellChangeTimes->{3.50669368198448*^9, 3.744033256891781*^9},
 ExpressionUUID -> "99080ce5-960a-47c8-be3b-0880dae90a60"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"kfunctionsT.dat\"\>", ",", "\<\"MGPT_CLPT.nb\"\>", 
   ",", "\<\"MGPT_qfunctions.nb\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.744462722255426*^9, 3.744468308307767*^9, 
  3.744468453611348*^9, 3.744481347666196*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\

2. Definitions\
\>", "Subtitle",
 CellChangeTimes->{{3.506693699863208*^9, 3.506693714419594*^9}, {
   3.506694239233597*^9, 3.506694245811788*^9}, 3.6469482653506517`*^9, 
   3.693391932174884*^9, {3.7272635418586073`*^9, 3.727263557530658*^9}, {
   3.727263612299082*^9, 3.727263617969593*^9}, {3.744032532838442*^9, 
   3.74403253445984*^9}, {3.744038915050564*^9, 3.744038915754362*^9}, {
   3.7441275904862413`*^9, 3.7441275911982183`*^9}, {3.744451628567449*^9, 
   3.744451638205625*^9}, 
   3.74445179157203*^9},ExpressionUUID->"d34f82ea-747e-44fc-9b44-\
7558d7b01b5c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pi", "=", 
   RowBox[{"4.", " ", 
    RowBox[{"ArcTan", "[", "1", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pi2", "=", 
   RowBox[{"pi", "*", "pi"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"twopi2", "=", 
   RowBox[{"2.", " ", "pi2"}]}], " ", ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.731703411452982*^9, {3.731927643618544*^9, 3.731927654880117*^9}, {
   3.7319277718634663`*^9, 3.731927793150796*^9}, {3.731927931330085*^9, 
   3.731927969676676*^9}, {3.732045756320426*^9, 3.7320457607888927`*^9}, {
   3.74445310753871*^9, 3.744453111186718*^9}},
 ExpressionUUID -> "4740ee15-4dbb-46d5-ab70-9a9b6c5eb86b"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "\n7. ",
 Cell[BoxData[
  FormBox["q", TraditionalForm]],
  ExpressionUUID -> "bfc3bbf7-2990-4427-9b71-15e352d86957"],
 " Functions"
}], "Subtitle",
 CellChangeTimes->{{3.5066863565337048`*^9, 3.506686367684224*^9}, {
   3.506686613966511*^9, 3.506686622692828*^9}, {3.506694266561841*^9, 
   3.506694266695063*^9}, {3.531178815607143*^9, 3.5311788217708273`*^9}, {
   3.531497687011557*^9, 3.531497687778651*^9}, {3.642179479612159*^9, 
   3.642179480092396*^9}, {3.647774532301639*^9, 3.647774535061157*^9}, {
   3.693145116618022*^9, 3.693145116994025*^9}, 3.6933919067536697`*^9, {
   3.693391939325037*^9, 3.6933919485322*^9}, {3.7018673551434383`*^9, 
   3.701867360340748*^9}, {3.702464770521936*^9, 3.702464774128324*^9}, {
   3.703160918641246*^9, 3.70316091921454*^9}, {3.704282117232828*^9, 
   3.7042821203909883`*^9}, {3.7051398579700937`*^9, 3.7051398604013577`*^9}, 
   3.705175929006454*^9, 3.70522789957376*^9, {3.706265525893284*^9, 
   3.706265527587747*^9}, {3.706286563200179*^9, 3.706286564906068*^9}, {
   3.711195898843171*^9, 3.711195908954505*^9}, {3.7246924669451942`*^9, 
   3.7246924745430202`*^9}, {3.725789123301918*^9, 3.725789127332152*^9}, {
   3.725789212601597*^9, 3.725789238651923*^9}, {3.725803865649664*^9, 
   3.725803872614802*^9}, {3.72632131744506*^9, 3.7263213540175056`*^9}, {
   3.7265715411104527`*^9, 3.726571556388267*^9}, {3.727178889772348*^9, 
   3.7271788966050863`*^9}, {3.7276029948487883`*^9, 3.727603013967856*^9}, {
   3.727872503246994*^9, 3.727872525867734*^9}, {3.727872710023662*^9, 
   3.727872715766749*^9}, {3.728055032309638*^9, 3.728055040852248*^9}, {
   3.728055093796369*^9, 3.728055103138357*^9}, {3.728136469784626*^9, 
   3.728136471063732*^9}, {3.74403406544145*^9, 3.744034141807972*^9}, {
   3.744038948677055*^9, 3.744038949227332*^9}, {3.744112064001295*^9, 
   3.744112064114431*^9}, {3.744112358945138*^9, 3.744112359137405*^9}, {
   3.744127571590302*^9, 3.744127602094096*^9}, {3.744315452632174*^9, 
   3.744315457734589*^9}, 3.744467683332059*^9},
 ExpressionUUID -> "fa02b21b-dd17-4486-94d3-5a0edd824904"],

Cell[TextData[{
 "Dependencies: sections 1 and 2 and ",
 Cell[BoxData[
  FormBox["Q", TraditionalForm]],
  ExpressionUUID -> "72a26458-2888-4d86-a391-bf46ba540ccb"],
 " and ",
 Cell[BoxData[
  FormBox["R", TraditionalForm]],
  ExpressionUUID -> "949e44eb-97ca-4bc7-af50-76aaf6fb4bf0"],
 " ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],
  ExpressionUUID -> "d57d2bbe-109a-4b21-aba7-3706d75c97b9"],
 "-functions and power spectrum in: \[OpenCurlyDoubleQuote]kfunctions\
\[CloseCurlyDoubleQuote] data file."
}], "Text",
 CellChangeTimes->{{3.744038879277132*^9, 3.744038900282072*^9}, {
  3.744038956698884*^9, 3.744038960611829*^9}, {3.7440389940770693`*^9, 
  3.744038996437027*^9}, {3.744039814149437*^9, 3.744039823260783*^9}, {
  3.744127278585693*^9, 3.744127301496006*^9}, {3.7444508263913097`*^9, 
  3.744450845343046*^9}, {3.744451642693466*^9, 3.744451645765633*^9}, {
  3.7444519573328667`*^9, 3.744452012929335*^9}, {3.7444521440143948`*^9, 
  3.744452153325451*^9}, {3.7444531517225313`*^9, 3.744453177324583*^9}, {
  3.744453212447104*^9, 3.7444532155189257`*^9}, {3.74447995975351*^9, 
  3.744479965623229*^9}},
 ExpressionUUID -> "99dcf024-bed8-4f65-a1b2-7c4de5454416"],

Cell[CellGroupData[{

Cell[TextData[{
 "Importing tables (PSL(k), ",
 Cell[BoxData[
  FormBox["Q", TraditionalForm]],
  ExpressionUUID -> "e0748c29-dfa1-4577-a7ed-5a7298a0d07f"],
 "(k) and ",
 Cell[BoxData[
  FormBox["R", TraditionalForm]],
  ExpressionUUID -> "0c2a17ab-97f0-4a3b-bfca-3373e9fdcf42"],
 "(k) functions)"
}], "Subsection",
 CellChangeTimes->{{3.726324211483178*^9, 3.726324215250126*^9}, {
   3.72674953849334*^9, 3.726749546964682*^9}, {3.726930062878861*^9, 
   3.726930072943866*^9}, {3.727442646302916*^9, 3.7274426496492*^9}, {
   3.727694241026639*^9, 3.727694244364502*^9}, 3.728136618323822*^9, {
   3.744034202517852*^9, 3.744034262491262*^9}, {3.744452191057961*^9, 
   3.744452218296372*^9}, {3.7444691626336946`*^9, 3.74446917608624*^9}, {
   3.744469952376752*^9, 3.744469957560199*^9}},
 ExpressionUUID -> "e9905fc3-0f0d-4677-b97e-c2cec57b17e0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"QsRsTable", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"INPUTFILE", ",", "\"\<Data\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.744315609102438*^9, 3.744315613468101*^9}, {
   3.7443157563159227`*^9, 3.744315771673698*^9}, {3.744315806272093*^9, 
   3.7443158202968407`*^9}, {3.7443159639142303`*^9, 3.744315964814439*^9}, 
   3.744317949278723*^9, {3.744452352074634*^9, 3.744452359753055*^9}, {
   3.744479976884205*^9, 3.744479979040367*^9}, 3.744648622823636*^9},
 ExpressionUUID -> "7ad74938-327c-4abf-8b27-c39ad701cdc0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"QsRsTableRed", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{"QsRsTable", ",", "2"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.744316122531418*^9, 3.744316187900872*^9}, {
   3.744316288842785*^9, 3.744316289777276*^9}, {3.744316328369667*^9, 
   3.744316339648484*^9}, {3.744316547320757*^9, 3.744316571732181*^9}, 
   3.7443179563345957`*^9},
 ExpressionUUID -> "28b6fd73-f877-465b-a008-cf239d5c0c4a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"colk", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "QsRsTableRed", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"{", "1", "}"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"colPSL", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "QsRsTableRed", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"{", "18", "}"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";", 
  RowBox[{"colQ1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "QsRsTableRed", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"{", "2", "}"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"colQI", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "QsRsTableRed", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"{", "12", "}"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colQ2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "QsRsTableRed", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"{", "3", "}"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colQ5", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "QsRsTableRed", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"{", "5", "}"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colQ8", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "QsRsTableRed", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"{", "7", "}"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colR1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "QsRsTableRed", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"{", "13", "}"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colR2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "QsRsTableRed", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"{", "14", "}"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colRI", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "QsRsTableRed", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"{", "16", "}"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colR1plus2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "QsRsTableRed", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"{", "15", "}"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7443166181715803`*^9, 3.7443166279099083`*^9}, {
  3.7443166588607187`*^9, 3.744316673123776*^9}, {3.744316967510559*^9, 
  3.744317089005022*^9}, {3.744317171131432*^9, 3.744317332240417*^9}},
 ExpressionUUID -> "8a28f2f4-dd64-45ef-96db-ac0b1a9d099d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PSLT", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"colk", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"colPSL", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "colk", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"PSL", "=", 
  RowBox[{"Interpolation", "[", "PSLT", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"Q1T", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"colk", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"colQ1", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "colk", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Q1", "=", 
  RowBox[{"Interpolation", "[", "Q1T", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"QIT", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"colk", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"colQI", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "colk", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"QI", "=", 
  RowBox[{"Interpolation", "[", "QIT", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"Q2T", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"colk", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"colQ2", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "colk", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Q2", "=", 
  RowBox[{"Interpolation", "[", "Q2T", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"Q5T", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"colk", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"colQ5", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "colk", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Q5", "=", 
  RowBox[{"Interpolation", "[", "Q5T", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"Q8T", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"colk", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"colQ8", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "colk", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Q8", "=", 
  RowBox[{"Interpolation", "[", "Q8T", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"R1T", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"colk", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"colR1", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "colk", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"R1", "=", 
  RowBox[{"Interpolation", "[", "R1T", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"R2T", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"colk", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"colR2", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "colk", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"R2", "=", 
  RowBox[{"Interpolation", "[", "R2T", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"RIT", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"colk", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"colRI", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "colk", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"RI", "=", 
  RowBox[{"Interpolation", "[", "RIT", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"R1plus2T", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"colk", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"colR1plus2", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "colk", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"R1plus2", "=", 
  RowBox[{"Interpolation", "[", "R1plus2T", "]"}]}]}], "Input",
 CellChangeTimes->{{3.744317363024898*^9, 3.7443175840288687`*^9}, {
   3.744317715882512*^9, 3.7443177274578876`*^9}, 3.744317969027018*^9, {
   3.7443181311017523`*^9, 3.744318133572275*^9}, {3.744318179515374*^9, 
   3.744318203019052*^9}, {3.744318248780199*^9, 3.744318337384712*^9}, {
   3.7444568484407053`*^9, 3.744456852374008*^9}},
 ExpressionUUID -> "3c4d670e-3554-4ee3-9bfb-59b1fb7444f0"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAAlhM1LqdWQkDco/TVSSiOPzsBQoPX
f0RAwZlMEXtjhj+vVkUyLfRGQPbfc0qTvoA/j3VXVYSdSUACo5kG60V5P5nm
CMaVGUxAv+bo8Nbrcz+N0X7mI4lOQEgbiVnrGHA/98KBvdmWUEBf4IFWzgBq
PzvGk65+0lFAI7jxlw+kZT81Lq1ZpChTQH44st5d/GE/JNOoXIh4VEA5ppKd
RFZePyghdIbJsVVAJKbHalkhWj/i00ZqiwVXQLFocRB+cFY/sS/pdKpCWEAr
t7eL6p9TPzXwkjlKmllAEPU+O2sPUT+v7R5WqOtaQAJKEYvSBE4/PZR6mWMm
XEDKLX3B2clKP4Gf3Zafe11Ac0KQFEDERz/aUxC7OLpeQGEtOQz/Y0U/KEUl
N5DyX0ANIPGK9mBDP5bNoDa0omBAOPunc+NzQT8izRblzkBhQDG75hnexT8/
CX+Q8CnsYUCHsCIC3888P2tP+ydklGJAnT0+yHNJOj9X9M3yTDFjQHA1I7Xi
Ljg/nkukGnbbY0DQOs5vliY2P2934tVNemRAz0o2alh3ND+7wRG9BBZlQHkr
Z2mB/TI/Yr5EAfy+ZUCVcEAGRo0xP5OP39ihXGZA7qJlakNVMD8fE34NiAdn
QDNtukllSS4/NmuE1RynZ0AHcVQZh0csP8fhe8mQQ2hAjLTWBDR8Kj+zCnca
Re1oQI4lupnntSg/KQja/qeLaUCGKIVdlDMnP/q3QEBLN2pACYqRcAy2JT9G
hpitzd9qQDM2vZa4YSQ/HClYrv58a0DPeVakxj0jP01+GwxwJ2xAkAFhDWEW
Ij8JqEb9j8ZsQH8BgoXfGCE/P/BiGo9ibUD0FrV4xjQgP9DqgpTOC25A189+
+jufHj/ruQqivKluQMpfBKO0ER0/YTuWDOtUb0D5aZ0Gs4EbP1LbEqP4/G9A
UU45YwsVGj/np3tm2kxwQExDnKL51Rg/U7vvqdihcEBngyUnBpIXPwS5Fzcu
8XBApMKomi15Fj/ij8HyI0dxQKCANeufXhU//fVjRImbcUBCoTiZrlwUP15G
ut9F6nFAeNbTu5F7Ez/sb5Kpoj9yQBbpRIt2lhI/v4MevVaPckADpJQOvcwR
P5P5ofr/33JAAJlLWL8KET/27nc2
                   "]]}}}, {
               DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                  None}, PlotRange -> {{0.0001, 302.}, {0., 
                 0.01472528156462432}}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.0001`", ",", "302.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAAlhM1LqdWQkDco/TVSSiOPzsBQoPX
f0RAwZlMEXtjhj+vVkUyLfRGQPbfc0qTvoA/j3VXVYSdSUACo5kG60V5P5nm
CMaVGUxAv+bo8Nbrcz+N0X7mI4lOQEgbiVnrGHA/98KBvdmWUEBf4IFWzgBq
PzvGk65+0lFAI7jxlw+kZT81Lq1ZpChTQH44st5d/GE/JNOoXIh4VEA5ppKd
RFZePyghdIbJsVVAJKbHalkhWj/i00ZqiwVXQLFocRB+cFY/sS/pdKpCWEAr
t7eL6p9TPzXwkjlKmllAEPU+O2sPUT+v7R5WqOtaQAJKEYvSBE4/PZR6mWMm
XEDKLX3B2clKP4Gf3Zafe11Ac0KQFEDERz/aUxC7OLpeQGEtOQz/Y0U/KEUl
N5DyX0ANIPGK9mBDP5bNoDa0omBAOPunc+NzQT8izRblzkBhQDG75hnexT8/
CX+Q8CnsYUCHsCIC3888P2tP+ydklGJAnT0+yHNJOj9X9M3yTDFjQHA1I7Xi
Ljg/nkukGnbbY0DQOs5vliY2P2934tVNemRAz0o2alh3ND+7wRG9BBZlQHkr
Z2mB/TI/Yr5EAfy+ZUCVcEAGRo0xP5OP39ihXGZA7qJlakNVMD8fE34NiAdn
QDNtukllSS4/NmuE1RynZ0AHcVQZh0csP8fhe8mQQ2hAjLTWBDR8Kj+zCnca
Re1oQI4lupnntSg/KQja/qeLaUCGKIVdlDMnP/q3QEBLN2pACYqRcAy2JT9G
hpitzd9qQDM2vZa4YSQ/HClYrv58a0DPeVakxj0jP01+GwxwJ2xAkAFhDWEW
Ij8JqEb9j8ZsQH8BgoXfGCE/P/BiGo9ibUD0FrV4xjQgP9DqgpTOC25A189+
+jufHj/ruQqivKluQMpfBKO0ER0/YTuWDOtUb0D5aZ0Gs4EbP1LbEqP4/G9A
UU45YwsVGj/np3tm2kxwQExDnKL51Rg/U7vvqdihcEBngyUnBpIXPwS5Fzcu
8XBApMKomi15Fj/ij8HyI0dxQKCANeufXhU//fVjRImbcUBCoTiZrlwUP15G
ut9F6nFAeNbTu5F7Ez/sb5Kpoj9yQBbpRIt2lhI/v4MevVaPckADpJQOvcwR
P5P5ofr/33JAAJlLWL8KET/27nc2
                   "]]}}}, {
               DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                  None}, PlotRange -> {{0.0001, 302.}, {0., 
                 0.01472528156462432}}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.0001`", ",", "302.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("InterpolatingFunction[{{0.0001, 302.}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7444627232222643`*^9, 3.744468308555002*^9, 
  3.7444684546071157`*^9, 3.744481348786997*^9}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  
                  LineBox[{{0.00010511864237288136`, 6.228637661279418*^-7}, {
                   0.10208925429194478`, 0.9109514882883751}}], 
                  LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAA7ptAK5BZQ0B6HU68gybtPzsBQoPX
f0RAJDbKBNWR6T+vVkUyLfRGQIDkUCpVUeQ/j3VXVYSdSUCe7yag7D3gP5nm
CMaVGUxAU42tL3Xh2j+N0X7mI4lOQOocwjvGqtY/98KBvdmWUEDFceMhqxvT
PzvGk65+0lFAvBeBVnp80D81Lq1ZpChTQBu1LZ+Facw/JNOoXIh4VECk13Nf
isbIPyghdIbJsVVAa52witj6xT/i00ZqiwVXQDR3IcNJccM/sS/pdKpCWEBY
3nCWjnDBPzXwkjlKmllA+Kh4rBAyvz+v7R5WqOtaQHK4u/snGbw/PZR6mWMm
XEAjV9MVb6K5P4Gf3Zafe11A27SNoYhCtz/aUxC7OLpeQEqmfgK+WrU/KEUl
N5DyX0AXJnuTvrWzP5bNoDa0omBACnbF66Mbsj8izRblzkBhQJCcVDuBx7A/
CX+Q8CnsYUCFDQSNiQCvP2tP+ydklGJAUhszASjQrD9X9M3yTDFjQCIa2QXy
96o/nkukGnbbY0D/c8B0bAmpP2934tVNemRAmCxyrTZ3pz+7wRG9BBZlQCpx
rMrHFaY/Yr5EAfy+ZUA54QBX87mkP5OP39ihXGZAzSDSBrWVoz8fE34NiAdn
QA7GbljXa6I/NmuE1RynZ0C6k/pot2ahP8fhe8mQQ2hAVhsJumd4oD+zCnca
Re1oQBoAEH4RHp8/KQja/qeLaUCOnX3tR5GdP/q3QEBLN2pAxf0mg2MFnD9G
hpitzd9qQKA8x1jPm5o/HClYrv58a0CqiNG37GCZP01+GwxwJ2xAO4ugjeci
mD8JqEb9j8ZsQLpUDmkSDpc/P/BiGo9ibUCtKdrL9w+WP9DqgpTOC25AcXVl
uYIOlT/ruQqivKluQETY4nMaLpQ/YTuWDOtUb0C++rKuw0qTP1LbEqP4/G9A
Yg0Bl8l5kj/np3tm2kxwQIMrR1f0wJE/U7vvqdihcEDveUd3IAORPwS5Fzcu
8XBAQX2gt3pckD/ij8HyI0dxQCpU2mi0ZY8//fVjRImbcUCAn8QiTy2OP15G
ut9F6nFAdEQJF8cajT/sb5Kpoj9yQBMSxi9sAYw/v4MevVaPckBmB9Q3MgiL
P5P5ofr/33JA2C586m0Xij+aLIxX
                   "]]}}}, {
               DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                  None}, PlotRange -> {{0.0001, 302.}, {0., 
                 0.9109514882883751}}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.0001`", ",", "302.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  
                  LineBox[{{0.00010511864237288136`, 6.228637661279418*^-7}, {
                   0.10208925429194478`, 0.9109514882883751}}], 
                  LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAA7ptAK5BZQ0B6HU68gybtPzsBQoPX
f0RAJDbKBNWR6T+vVkUyLfRGQIDkUCpVUeQ/j3VXVYSdSUCe7yag7D3gP5nm
CMaVGUxAU42tL3Xh2j+N0X7mI4lOQOocwjvGqtY/98KBvdmWUEDFceMhqxvT
PzvGk65+0lFAvBeBVnp80D81Lq1ZpChTQBu1LZ+Facw/JNOoXIh4VECk13Nf
isbIPyghdIbJsVVAa52witj6xT/i00ZqiwVXQDR3IcNJccM/sS/pdKpCWEBY
3nCWjnDBPzXwkjlKmllA+Kh4rBAyvz+v7R5WqOtaQHK4u/snGbw/PZR6mWMm
XEAjV9MVb6K5P4Gf3Zafe11A27SNoYhCtz/aUxC7OLpeQEqmfgK+WrU/KEUl
N5DyX0AXJnuTvrWzP5bNoDa0omBACnbF66Mbsj8izRblzkBhQJCcVDuBx7A/
CX+Q8CnsYUCFDQSNiQCvP2tP+ydklGJAUhszASjQrD9X9M3yTDFjQCIa2QXy
96o/nkukGnbbY0D/c8B0bAmpP2934tVNemRAmCxyrTZ3pz+7wRG9BBZlQCpx
rMrHFaY/Yr5EAfy+ZUA54QBX87mkP5OP39ihXGZAzSDSBrWVoz8fE34NiAdn
QA7GbljXa6I/NmuE1RynZ0C6k/pot2ahP8fhe8mQQ2hAVhsJumd4oD+zCnca
Re1oQBoAEH4RHp8/KQja/qeLaUCOnX3tR5GdP/q3QEBLN2pAxf0mg2MFnD9G
hpitzd9qQKA8x1jPm5o/HClYrv58a0CqiNG37GCZP01+GwxwJ2xAO4ugjeci
mD8JqEb9j8ZsQLpUDmkSDpc/P/BiGo9ibUCtKdrL9w+WP9DqgpTOC25AcXVl
uYIOlT/ruQqivKluQETY4nMaLpQ/YTuWDOtUb0C++rKuw0qTP1LbEqP4/G9A
Yg0Bl8l5kj/np3tm2kxwQIMrR1f0wJE/U7vvqdihcEDveUd3IAORPwS5Fzcu
8XBAQX2gt3pckD/ij8HyI0dxQCpU2mi0ZY8//fVjRImbcUCAn8QiTy2OP15G
ut9F6nFAdEQJF8cajT/sb5Kpoj9yQBMSxi9sAYw/v4MevVaPckBmB9Q3MgiL
P5P5ofr/33JA2C586m0Xij+aLIxX
                   "]]}}}, {
               DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                  None}, PlotRange -> {{0.0001, 302.}, {0., 
                 0.9109514882883751}}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.0001`", ",", "302.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("InterpolatingFunction[{{0.0001, 302.}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7444627232222643`*^9, 3.744468308555002*^9, 
  3.7444684546071157`*^9, 3.744481348815481*^9}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  
                  LineBox[{{0.00010511864237288136`, 
                   3.1289738498173076`*^-7}, {0.10690410253075888`, 
                   0.792970729936672}}], 
                  LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAACfOm7NpJQ0CUbPgmBGDpPzsBQoPX
f0RAh/LJp4Ak5j+vVkUyLfRGQNf+fxCcn+E/j3VXVYSdSUCttcw2njvcP5nm
CMaVGUxAc97cUs5k1z+N0X7mI4lOQDX/x9R0wNM/98KBvdmWUEA0epKoZKzQ
PzvGk65+0lFAR8YBsHbPzD81Lq1ZpChTQDnHincS2sg/JNOoXIh4VEA6o1LG
hbHFPyghdIbJsVVAcdGDO5dCwz/i00ZqiwVXQE1Sgz23C8E/sS/pdKpCWED8
wRlaiZ2+PzXwkjlKmllAZgn8nZhauz+v7R5WqOtaQD924TNRsbg/PZR6mWMm
XECAPNI2uIi2P4Gf3Zafe11AxGyGmAt3tD/aUxC7OLpeQKy2w03czLI/KEUl
N5DyX0DtwpepdlyxP5bNoDa0omBA+kMeYG/qrz8izRblzkBhQDOlvPljla0/
CX+Q8CnsYUBaD5uxbVirP2tP+ydklGJAuEBABlNpqT9X9M3yTDFjQCunn3Iv
xKc/nkukGnbbY0CPBcz1ziOmP2934tVNemRA7CNLIT7FpD+7wRG9BBZlQDAl
lvIkiqM/Yr5EAfy+ZUCxvOv1qVCiP5OP39ihXGZA6kFE/NVGoT8fE34NiAdn
QBThItJuP6A/NmuE1RynZ0BgdYlbB72eP8fhe8mQQ2hAAbISy+ImnT+zCnca
Re1oQBB2l/2VjZs/KQja/qeLaUDgwvJFLy6aP/q3QEBLN2pAMIQw5X/RmD9G
hpitzd9qQFqEb15Vk5c/HClYrv58a0A0O0rN/n2WP01+GwxwJ2xA2xsSkrtk
lT8JqEb9j8ZsQOrBCeIrcJQ/P/BiGo9ibUAnaXGCeJCTP9DqgpTOC25A4yv6
OeKtkj/ruQqivKluQGSKOMYL6JE/YTuWDOtUb0Dk+XkLWB6RP1LbEqP4/G9A
9olhqilkkD/np3tm2kxwQLcy3C/6gI8/U7vvqdihcECdL00DuTKOPwS5Fzcu
8XBAx3EgTtsNjT/ij8HyI0dxQJloZ4LK44s//fVjRImbcUAhrBEDbtCKP15G
ut9F6nFA0vSDx5zdiT/sb5Kpoj9yQBroI/+Z5Ig/v4MevVaPckCHhiqjTAiI
P5P5ofr/33JAbJl86S40hz91RZoN
                   "]]}}}, {
               DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                  None}, PlotRange -> {{0.0001, 302.}, {0., 
                 0.792970729936672}}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.0001`", ",", "302.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  
                  LineBox[{{0.00010511864237288136`, 
                   3.1289738498173076`*^-7}, {0.10690410253075888`, 
                   0.792970729936672}}], 
                  LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAACfOm7NpJQ0CUbPgmBGDpPzsBQoPX
f0RAh/LJp4Ak5j+vVkUyLfRGQNf+fxCcn+E/j3VXVYSdSUCttcw2njvcP5nm
CMaVGUxAc97cUs5k1z+N0X7mI4lOQDX/x9R0wNM/98KBvdmWUEA0epKoZKzQ
PzvGk65+0lFAR8YBsHbPzD81Lq1ZpChTQDnHincS2sg/JNOoXIh4VEA6o1LG
hbHFPyghdIbJsVVAcdGDO5dCwz/i00ZqiwVXQE1Sgz23C8E/sS/pdKpCWED8
wRlaiZ2+PzXwkjlKmllAZgn8nZhauz+v7R5WqOtaQD924TNRsbg/PZR6mWMm
XECAPNI2uIi2P4Gf3Zafe11AxGyGmAt3tD/aUxC7OLpeQKy2w03czLI/KEUl
N5DyX0DtwpepdlyxP5bNoDa0omBA+kMeYG/qrz8izRblzkBhQDOlvPljla0/
CX+Q8CnsYUBaD5uxbVirP2tP+ydklGJAuEBABlNpqT9X9M3yTDFjQCunn3Iv
xKc/nkukGnbbY0CPBcz1ziOmP2934tVNemRA7CNLIT7FpD+7wRG9BBZlQDAl
lvIkiqM/Yr5EAfy+ZUCxvOv1qVCiP5OP39ihXGZA6kFE/NVGoT8fE34NiAdn
QBThItJuP6A/NmuE1RynZ0BgdYlbB72eP8fhe8mQQ2hAAbISy+ImnT+zCnca
Re1oQBB2l/2VjZs/KQja/qeLaUDgwvJFLy6aP/q3QEBLN2pAMIQw5X/RmD9G
hpitzd9qQFqEb15Vk5c/HClYrv58a0A0O0rN/n2WP01+GwxwJ2xA2xsSkrtk
lT8JqEb9j8ZsQOrBCeIrcJQ/P/BiGo9ibUAnaXGCeJCTP9DqgpTOC25A4yv6
OeKtkj/ruQqivKluQGSKOMYL6JE/YTuWDOtUb0Dk+XkLWB6RP1LbEqP4/G9A
9olhqilkkD/np3tm2kxwQLcy3C/6gI8/U7vvqdihcECdL00DuTKOPwS5Fzcu
8XBAx3EgTtsNjT/ij8HyI0dxQJloZ4LK44s//fVjRImbcUAhrBEDbtCKP15G
ut9F6nFA0vSDx5zdiT/sb5Kpoj9yQBroI/+Z5Ig/v4MevVaPckCHhiqjTAiI
P5P5ofr/33JAbJl86S40hz91RZoN
                   "]]}}}, {
               DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                  None}, PlotRange -> {{0.0001, 302.}, {0., 
                 0.792970729936672}}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.0001`", ",", "302.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("InterpolatingFunction[{{0.0001, 302.}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7444627232222643`*^9, 3.744468308555002*^9, 
  3.7444684546071157`*^9, 3.744481348840715*^9}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  
                  LineBox[{{
                   0.00010511864237288136`, -1.5220406920690105`*^-7}, {
                   0.11038507167370196`, 1.1596833766969863`}}], 
                  LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAAtIIq77pNQ0DyDQooEI7yPzsBQoPX
f0RAdkR5/FQ38D+vVkUyLfRGQLyCeaPuz+k/j3VXVYSdSUBlrXeqaKfkP5nm
CMaVGUxAnYuCw44b4T+N0X7mI4lOQCSfQNQM4Nw/98KBvdmWUEAP41SsZ1nY
PzvGk65+0lFAf/KEeM7V1D81Lq1ZpChTQE+Cp9HxKNI/JNOoXIh4VEBunurq
wajPPyghdIbJsVVA0UgSNzIazD/i00ZqiwVXQIivtWg74sg/sS/pdKpCWEAg
/KCHIFLGPzXwkjlKmllAC1Oj1k71wz+v7R5WqOtaQA0trpwQ/sE/PZR6mWMm
XEB6R4h1dGTAP4Gf3Zafe11Acvk190e5vT/aUxC7OLpeQFG/wWytZrs/KEUl
N5DyX0AuXKD3fEq5P5bNoDa0omBADB9x8XM8tz8izRblzkBhQHCCEKP9iLU/
CX+Q8CnsYUDgVfLYROWzP2tP+ydklGJA6yb5xkB4sj9X9M3yTDFjQBvpQFJc
RLE/nkukGnbbY0Dg6+qgYhWwP2934tVNemRADV6ZWXYrrj+7wRG9BBZlQEu6
6fOxZKw/Yr5EAfy+ZUA89542pKKqP5OP39ihXGZAdR0qAyMfqT8fE34NiAdn
QDVUukxpoqc/NmuE1RynZ0CfuQTSVlumP8fhe8mQQ2hASHZRAiwwpT+zCnca
Re1oQPgHoSKrBaQ/KQja/qeLaUCzOLqbnAWjP/q3QEBLN2pADnJm/FQGoj9G
hpitzd9qQHYHLAPrHqE/HClYrv58a0CyKZsjGlagP01+GwxwJ2xAlaTuntUU
nz8JqEb9j8ZsQLgGhkXXsZ0/P/BiGo9ibUC8jaks8GucP9DqgpTOC25Azecj
cZ4hmz/ruQqivKluQBR8nDl6AZo/YTuWDOtUb0Amja6NktyYP1LbEqP4/G9A
nFhBDtjOlz/np3tm2kxwQEbRHyGx4ZY/U7vvqdihcED5N1lt5e6VPwS5Fzcu
8XBAY9l/bBYYlT/ij8HyI0dxQFd1vgcpPJQ//fVjRImbcUCw46Q0znKTP15G
ut9F6nFACk2rCg7Dkj/sb5Kpoj9yQBCOjlgAD5I/v4MevVaPckDXmwT9626R
P5P5ofr/33JAS8PmrAbTkD/rbpKu
                   "]]}}}, {
               DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                  None}, PlotRange -> {{0.0001, 
                 302.}, {-1.5220406920690105`*^-7, 1.1596833766969863`}}, 
                PlotRangeClipping -> True, PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.0001`", ",", "302.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  
                  LineBox[{{
                   0.00010511864237288136`, -1.5220406920690105`*^-7}, {
                   0.11038507167370196`, 1.1596833766969863`}}], 
                  LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAAtIIq77pNQ0DyDQooEI7yPzsBQoPX
f0RAdkR5/FQ38D+vVkUyLfRGQLyCeaPuz+k/j3VXVYSdSUBlrXeqaKfkP5nm
CMaVGUxAnYuCw44b4T+N0X7mI4lOQCSfQNQM4Nw/98KBvdmWUEAP41SsZ1nY
PzvGk65+0lFAf/KEeM7V1D81Lq1ZpChTQE+Cp9HxKNI/JNOoXIh4VEBunurq
wajPPyghdIbJsVVA0UgSNzIazD/i00ZqiwVXQIivtWg74sg/sS/pdKpCWEAg
/KCHIFLGPzXwkjlKmllAC1Oj1k71wz+v7R5WqOtaQA0trpwQ/sE/PZR6mWMm
XEB6R4h1dGTAP4Gf3Zafe11Acvk190e5vT/aUxC7OLpeQFG/wWytZrs/KEUl
N5DyX0AuXKD3fEq5P5bNoDa0omBADB9x8XM8tz8izRblzkBhQHCCEKP9iLU/
CX+Q8CnsYUDgVfLYROWzP2tP+ydklGJA6yb5xkB4sj9X9M3yTDFjQBvpQFJc
RLE/nkukGnbbY0Dg6+qgYhWwP2934tVNemRADV6ZWXYrrj+7wRG9BBZlQEu6
6fOxZKw/Yr5EAfy+ZUA89542pKKqP5OP39ihXGZAdR0qAyMfqT8fE34NiAdn
QDVUukxpoqc/NmuE1RynZ0CfuQTSVlumP8fhe8mQQ2hASHZRAiwwpT+zCnca
Re1oQPgHoSKrBaQ/KQja/qeLaUCzOLqbnAWjP/q3QEBLN2pADnJm/FQGoj9G
hpitzd9qQHYHLAPrHqE/HClYrv58a0CyKZsjGlagP01+GwxwJ2xAlaTuntUU
nz8JqEb9j8ZsQLgGhkXXsZ0/P/BiGo9ibUC8jaks8GucP9DqgpTOC25Azecj
cZ4hmz/ruQqivKluQBR8nDl6AZo/YTuWDOtUb0Amja6NktyYP1LbEqP4/G9A
nFhBDtjOlz/np3tm2kxwQEbRHyGx4ZY/U7vvqdihcED5N1lt5e6VPwS5Fzcu
8XBAY9l/bBYYlT/ij8HyI0dxQFd1vgcpPJQ//fVjRImbcUCw46Q0znKTP15G
ut9F6nFACk2rCg7Dkj/sb5Kpoj9yQBCOjlgAD5I/v4MevVaPckDXmwT9626R
P5P5ofr/33JAS8PmrAbTkD/rbpKu
                   "]]}}}, {
               DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                  None}, PlotRange -> {{0.0001, 
                 302.}, {-1.5220406920690105`*^-7, 1.1596833766969863`}}, 
                PlotRangeClipping -> True, PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.0001`", ",", "302.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("InterpolatingFunction[{{0.0001, 302.}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7444627232222643`*^9, 3.744468308555002*^9, 
  3.7444684546071157`*^9, 3.744481348870207*^9}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  
                  LineBox[{{0.00010511864237288136`, 
                   2.3259988185672912`*^-7}, {0.09759048055058504, 
                   0.8647366407895642}}], 
                  LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAAaaiRrnVyQ0CwAvss7KvrPzsBQoPX
f0RA59wPHbp66D+vVkUyLfRGQMX2iC/2YuM/j3VXVYSdSUAHUxXVyeneP5nm
CMaVGUxAjr3Om7SC2T+N0X7mI4lOQBXN25SDfdU/98KBvdmWUEA1LlQzSg/S
PzvGk65+0lFAZMuAhdUbzz81Lq1ZpChTQHYjKIfDwco/JNOoXIh4VEC9WvGN
iEvHPyghdIbJsVVAzN90kbSjxD/i00ZqiwVXQCkm1kqdOMI/sS/pdKpCWEB2
hxDz6VTAPzXwkjlKmllACQKk+/0ivT+v7R5WqOtaQLk6uN/aP7o/PZR6mWMm
XEDeeRot4+i3P4Gf3Zafe11A0CNA5lWutT/aUxC7OLpeQMRI38Xs47M/KEUl
N5DyX0BIWy3TW1iyP5bNoDa0omBAzMqYK7LWsD8izRblzkBhQJatRvoEL68/
CX+Q8CnsYUCiJ6FKOsisP2tP+ydklGJAVqMsfKSyqj9X9M3yTDFjQGr/kT5G
8Kg/nkukGnbbY0DVjEd7nzOnP2934tVNemRAgWwRlJ6+pT+7wRG9BBZlQIjp
C0cKdKQ/Yr5EAfy+ZUDAqSoEOy2jP5OP39ihXGZAumrJtpkToj8fE34NiAdn
QKxs2GNI/KA/NmuE1RynZ0BDADNZiQ2gP8fhe8mQQ2hA+TvA/Q1snj+zCnca
Re1oQMksxO9Rvpw/KQja/qeLaUAQs1d6dUybP/q3QEBLN2pAT53YOpzZmT9G
hpitzd9qQIsdxXqTiZg/HClYrv58a0DlZatXJmaXP01+GwxwJ2xAeSyLGXE+
lj8JqEb9j8ZsQHZiSzN2PZU/P/BiGo9ibUAdo6btoFKUP9DqgpTOC25AHYcK
5wFmkz/ruQqivKluQC141PFTmJI/YTuWDOtUb0AjtHNdbsWRP1LbEqP4/G9A
K3PtGagBkT/np3tm2kxwQJL1FeIJVpA/U7vvqdihcEAh/jfA9E2PPwS5Fzcu
8XBA4XtqlZMYjj/ij8HyI0dxQIkW3uU53Iw//fVjRImbcUAOwjaZYruLP15G
ut9F6nFAO7ckGMC/ij/sb5Kpoj9yQCJnAHy7vYk/v4MevVaPckCfBG6ClteI
P5P5ofr/33JAs9m4eSv2hz8/m5c1
                   "]]}}}, {
               DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                  None}, PlotRange -> {{0.0001, 302.}, {0., 
                 0.8647366407895642}}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.0001`", ",", "302.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  
                  LineBox[{{0.00010511864237288136`, 
                   2.3259988185672912`*^-7}, {0.09759048055058504, 
                   0.8647366407895642}}], 
                  LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAAaaiRrnVyQ0CwAvss7KvrPzsBQoPX
f0RA59wPHbp66D+vVkUyLfRGQMX2iC/2YuM/j3VXVYSdSUAHUxXVyeneP5nm
CMaVGUxAjr3Om7SC2T+N0X7mI4lOQBXN25SDfdU/98KBvdmWUEA1LlQzSg/S
PzvGk65+0lFAZMuAhdUbzz81Lq1ZpChTQHYjKIfDwco/JNOoXIh4VEC9WvGN
iEvHPyghdIbJsVVAzN90kbSjxD/i00ZqiwVXQCkm1kqdOMI/sS/pdKpCWEB2
hxDz6VTAPzXwkjlKmllACQKk+/0ivT+v7R5WqOtaQLk6uN/aP7o/PZR6mWMm
XEDeeRot4+i3P4Gf3Zafe11A0CNA5lWutT/aUxC7OLpeQMRI38Xs47M/KEUl
N5DyX0BIWy3TW1iyP5bNoDa0omBAzMqYK7LWsD8izRblzkBhQJatRvoEL68/
CX+Q8CnsYUCiJ6FKOsisP2tP+ydklGJAVqMsfKSyqj9X9M3yTDFjQGr/kT5G
8Kg/nkukGnbbY0DVjEd7nzOnP2934tVNemRAgWwRlJ6+pT+7wRG9BBZlQIjp
C0cKdKQ/Yr5EAfy+ZUDAqSoEOy2jP5OP39ihXGZAumrJtpkToj8fE34NiAdn
QKxs2GNI/KA/NmuE1RynZ0BDADNZiQ2gP8fhe8mQQ2hA+TvA/Q1snj+zCnca
Re1oQMksxO9Rvpw/KQja/qeLaUAQs1d6dUybP/q3QEBLN2pAT53YOpzZmT9G
hpitzd9qQIsdxXqTiZg/HClYrv58a0DlZatXJmaXP01+GwxwJ2xAeSyLGXE+
lj8JqEb9j8ZsQHZiSzN2PZU/P/BiGo9ibUAdo6btoFKUP9DqgpTOC25AHYcK
5wFmkz/ruQqivKluQC141PFTmJI/YTuWDOtUb0AjtHNdbsWRP1LbEqP4/G9A
K3PtGagBkT/np3tm2kxwQJL1FeIJVpA/U7vvqdihcEAh/jfA9E2PPwS5Fzcu
8XBA4XtqlZMYjj/ij8HyI0dxQIkW3uU53Iw//fVjRImbcUAOwjaZYruLP15G
ut9F6nFAO7ckGMC/ij/sb5Kpoj9yQCJnAHy7vYk/v4MevVaPckCfBG6ClteI
P5P5ofr/33JAs9m4eSv2hz8/m5c1
                   "]]}}}, {
               DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                  None}, PlotRange -> {{0.0001, 302.}, {0., 
                 0.8647366407895642}}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.0001`", ",", "302.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("InterpolatingFunction[{{0.0001, 302.}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7444627232222643`*^9, 3.744468308555002*^9, 
  3.7444684546071157`*^9, 3.744481348910153*^9}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  
                  LineBox[{{0.00010511864237288136`, 0.011054237254330381`}, {
                   0.10136236304717773`, 1.1459148791887126`}}], 
                  LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAAEZKT1YdXQ0BR2CHXqlXyPzsBQoPX
f0RASIFK/5kR8D+vVkUyLfRGQI9OHCMBjOk/j3VXVYSdSUDkAQaJcGzkP5nm
CMaVGUxAbmomc5Ln4D+N0X7mI4lOQDwb7CS4hdw/98KBvdmWUEB98W1psgrY
PzvGk65+0lFA15HJm93C1D81Lq1ZpChTQND2LNjd5NE/JNOoXIh4VECocCe0
4zPPPyghdIbJsVVA2t1UNNauyz/i00ZqiwVXQJKKMTWJfsg/sS/pdKpCWECM
4OzIS/zFPzXwkjlKmllA1v4q9SWjwz+v7R5WqOtaQIgLvFvJvME/PZR6mWMm
XEBy12I9SSjAP4Gf3Zafe11Appdf5vtUvT/aUxC7OLpeQGFXWsNs8bo/KEUl
N5DyX0Biie++zt24P5bNoDa0omBAVJW6eGfXtj8izRblzkBhQEog1itnK7U/
CX+Q8CnsYUCkRhJ11I6zP2tP+ydklGJAr7YOjecnsj9X9M3yTDFjQJdxAHUe
+LA/nkukGnbbY0AlL/RV6KmvP2934tVNemRAnwL9fJ2+rT+7wRG9BBZlQD4R
ZcDQAqw/Yr5EAfy+ZUD9Bl/ds0KqP5OP39ihXGZA48YjeC28qD8fE34NiAdn
QGjmr7yaPac/NmuE1RynZ0C/acE4tPalP8fhe8mQQ2hAXS8wiYDNpD+zCnca
Re1oQLRAojvap6M/KQja/qeLaUBjBrRwqayiP/q3QEBLN2pAtVSZDpKxoT9G
hpitzd9qQK7golVUzqA/HClYrv58a0AdGa9l+QigP01+GwxwJ2xA7HC+c0N/
nj8JqEb9j8ZsQK156MmBIZ0/P/BiGo9ibUDEwJQFo+KbP9DqgpTOC25AOMer
R1memj/ruQqivKluQO7ZnKQNgpk/YTuWDOtUb0DgkrxfOWKYP1LbEqP4/G9A
KTjCBf9Zlz/np3tm2kxwQIu5oSgJcJY/U7vvqdihcEBQLGTlwX+VPwS5Fzcu
8XBAPyotGqytlD/ij8HyI0dxQBXXHIZy2JM//fVjRImbcUC3bnkepxOTP15G
ut9F6nFAe343zxhmkj/sb5Kpoj9yQF1asvXTs5E/v4MevVaPckBINlvzmhWR
P5P5ofr/33JA8CDWv4R8kD/6E516
                   "]]}}}, {
               DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                  None}, PlotRange -> {{0.0001, 302.}, {0., 
                 1.1459148791887126`}}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.0001`", ",", "302.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  
                  LineBox[{{0.00010511864237288136`, 0.011054237254330381`}, {
                   0.10136236304717773`, 1.1459148791887126`}}], 
                  LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAAEZKT1YdXQ0BR2CHXqlXyPzsBQoPX
f0RASIFK/5kR8D+vVkUyLfRGQI9OHCMBjOk/j3VXVYSdSUDkAQaJcGzkP5nm
CMaVGUxAbmomc5Ln4D+N0X7mI4lOQDwb7CS4hdw/98KBvdmWUEB98W1psgrY
PzvGk65+0lFA15HJm93C1D81Lq1ZpChTQND2LNjd5NE/JNOoXIh4VECocCe0
4zPPPyghdIbJsVVA2t1UNNauyz/i00ZqiwVXQJKKMTWJfsg/sS/pdKpCWECM
4OzIS/zFPzXwkjlKmllA1v4q9SWjwz+v7R5WqOtaQIgLvFvJvME/PZR6mWMm
XEBy12I9SSjAP4Gf3Zafe11Appdf5vtUvT/aUxC7OLpeQGFXWsNs8bo/KEUl
N5DyX0Biie++zt24P5bNoDa0omBAVJW6eGfXtj8izRblzkBhQEog1itnK7U/
CX+Q8CnsYUCkRhJ11I6zP2tP+ydklGJAr7YOjecnsj9X9M3yTDFjQJdxAHUe
+LA/nkukGnbbY0AlL/RV6KmvP2934tVNemRAnwL9fJ2+rT+7wRG9BBZlQD4R
ZcDQAqw/Yr5EAfy+ZUD9Bl/ds0KqP5OP39ihXGZA48YjeC28qD8fE34NiAdn
QGjmr7yaPac/NmuE1RynZ0C/acE4tPalP8fhe8mQQ2hAXS8wiYDNpD+zCnca
Re1oQLRAojvap6M/KQja/qeLaUBjBrRwqayiP/q3QEBLN2pAtVSZDpKxoT9G
hpitzd9qQK7golVUzqA/HClYrv58a0AdGa9l+QigP01+GwxwJ2xA7HC+c0N/
nj8JqEb9j8ZsQK156MmBIZ0/P/BiGo9ibUDEwJQFo+KbP9DqgpTOC25AOMer
R1memj/ruQqivKluQO7ZnKQNgpk/YTuWDOtUb0DgkrxfOWKYP1LbEqP4/G9A
KTjCBf9Zlz/np3tm2kxwQIu5oSgJcJY/U7vvqdihcEBQLGTlwX+VPwS5Fzcu
8XBAPyotGqytlD/ij8HyI0dxQBXXHIZy2JM//fVjRImbcUC3bnkepxOTP15G
ut9F6nFAe343zxhmkj/sb5Kpoj9yQF1asvXTs5E/v4MevVaPckBINlvzmhWR
P5P5ofr/33JA8CDWv4R8kD/6E516
                   "]]}}}, {
               DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                  None}, PlotRange -> {{0.0001, 302.}, {0., 
                 1.1459148791887126`}}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.0001`", ",", "302.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("InterpolatingFunction[{{0.0001, 302.}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7444627232222643`*^9, 3.744468308555002*^9, 
  3.7444684546071157`*^9, 3.744481348950532*^9}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  
                  LineBox[{{0.00010511864237288136`, 
                   0.00038998111599463384`}, {0.09011701934337425, 
                   0.5613077596262129}}], 
                  LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAAHHRkindwQ0BZvdKwO/bhPzsBQoPX
f0RAU55qgLXC3z+vVkUyLfRGQGAxavrlKNk/j3VXVYSdSUA0KEl2FA/UP5nm
CMaVGUxALkC5D9SO0D+N0X7mI4lOQEcKiADE38s/98KBvdmWUEAAWp+pDnTH
PzvGk65+0lFAD0EVOFQ2xD81Lq1ZpChTQPf/FCsnZME/JNOoXIh4VEBu+H6u
V0m+PyghdIbJsVVA8pBCQ5fPuj/i00ZqiwVXQPXD15Kmr7c/sS/pdKpCWEDx
L2ttMDm1PzXwkjlKmllAblpb5PLvsj+v7R5WqOtaQCeh1BFGDLE/PZR6mWMm
XEA4Asxw/A6vP4Gf3Zafe11AZ2rIpQonrD/aUxC7OLpeQFlh+oSj0ak/KEUl
N5DyX0CbNeNW2c2nP5bNoDa0omBAcoZI6NzWpT8izRblzkBhQNZfJWM0NqQ/
CX+Q8CnsYUA8pmLiyaSiP2tP+ydklGJAharA6PFIoT9X9M3yTDFjQPMdnk2o
IqA/nkukGnbbY0Bx4vAORwGeP2934tVNemRAO1J15ygZnD+7wRG9BBZlQMdU
5/mHaJo/Yr5EAfy+ZUDOSXZSTr2YP5OP39ihXGZAWpNz1SJNlz8fE34NiAdn
QH+he4Iv4pU/NmuE1RynZ0AD8aAMAayUP8fhe8mQQ2hAzefKX5GSkz+zCnca
Re1oQOONLBXXd5I/KQja/qeLaUDZrp6vOoWRP/q3QEBLN2pAtxE2sVSUkD9G
hpitzd9qQKTfxCRhc48/HClYrv58a0AgbpvXKveNP01+GwxwJ2xAU7UKIWZ0
jD8JqEb9j8ZsQL6EcgltJIs/P/BiGo9ibUBozTR+3vGJP9DqgpTOC25APpuv
CoC7iD/ruQqivKluQAFW4xOhrIc/YTuWDOtUb0AA1xZkgpmGP1LbEqP4/G9A
tzgktu+bhT/np3tm2kxwQEPX8wIyu4Q/U7vvqdihcEC5lPjIdtSDPwS5Fzcu
8XBA09DfHjsLgz/ij8HyI0dxQNAqjxiQP4I//fVjRImbcUA70H/p/IOBP15G
ut9F6nFAdEpg7tTegD/sb5Kpoj9yQKVX6TVfNYA/v4MevVaPckAD/K+ADz5/
P5P5ofr/33JAYsL6rAgbfj8GnpMr
                   "]]}}}, {
               DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                  None}, PlotRange -> {{0.0001, 302.}, {0., 
                 0.5613077596262129}}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.0001`", ",", "302.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  
                  LineBox[{{0.00010511864237288136`, 
                   0.00038998111599463384`}, {0.09011701934337425, 
                   0.5613077596262129}}], 
                  LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAAHHRkindwQ0BZvdKwO/bhPzsBQoPX
f0RAU55qgLXC3z+vVkUyLfRGQGAxavrlKNk/j3VXVYSdSUA0KEl2FA/UP5nm
CMaVGUxALkC5D9SO0D+N0X7mI4lOQEcKiADE38s/98KBvdmWUEAAWp+pDnTH
PzvGk65+0lFAD0EVOFQ2xD81Lq1ZpChTQPf/FCsnZME/JNOoXIh4VEBu+H6u
V0m+PyghdIbJsVVA8pBCQ5fPuj/i00ZqiwVXQPXD15Kmr7c/sS/pdKpCWEDx
L2ttMDm1PzXwkjlKmllAblpb5PLvsj+v7R5WqOtaQCeh1BFGDLE/PZR6mWMm
XEA4Asxw/A6vP4Gf3Zafe11AZ2rIpQonrD/aUxC7OLpeQFlh+oSj0ak/KEUl
N5DyX0CbNeNW2c2nP5bNoDa0omBAcoZI6NzWpT8izRblzkBhQNZfJWM0NqQ/
CX+Q8CnsYUA8pmLiyaSiP2tP+ydklGJAharA6PFIoT9X9M3yTDFjQPMdnk2o
IqA/nkukGnbbY0Bx4vAORwGeP2934tVNemRAO1J15ygZnD+7wRG9BBZlQMdU
5/mHaJo/Yr5EAfy+ZUDOSXZSTr2YP5OP39ihXGZAWpNz1SJNlz8fE34NiAdn
QH+he4Iv4pU/NmuE1RynZ0AD8aAMAayUP8fhe8mQQ2hAzefKX5GSkz+zCnca
Re1oQOONLBXXd5I/KQja/qeLaUDZrp6vOoWRP/q3QEBLN2pAtxE2sVSUkD9G
hpitzd9qQKTfxCRhc48/HClYrv58a0AgbpvXKveNP01+GwxwJ2xAU7UKIWZ0
jD8JqEb9j8ZsQL6EcgltJIs/P/BiGo9ibUBozTR+3vGJP9DqgpTOC25APpuv
CoC7iD/ruQqivKluQAFW4xOhrIc/YTuWDOtUb0AA1xZkgpmGP1LbEqP4/G9A
tzgktu+bhT/np3tm2kxwQEPX8wIyu4Q/U7vvqdihcEC5lPjIdtSDPwS5Fzcu
8XBA09DfHjsLgz/ij8HyI0dxQNAqjxiQP4I//fVjRImbcUA70H/p/IOBP15G
ut9F6nFAdEpg7tTegD/sb5Kpoj9yQKVX6TVfNYA/v4MevVaPckAD/K+ADz5/
P5P5ofr/33JAYsL6rAgbfj8GnpMr
                   "]]}}}, {
               DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                  None}, PlotRange -> {{0.0001, 302.}, {0., 
                 0.5613077596262129}}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.0001`", ",", "302.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("InterpolatingFunction[{{0.0001, 302.}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7444627232222643`*^9, 3.744468308555002*^9, 
  3.7444684546071157`*^9, 3.744481348982997*^9}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  
                  LineBox[{{
                   0.00010511864237288136`, -0.00010214497529591994`}, {
                   0.15579842233222324`, 0.06645902142687823}}], 
                  LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAA1VVDySb6QkCKd41bdQOxPzsBQoPX
f0RAKeP4pQDsrD+vVkUyLfRGQFe8YTgWSac/j3VXVYSdSUAGYKcJyc6iP5nm
CMaVGUxARIdkbehfnz+N0X7mI4lOQIxPOugaqJo/98KBvdmWUEBnMXOCu6OW
PzvGk65+0lFAYpWls1iokz81Lq1ZpChTQDTfv27tC5E/JNOoXIh4VEAndCWC
wOiNPyghdIbJsVVABqBSmxenij/i00ZqiwVXQOatAs/OsIc/sS/pdKpCWEAF
RmPrwleFPzXwkjlKmllAEbxVNakqgz+v7R5WqOtaQM5Ynwl/WoE/PZR6mWMm
XED6WXykT8d/P4Gf3Zafe11A5Wwkws72fD/aUxC7OLpeQGcb56m0t3o/KEUl
N5DyX0B1pCbEmsR4P5bNoDa0omBAjeXesxfQdj8izRblzkBhQJ46wBupMnU/
CX+Q8CnsYUAuhmgJ6KZzP2tP+ydklGJAoPFA3GVNcj9X9M3yTDFjQMAlnR1w
KXE/nkukGnbbY0BtiCEMfglwP2934tVNemRAFIVyXQgsbj+7wRG9BBZlQMcZ
La/2eWw/Yr5EAfy+ZUDba3sFmMtqP5OP39ihXGZAqyhyUntYaT8fE34NiAdn
QBjVm1Xy6Gc/NmuE1RynZ0CLjxIIrq1mP8fhe8mQQ2hAb8USvS6PZT+zCnca
Re1oQENry2MkcGQ/KQja/qeLaUDab0z0QHljP/q3QEBLN2pA5A6L0omCYj9G
hpitzd9qQOfq45xQoWE/HClYrv58a0BxAO7Q7txgP01+GwxwJ2xAXVSkkI8V
YD8JqEb9j8ZsQGLYR7Luz14/P/BiGo9ibUCbFx3N1JFdP9DqgpTOC25Ag4Sl
CdJOXD/ruQqivKluQJ9U+tozNFs/YTuWDOtUb0DkAFq9lxRaP1LbEqP4/G9A
NmmiShELWT/np3tm2kxwQBb/7ySQH1g/U7vvqdihcECihbaXWi1XPwS5Fzcu
8XBAdwMqZvFYVj/ij8HyI0dxQFX3GWgTgVU//fVjRImbcUCFD2Vp4LpUP15G
ut9F6nFAzDPIscsMVD/sb5Kpoj9yQN8bmyJdWVM/v4MevVaPckAccQoMn7hS
P5P5ofr/33JAI02QwbQaUj+f4oZz
                   "]]}}}, {
               DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                  None}, PlotRange -> {{0.0001, 
                 302.}, {-0.00010214497529591994`, 0.06645902142687823}}, 
                PlotRangeClipping -> True, PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.0001`", ",", "302.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  
                  LineBox[{{
                   0.00010511864237288136`, -0.00010214497529591994`}, {
                   0.15579842233222324`, 0.06645902142687823}}], 
                  LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAA1VVDySb6QkCKd41bdQOxPzsBQoPX
f0RAKeP4pQDsrD+vVkUyLfRGQFe8YTgWSac/j3VXVYSdSUAGYKcJyc6iP5nm
CMaVGUxARIdkbehfnz+N0X7mI4lOQIxPOugaqJo/98KBvdmWUEBnMXOCu6OW
PzvGk65+0lFAYpWls1iokz81Lq1ZpChTQDTfv27tC5E/JNOoXIh4VEAndCWC
wOiNPyghdIbJsVVABqBSmxenij/i00ZqiwVXQOatAs/OsIc/sS/pdKpCWEAF
RmPrwleFPzXwkjlKmllAEbxVNakqgz+v7R5WqOtaQM5Ynwl/WoE/PZR6mWMm
XED6WXykT8d/P4Gf3Zafe11A5Wwkws72fD/aUxC7OLpeQGcb56m0t3o/KEUl
N5DyX0B1pCbEmsR4P5bNoDa0omBAjeXesxfQdj8izRblzkBhQJ46wBupMnU/
CX+Q8CnsYUAuhmgJ6KZzP2tP+ydklGJAoPFA3GVNcj9X9M3yTDFjQMAlnR1w
KXE/nkukGnbbY0BtiCEMfglwP2934tVNemRAFIVyXQgsbj+7wRG9BBZlQMcZ
La/2eWw/Yr5EAfy+ZUDba3sFmMtqP5OP39ihXGZAqyhyUntYaT8fE34NiAdn
QBjVm1Xy6Gc/NmuE1RynZ0CLjxIIrq1mP8fhe8mQQ2hAb8USvS6PZT+zCnca
Re1oQENry2MkcGQ/KQja/qeLaUDab0z0QHljP/q3QEBLN2pA5A6L0omCYj9G
hpitzd9qQOfq45xQoWE/HClYrv58a0BxAO7Q7txgP01+GwxwJ2xAXVSkkI8V
YD8JqEb9j8ZsQGLYR7Luz14/P/BiGo9ibUCbFx3N1JFdP9DqgpTOC25Ag4Sl
CdJOXD/ruQqivKluQJ9U+tozNFs/YTuWDOtUb0DkAFq9lxRaP1LbEqP4/G9A
NmmiShELWT/np3tm2kxwQBb/7ySQH1g/U7vvqdihcECihbaXWi1XPwS5Fzcu
8XBAdwMqZvFYVj/ij8HyI0dxQFX3GWgTgVU//fVjRImbcUCFD2Vp4LpUP15G
ut9F6nFAzDPIscsMVD/sb5Kpoj9yQN8bmyJdWVM/v4MevVaPckAccQoMn7hS
P5P5ofr/33JAI02QwbQaUj+f4oZz
                   "]]}}}, {
               DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                  None}, PlotRange -> {{0.0001, 
                 302.}, {-0.00010214497529591994`, 0.06645902142687823}}, 
                PlotRangeClipping -> True, PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.0001`", ",", "302.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("InterpolatingFunction[{{0.0001, 302.}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7444627232222643`*^9, 3.744468308555002*^9, 
  3.7444684546071157`*^9, 3.744481349010469*^9}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  
                  LineBox[{{0.00010511864237288136`, 0.0003813424883183923}, {
                   0.09104048818689443, 0.5604628773442203}}], 
                  LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAA2vhKzW5tQ0B1GBrYT+/hPzsBQoPX
f0RAtLvj3zWt3z+vVkUyLfRGQLJl2me3Gdk/j3VXVYSdSUBJhl/pHQbUP5nm
CMaVGUxAI7gec0KI0D+N0X7mI4lOQFmBv5T51cs/98KBvdmWUED4jOgKRmrH
PzvGk65+0lFApKHdeuIvxD81Lq1ZpChTQOY4WnKZXcE/JNOoXIh4VEDGw+Pp
9T2+PyghdIbJsVVAAqI1WTrJuj/i00ZqiwVXQHy/jlxJq7c/sS/pdKpCWEA7
T5+xkjW1PzXwkjlKmllAnafIz+Dtsj+v7R5WqOtaQPR2t8xhCrE/PZR6mWMm
XECLWdPStwyvP4Gf3Zafe11A3x74gV8mrD/aUxC7OLpeQH3zpJe70ak/KEUl
N5DyX0CbNeNW2c2nP5bNoDa0omBAhQPoa8rWpT8izRblzkBhQAvp3n+qNqQ/
CX+Q8CnsYUDZ1nY+MKaiP2tP+ydklGJAuzgZdEFKoT9X9M3yTDFjQK999eb1
I6A/nkukGnbbY0Cppsg41AOeP2934tVNemRADooEGrAdnD+7wRG9BBZlQFG1
EfT0bJo/Yr5EAfy+ZUD3QoEWz7+YP5OP39ihXGZAPGM5lLJPlz8fE34NiAdn
QOy9LJnO5JU/NmuE1RynZ0BwDVIjoK6UP8fhe8mQQ2hAOgR8djCVkz+zCnca
Re1oQFCq3St2epI/KQja/qeLaUBGy0/G2YeRP/q3QEBLN2pAJC7nx/OWkD9G
hpitzd9qQH4YJ1KfeI8/HClYrv58a0D6pv0EafyNP01+GwxwJ2xALe5sTqR5
jD8JqEb9j8ZsQJi91DarKYs/P/BiGo9ibUBCBperHPeJP9DqgpTOC25AGNQR
OL7AiD/ruQqivKluQNuORUHfsYc/YTuWDOtUb0AYGFaVxp6GP1LbEqP4/G9A
ayo2CTOhhT/np3tm2kxwQEev7LxNwIQ/U7vvqdihcECyXGhuSdmDPwS5Fzcu
8XBAtetBm8APgz/ij8HyI0dxQOUFFv/RQ4I//fVjRImbcUAqVqsmS4iBP15G
ut9F6nFA9/iVumTjgD/sb5Kpoj9yQMHl4QcjOoA/v4MevVaPckBaRb8QdUd/
P5P5ofr/33JAL9blKGwjfj/Cp5rN
                   "]]}}}, {
               DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                  None}, PlotRange -> {{0.0001, 302.}, {0., 
                 0.5604628773442203}}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.0001`", ",", "302.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  
                  LineBox[{{0.00010511864237288136`, 0.0003813424883183923}, {
                   0.09104048818689443, 0.5604628773442203}}], 
                  LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAA2vhKzW5tQ0B1GBrYT+/hPzsBQoPX
f0RAtLvj3zWt3z+vVkUyLfRGQLJl2me3Gdk/j3VXVYSdSUBJhl/pHQbUP5nm
CMaVGUxAI7gec0KI0D+N0X7mI4lOQFmBv5T51cs/98KBvdmWUED4jOgKRmrH
PzvGk65+0lFApKHdeuIvxD81Lq1ZpChTQOY4WnKZXcE/JNOoXIh4VEDGw+Pp
9T2+PyghdIbJsVVAAqI1WTrJuj/i00ZqiwVXQHy/jlxJq7c/sS/pdKpCWEA7
T5+xkjW1PzXwkjlKmllAnafIz+Dtsj+v7R5WqOtaQPR2t8xhCrE/PZR6mWMm
XECLWdPStwyvP4Gf3Zafe11A3x74gV8mrD/aUxC7OLpeQH3zpJe70ak/KEUl
N5DyX0CbNeNW2c2nP5bNoDa0omBAhQPoa8rWpT8izRblzkBhQAvp3n+qNqQ/
CX+Q8CnsYUDZ1nY+MKaiP2tP+ydklGJAuzgZdEFKoT9X9M3yTDFjQK999eb1
I6A/nkukGnbbY0Cppsg41AOeP2934tVNemRADooEGrAdnD+7wRG9BBZlQFG1
EfT0bJo/Yr5EAfy+ZUD3QoEWz7+YP5OP39ihXGZAPGM5lLJPlz8fE34NiAdn
QOy9LJnO5JU/NmuE1RynZ0BwDVIjoK6UP8fhe8mQQ2hAOgR8djCVkz+zCnca
Re1oQFCq3St2epI/KQja/qeLaUBGy0/G2YeRP/q3QEBLN2pAJC7nx/OWkD9G
hpitzd9qQH4YJ1KfeI8/HClYrv58a0D6pv0EafyNP01+GwxwJ2xALe5sTqR5
jD8JqEb9j8ZsQJi91DarKYs/P/BiGo9ibUBCBperHPeJP9DqgpTOC25AGNQR
OL7AiD/ruQqivKluQNuORUHfsYc/YTuWDOtUb0AYGFaVxp6GP1LbEqP4/G9A
ayo2CTOhhT/np3tm2kxwQEev7LxNwIQ/U7vvqdihcECyXGhuSdmDPwS5Fzcu
8XBAtetBm8APgz/ij8HyI0dxQOUFFv/RQ4I//fVjRImbcUAqVqsmS4iBP15G
ut9F6nFA9/iVumTjgD/sb5Kpoj9yQMHl4QcjOoA/v4MevVaPckBaRb8QdUd/
P5P5ofr/33JAL9blKGwjfj/Cp5rN
                   "]]}}}, {
               DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                  None}, PlotRange -> {{0.0001, 302.}, {0., 
                 0.5604628773442203}}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.0001`", ",", "302.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("InterpolatingFunction[{{0.0001, 302.}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7444627232222643`*^9, 3.744468308555002*^9, 
  3.7444684546071157`*^9, 3.744481349035658*^9}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  
                  LineBox[{{0.00010511864237288136`, 
                   0.00029815116103001205`}, {0.09437136563119958, 
                   0.6345505693875457}}], 
                  LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAAA2lr7PpkQ0Cer+X+PE7kPzsBQoPX
f0RAt+Qojxbh4T+vVkUyLfRGQOLFkQyPXtw/j3VXVYSdSUDFdBDDEajWP5nm
CMaVGUxAFH0XYky40j+N0X7mI4lOQMQywguJis8/98KBvdmWUEAz2Fv4dZLK
PzvGk65+0lFAl75SiDPnxj81Lq1ZpChTQAa8TYX8uMM/JNOoXIh4VECTmLK5
9C7BPyghdIbJsVVAYF+ipYV3vj/i00ZqiwVXQOty3vjw7Lo/sS/pdKpCWEAw
BVPGHCS4PzXwkjlKmllA9BXOezyOtT+v7R5WqOtaQBLAXzRva7M/PZR6mWMm
XEDKcNpWkrOxP4Gf3Zafe11AEkYC3pYNsD/aUxC7OLpeQNblfIYcda0/KEUl
N5DyX0Cr5rDz1yyrP5bNoDa0omBAQhWTbODyqD8izRblzkBhQMsGmw6hGac/
CX+Q8CnsYUA2GrB8HFKlP2tP+ydklGJA5NpRohbGoz9X9M3yTDFjQD3L9gPF
d6I/nkukGnbbY0DSq7wjPy6hP2934tVNemRAf2eaYzwZoD+7wRG9BBZlQNdh
pPaqRp4/Yr5EAfy+ZUAltBe0sGCcP5OP39ihXGZACPxZnOe+mj8fE34NiAdn
QHGfVu0oH5k/NmuE1RynZ0Br8DTkOLyXP8fhe8mQQ2hAAKIJAsN8lj+zCnca
Re1oQM2HuRcXPJU/KQja/qeLaUDM297/ZSiUP/q3QEBLN2pAOTbh6r0Vkz9G
hpitzd9qQJtiHhnnHJI/HClYrv58a0DfxvuOqESRP01+GwxwJ2xA9/+bnDNo
kD8JqEb9j8ZsQLMWYiO3UI8/P/BiGo9ibUBiUzcQAPKNP9DqgpTOC25AZR5A
6TCOjD/ruQqivKluQBQ00zVpV4s/YTuWDOtUb0BTBQG7Hx2KP1LbEqP4/G9A
rTAwlKj8iD/np3tm2kxwQJzZHvX8/Ic/U7vvqdihcECsFwDTGfaGPwS5Fzcu
8XBAotYKpOYPhj/ij8HyI0dxQCChJLoVJoU//fVjRImbcUAOTr9OkU6EP15G
ut9F6nFArQRrCOKQgz/sb5Kpoj9yQMjZPhdnzoI/v4MevVaPckBKRNJeJSKC
P5P5ofr/33JASw1Fydh7gT8RqJGj
                   "]]}}}, {
               DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                  None}, PlotRange -> {{0.0001, 302.}, {0., 
                 0.6345505693875457}}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.0001`", ",", "302.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  
                  LineBox[{{0.00010511864237288136`, 
                   0.00029815116103001205`}, {0.09437136563119958, 
                   0.6345505693875457}}], 
                  LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAAA2lr7PpkQ0Cer+X+PE7kPzsBQoPX
f0RAt+Qojxbh4T+vVkUyLfRGQOLFkQyPXtw/j3VXVYSdSUDFdBDDEajWP5nm
CMaVGUxAFH0XYky40j+N0X7mI4lOQMQywguJis8/98KBvdmWUEAz2Fv4dZLK
PzvGk65+0lFAl75SiDPnxj81Lq1ZpChTQAa8TYX8uMM/JNOoXIh4VECTmLK5
9C7BPyghdIbJsVVAYF+ipYV3vj/i00ZqiwVXQOty3vjw7Lo/sS/pdKpCWEAw
BVPGHCS4PzXwkjlKmllA9BXOezyOtT+v7R5WqOtaQBLAXzRva7M/PZR6mWMm
XEDKcNpWkrOxP4Gf3Zafe11AEkYC3pYNsD/aUxC7OLpeQNblfIYcda0/KEUl
N5DyX0Cr5rDz1yyrP5bNoDa0omBAQhWTbODyqD8izRblzkBhQMsGmw6hGac/
CX+Q8CnsYUA2GrB8HFKlP2tP+ydklGJA5NpRohbGoz9X9M3yTDFjQD3L9gPF
d6I/nkukGnbbY0DSq7wjPy6hP2934tVNemRAf2eaYzwZoD+7wRG9BBZlQNdh
pPaqRp4/Yr5EAfy+ZUAltBe0sGCcP5OP39ihXGZACPxZnOe+mj8fE34NiAdn
QHGfVu0oH5k/NmuE1RynZ0Br8DTkOLyXP8fhe8mQQ2hAAKIJAsN8lj+zCnca
Re1oQM2HuRcXPJU/KQja/qeLaUDM297/ZSiUP/q3QEBLN2pAOTbh6r0Vkz9G
hpitzd9qQJtiHhnnHJI/HClYrv58a0DfxvuOqESRP01+GwxwJ2xA9/+bnDNo
kD8JqEb9j8ZsQLMWYiO3UI8/P/BiGo9ibUBiUzcQAPKNP9DqgpTOC25AZR5A
6TCOjD/ruQqivKluQBQ00zVpV4s/YTuWDOtUb0BTBQG7Hx2KP1LbEqP4/G9A
rTAwlKj8iD/np3tm2kxwQJzZHvX8/Ic/U7vvqdihcECsFwDTGfaGPwS5Fzcu
8XBAotYKpOYPhj/ij8HyI0dxQCChJLoVJoU//fVjRImbcUAOTr9OkU6EP15G
ut9F6nFArQRrCOKQgz/sb5Kpoj9yQMjZPhdnzoI/v4MevVaPckBKRNJeJSKC
P5P5ofr/33JASw1Fydh7gT8RqJGj
                   "]]}}}, {
               DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                  None}, PlotRange -> {{0.0001, 302.}, {0., 
                 0.6345505693875457}}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.0001`", ",", "302.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("InterpolatingFunction[{{0.0001, 302.}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7444627232222643`*^9, 3.744468308555002*^9, 
  3.7444684546071157`*^9, 3.744481349062573*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"kmaxQR", "=", 
  RowBox[{"Max", "[", 
   RowBox[{"Q1T", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"kminQR", "=", 
  RowBox[{"Min", "[", 
   RowBox[{"Q1T", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.744317363024898*^9, 3.7443175840288687`*^9}, {
   3.744317715882512*^9, 3.7443177274578876`*^9}, 3.744317969027018*^9, {
   3.7443181311017523`*^9, 3.744318133572275*^9}, 3.744318179515374*^9},
 ExpressionUUID -> "978dc4c4-0e36-47a8-8c71-c0d705642b41"],

Cell[BoxData["302.`"], "Output",
 CellChangeTimes->{3.744462723692952*^9, 3.744468308831585*^9, 
  3.7444684550532703`*^9, 3.744481349214129*^9}],

Cell[BoxData["0.0001`"], "Output",
 CellChangeTimes->{3.744462723692952*^9, 3.744468308831585*^9, 
  3.7444684550532703`*^9, 3.7444813492145767`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Bessel functions", "Subsection",
 CellChangeTimes->{{3.731703373869669*^9, 3.7317033766407623`*^9}},
 ExpressionUUID -> "90f3b071-e3db-413e-a7e4-e8489caf4ba5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"j0", "[", "x_", "]"}], ":=", 
  FractionBox[
   RowBox[{"Sin", "[", "x", "]"}], "x"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j1", "[", "x_", "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{"Sin", "[", "x", "]"}], 
    RowBox[{"x", "^", "2"}]], "-", 
   FractionBox[
    RowBox[{"Cos", "[", "x", "]"}], "x"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j2", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox["3", 
       RowBox[{"x", "^", "2"}]], "-", "1"}], ")"}], 
    FractionBox[
     RowBox[{"Sin", "[", "x", "]"}], "x"]}], "-", 
   FractionBox[
    RowBox[{"3", " ", 
     RowBox[{"Cos", "[", "x", "]"}]}], 
    RowBox[{"x", "^", "2"}]]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j3", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox["15", 
       RowBox[{"x", "^", "3"}]], "-", 
      FractionBox["6", "x"]}], ")"}], 
    FractionBox[
     RowBox[{"Sin", "[", "x", "]"}], "x"]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox["15", 
       RowBox[{"x", "^", "2"}]], "-", "1"}], ")"}], 
    FractionBox[
     RowBox[{"Cos", "[", "x", "]"}], 
     "x"]}]}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.73153421631081*^9, 3.731534218847816*^9}, {
  3.731534272032099*^9, 3.731534545098504*^9}},
 ExpressionUUID -> "8223dd7d-7038-4e35-b15d-327c2db59346"]
}, Closed]],

Cell[CellGroupData[{

Cell[" Create tables of k and q points", "Subsection",
 CellChangeTimes->{{3.731703387773542*^9, 3.731703390788002*^9}, {
  3.7317034667810373`*^9, 3.7317034777446623`*^9}, {3.744469149023135*^9, 
  3.744469152883708*^9}, {3.7444708602838383`*^9, 3.744470865293599*^9}},
 ExpressionUUID -> "1417643a-1bc4-4c85-8ad2-b84f3ee03d36"],

Cell[TextData[{
 "kT is used in all q functions except in ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Chi]", "L"], TraditionalForm]],ExpressionUUID->
  "228a2a22-2d2e-4b79-8313-91c9450a29b4"],
 " (linear correlation function)"
}], "Text",
 CellChangeTimes->{{3.7317035021177683`*^9, 3.731703529206036*^9}, {
  3.744037357251812*^9, 3.74403737120758*^9}, {3.744453025518811*^9, 
  3.7444530304689503`*^9}},ExpressionUUID->"39cd8834-e8ea-4a65-9b03-\
e819181486d6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Nkpoints", "=", "1200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"kmin", "=", "0.00001"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"kmax", "=", "20"}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kmax", "=", "300"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dk", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Log10", "[", "kmax", "]"}], "-", 
      RowBox[{"Log10", "[", "kmin", "]"}]}], ")"}], "/", 
    RowBox[{"(", "Nkpoints", ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kT", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     SuperscriptBox["10", 
      RowBox[{
       RowBox[{"Log10", "[", "kmin", "]"}], "+", 
       RowBox[{"ii", "*", "dk"}]}]], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "0", ",", "Nkpoints"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sizekT", "=", 
   RowBox[{
    RowBox[{"Dimensions", "[", "kT", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<kT2 : sizekT=\>\"", ",", "sizekT", ",", "\"\<, kmin=\>\"", ",", 
   RowBox[{"Min", "[", "kT", "]"}], ",", "\"\<, k2max=\>\"", ",", 
   RowBox[{"Max", "[", "kT", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.731534863442751*^9, 3.731534897779778*^9}, {
   3.731535107842719*^9, 3.7315351079728937`*^9}, {3.731535520401441*^9, 
   3.731535527685329*^9}, {3.731535621372406*^9, 3.731535633004611*^9}, {
   3.7315761299891567`*^9, 3.731576190863078*^9}, {3.73192705846504*^9, 
   3.731927062622786*^9}, {3.7319274510610313`*^9, 3.731927627967805*^9}, {
   3.731927823077669*^9, 3.7319278279745827`*^9}, {3.732021742977648*^9, 
   3.7320217590460043`*^9}, {3.732021993556409*^9, 3.732022007238514*^9}, {
   3.732022283729018*^9, 3.7320222838280907`*^9}, 3.7320227888572063`*^9, {
   3.732031865499926*^9, 3.732031870642115*^9}, {3.732272714632001*^9, 
   3.732272734156783*^9}, 3.7440206790100718`*^9},
 ExpressionUUID -> "18ece467-e3ba-4f7e-b5ee-53d032610d46"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"kT2 : sizekT=\"\>", "\[InvisibleSpace]", "1201", 
   "\[InvisibleSpace]", "\<\", kmin=\"\>", "\[InvisibleSpace]", "0.00001`", 
   "\[InvisibleSpace]", "\<\", k2max=\"\>", "\[InvisibleSpace]", 
   "300.00000000000074`"}],
  SequenceForm[
  "kT2 : sizekT=", 1201, ", kmin=", 0.00001, ", k2max=", 300.00000000000074`],
  Editable->False]], "Print",
 CellChangeTimes->{3.744462723794423*^9, 3.744468308851663*^9, 
  3.744468455077286*^9, 3.7444813493053083`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"qmin", "=", "0.0001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qmax", "=", 
   RowBox[{"Min", "[", 
    RowBox[{"300", ",", 
     RowBox[{"1", "/", "kminQR"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nqpoints", "=", "1200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Log10", "[", "qmax", "]"}], "-", 
      RowBox[{"Log10", "[", "qmin", "]"}]}], ")"}], "/", 
    RowBox[{"(", "Nqpoints", ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qT", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     SuperscriptBox["10", 
      RowBox[{
       RowBox[{"Log10", "[", "qmin", "]"}], "+", 
       RowBox[{"ii", "*", "d"}]}]], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "0", ",", "Nqpoints"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sizeqT", "=", 
   RowBox[{
    RowBox[{"Dimensions", "[", "qT", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<qT : sizeqT=\>\"", ",", "sizeqT", ",", "\"\<, qmin=\>\"", ",", 
   RowBox[{"Min", "[", "qT", "]"}], ",", "\"\<, qmax=\>\"", ",", 
   RowBox[{"Max", "[", "qT", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.731534863442751*^9, 3.731534897779778*^9}, {
   3.731535107842719*^9, 3.7315351079728937`*^9}, {3.731535520401441*^9, 
   3.731535527685329*^9}, {3.731535621372406*^9, 3.731535633004611*^9}, {
   3.7315761299891567`*^9, 3.731576190863078*^9}, {3.73192705846504*^9, 
   3.731927062622786*^9}, {3.7319274510610313`*^9, 3.731927627967805*^9}, {
   3.731927823077669*^9, 3.7319278279745827`*^9}, {3.732021742977648*^9, 
   3.7320217590460043`*^9}, {3.732021993556409*^9, 3.732022007238514*^9}, {
   3.732022283729018*^9, 3.7320222838280907`*^9}, 3.7320227888572063`*^9, {
   3.732031865499926*^9, 3.732031870642115*^9}, {3.732272714632001*^9, 
   3.732272734156783*^9}, {3.7440206790100718`*^9, 3.744020680419265*^9}},
 ExpressionUUID -> "43456817-722b-49a6-a221-c69c1d8ee289"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"qT : sizeqT=\"\>", "\[InvisibleSpace]", "1201", 
   "\[InvisibleSpace]", "\<\", qmin=\"\>", "\[InvisibleSpace]", "0.0001`", 
   "\[InvisibleSpace]", "\<\", qmax=\"\>", "\[InvisibleSpace]", 
   "300.00000000000074`"}],
  SequenceForm[
  "qT : sizeqT=", 1201, ", qmin=", 0.0001, ", qmax=", 300.00000000000074`],
  Editable->False]], "Print",
 CellChangeTimes->{3.7444627238129272`*^9, 3.744468308862381*^9, 
  3.744468455089674*^9, 3.744481349318006*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox["q", TraditionalForm]],
  ExpressionUUID -> "42019721-758e-4fa9-a844-e3aa4e501cbf"],
 " functions (except linear correlation function and its derivatives)"
}], "Subsection",
 CellChangeTimes->{{3.731927386527287*^9, 3.7319274000845947`*^9}, {
  3.744037439343425*^9, 3.744037471683899*^9}, {3.744467750542161*^9, 
  3.744467757343707*^9}, {3.744469939296172*^9, 3.744469948874527*^9}, {
  3.744470850397292*^9, 3.7444708541341257`*^9}},
 ExpressionUUID -> "202840c4-8c5f-4abe-882e-890881e64074"],

Cell[CellGroupData[{

Cell["Define kernels", "Subsubsection",
 CellChangeTimes->{{3.73192873206299*^9, 
  3.731928747346799*^9}},ExpressionUUID->"19d61210-c723-4701-8220-\
4fd5b4547e58"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tildeV", "[", "k_", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{"3.", "/", "35."}], ")"}]}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"QI", "[", "k", "]"}], "-", 
     RowBox[{"3.", 
      RowBox[{"Q2", "[", "k", "]"}]}], "+", 
     RowBox[{"2.", " ", 
      RowBox[{"RI", "[", "k", "]"}]}], "-", 
     RowBox[{"6.", 
      RowBox[{"R2", "[", "k", "]"}]}]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tildeT", "[", "k_", "]"}], ":=", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{"9.", "/", "14."}], ")"}]}], "  ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"QI", "[", "k", "]"}], "+", 
     RowBox[{"2.", 
      RowBox[{"Q2", "[", "k", "]"}]}], "+", 
     RowBox[{"2.", " ", 
      RowBox[{"RI", "[", "k", "]"}]}], "+", 
     RowBox[{"4.", 
      RowBox[{"R2", "[", "k", "]"}]}]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xL", "[", 
   RowBox[{"k_", ",", "q_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"PSL", "[", "k", "]"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"1.", "/", "3."}], "-", 
     FractionBox[
      RowBox[{"j1", "[", 
       RowBox[{"k", " ", "q"}], "]"}], 
      RowBox[{"k", " ", "q"}]]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xloop", "[", 
   RowBox[{"k_", ",", "q_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"9.", "/", "98."}], 
      RowBox[{"Q1", "[", "k", "]"}]}], "+", 
     RowBox[{
      RowBox[{"10.", "/", "21."}], " ", 
      RowBox[{"R1", "[", "k", "]"}]}]}], ")"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"1.", "/", "3."}], "-", 
     FractionBox[
      RowBox[{"j1", "[", 
       RowBox[{"k", " ", "q"}], "]"}], 
      RowBox[{"k", " ", "q"}]]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yL", "[", 
   RowBox[{"k_", ",", "q_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"PSL", "[", "k", "]"}], " ", 
   RowBox[{"j2", "[", 
    RowBox[{"k", " ", "q"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yloop", "[", 
   RowBox[{"k_", ",", "q_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"9.", "/", "98."}], 
      RowBox[{"Q1", "[", "k", "]"}]}], "+", 
     RowBox[{
      RowBox[{"10.", "/", "21."}], " ", 
      RowBox[{"R1", "[", "k", "]"}]}]}], ")"}], 
   RowBox[{"j2", "[", 
    RowBox[{"k", " ", "q"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x10", "[", 
   RowBox[{"k_", ",", "q_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"1.", "/", "14."}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2.", 
      RowBox[{"RI", "[", "k", "]"}]}], "-", 
     RowBox[{"2.", 
      RowBox[{"R2", "[", "k", "]"}]}], "+", 
     RowBox[{"3.", 
      RowBox[{"RI", "[", "k", "]"}], " ", 
      RowBox[{"j0", "[", 
       RowBox[{"k", " ", "q"}], "]"}]}], "-", 
     RowBox[{"3", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"RI", "[", "k", "]"}], "+", 
        RowBox[{"2.", 
         RowBox[{"R2", "[", "k", "]"}]}], "+", 
        RowBox[{"2.", 
         RowBox[{"R1plus2", "[", "k", "]"}]}], "+", 
        RowBox[{"2.", 
         RowBox[{"Q5", "[", "k", "]"}]}]}], ")"}], 
      FractionBox[
       RowBox[{"j1", "[", 
        RowBox[{"k", " ", "q"}], "]"}], 
       RowBox[{"k", " ", "q"}]]}]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y10", "[", 
   RowBox[{"k_", ",", "q_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "3."}], "/", "14."}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"RI", "[", "k", "]"}], "+", 
     RowBox[{"2.", 
      RowBox[{"R2", "[", "k", "]"}]}], "+", 
     RowBox[{"2.", 
      RowBox[{"R1plus2", "[", "k", "]"}]}], "+", 
     RowBox[{"2.", 
      RowBox[{"Q5", "[", "k", "]"}]}]}], ")"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"j0", "[", 
      RowBox[{"k", " ", "q"}], "]"}], "-", 
     RowBox[{"3", 
      FractionBox[
       RowBox[{"j1", "[", 
        RowBox[{"k", " ", "q"}], "]"}], 
       RowBox[{"k", " ", "q"}]]}]}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.731701163610958*^9, 3.731701164333043*^9}, {
  3.731927899666473*^9, 3.73192791585*^9}, {3.731928267798871*^9, 
  3.731928322592428*^9}},
 ExpressionUUID -> "121bd9e6-a3e0-407d-ab5d-999276497e06"]
}, Closed]],

Cell[CellGroupData[{

Cell["Integrate:", "Subsubsection",
 CellChangeTimes->{{3.731928765531499*^9, 
  3.731928774678957*^9}},ExpressionUUID->"53f32edc-f513-4dfc-aba8-\
a62a4de16fbd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"U10LT", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"U10loopT", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"U11T", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"U20T", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XLT", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XloopT", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YLT", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YloopT", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"X10T", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Y10T", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"VT", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TT", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"kmin", "=", 
    RowBox[{"kT", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"ta", "=", 
        RowBox[{"AbsoluteTime", "[", "]"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"qi", "=", 
        RowBox[{"qT", "[", 
         RowBox[{"[", "qoutin", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"U10Lp", "=", "0"}], "  ", ";", 
       RowBox[{"U10loopp", "=", "0"}], "  ", ";", 
       RowBox[{"U11p", "=", "0"}], "  ", ";", 
       RowBox[{"U20p", "=", "0"}], "  ", ";", "\[IndentingNewLine]", 
       RowBox[{"U10LA", "=", 
        RowBox[{
         RowBox[{"-", " ", "kmin"}], "*", 
         RowBox[{"(", 
          RowBox[{"PSL", "[", "kmin", "]"}], ")"}], 
         RowBox[{"j1", "[", 
          RowBox[{"kmin", " ", "qi"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"U10loopA", "=", 
        RowBox[{
         RowBox[{"-", " ", "kmin"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"5.", "/", "21."}], 
           RowBox[{"R1", "[", "kmin", "]"}]}], ")"}], 
         RowBox[{"j1", "[", 
          RowBox[{"kmin", " ", "qi"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"U11A", "=", 
        RowBox[{
         RowBox[{"-", " ", "kmin"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6.", "/", "7."}], 
           RowBox[{"R1plus2", "[", "kmin", "]"}]}], ")"}], 
         RowBox[{"j1", "[", 
          RowBox[{"kmin", " ", "qi"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"U20A", "=", 
        RowBox[{
         RowBox[{"-", " ", "kmin"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"3.", "/", "7."}], 
           RowBox[{"Q8", "[", "kmin", "]"}]}], ")"}], 
         RowBox[{"j1", "[", 
          RowBox[{"kmin", " ", "qi"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"XLp", "=", "0"}], "  ", ";", 
       RowBox[{"Xloopp", "=", "0"}], " ", ";", 
       RowBox[{"YLp", "=", "0"}], "  ", ";", 
       RowBox[{"Yloopp", "=", "0"}], "  ", ";", 
       RowBox[{"X10p", "=", "0"}], "  ", ";", 
       RowBox[{"Y10p", "=", "0"}], "  ", ";", "\[IndentingNewLine]", 
       RowBox[{"XLA", "=", 
        RowBox[{"xL", "[", 
         RowBox[{"kmin", ",", "qi"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"XloopA", "=", 
        RowBox[{"xloop", "[", 
         RowBox[{"kmin", ",", "qi"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"YLA", "=", 
        RowBox[{"yL", "[", 
         RowBox[{"kmin", ",", "qi"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"YloopA", "=", 
        RowBox[{"yloop", "[", 
         RowBox[{"kmin", ",", "qi"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"X10A", "=", 
        RowBox[{"x10", "[", 
         RowBox[{"kmin", ",", "qi"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Y10A", "=", 
        RowBox[{"y10", "[", 
         RowBox[{"kmin", ",", "qi"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"preVp", "=", "0"}], "  ", ";", 
       RowBox[{"Tp", "=", "0"}], "  ", ";", "\[IndentingNewLine]", 
       RowBox[{"preVA", "=", 
        RowBox[{
         RowBox[{"tildeV", "[", "kmin", "]"}], 
         RowBox[{
          RowBox[{"j1", "[", 
           RowBox[{"kmin", " ", "qi"}], "]"}], "/", "kmin"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"TA", "=", " ", 
        RowBox[{
         RowBox[{"tildeT", "[", "kmin", "]"}], 
         RowBox[{
          RowBox[{"j3", "[", 
           RowBox[{"kmin", " ", "qi"}], "]"}], "/", "kmin"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"kk", "=", 
           RowBox[{"kT", "[", 
            RowBox[{"[", "kii", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"deltak", "=", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"kT", "[", 
              RowBox[{"[", "kii", "]"}], "]"}], "-", 
             RowBox[{"kT", "[", 
              RowBox[{"[", 
               RowBox[{"kii", "-", "1"}], "]"}], "]"}]}], ")"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"U10LB", "=", 
           RowBox[{
            RowBox[{"-", " ", "kk"}], "*", 
            RowBox[{"(", 
             RowBox[{"PSL", "[", "kk", "]"}], ")"}], 
            RowBox[{"j1", "[", 
             RowBox[{"kk", " ", "qi"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"U10loopB", "=", 
           RowBox[{
            RowBox[{"-", " ", "kk"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"5.", "/", "21."}], 
              RowBox[{"R1", "[", "kk", "]"}]}], ")"}], 
            RowBox[{"j1", "[", 
             RowBox[{"kk", " ", "qi"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"U11B", "=", 
           RowBox[{
            RowBox[{"-", " ", "kk"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"6.", "/", "7."}], 
              RowBox[{"R1plus2", "[", "kk", "]"}]}], ")"}], 
            RowBox[{"j1", "[", 
             RowBox[{"kk", " ", "qi"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"U20B", "=", 
           RowBox[{
            RowBox[{"-", " ", "kk"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"3.", "/", "7."}], 
              RowBox[{"Q8", "[", "kk", "]"}]}], ")"}], 
            RowBox[{"j1", "[", 
             RowBox[{"kk", " ", "qi"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"U10Lp", "=", 
           RowBox[{"U10Lp", "+", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"U10LA", "+", "U10LB"}], ")"}], "/", "2"}], "*", 
             "deltak"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"U10LA", "=", "U10LB"}], ";", "\[IndentingNewLine]", 
          RowBox[{"U10loopp", "=", 
           RowBox[{"U10loopp", "+", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"U10loopA", "+", "U10loopB"}], ")"}], "/", "2"}], "*", 
             "deltak"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"U10loopA", "=", "U10loopB"}], ";", "\[IndentingNewLine]", 
          RowBox[{"U11p", "=", 
           RowBox[{"U11p", "+", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"U11A", "+", "U11B"}], ")"}], "/", "2"}], "*", 
             "deltak"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"U11A", "=", "U11B"}], ";", "\[IndentingNewLine]", 
          RowBox[{"U20p", "=", 
           RowBox[{"U20p", "+", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"U20A", "+", "U20B"}], ")"}], "/", "2"}], "*", 
             "deltak"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"U20A", "=", "U20B"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"XLB", "=", 
           RowBox[{"xL", "[", 
            RowBox[{"kk", ",", "qi"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"XloopB", "=", 
           RowBox[{"xloop", "[", 
            RowBox[{"kk", ",", "qi"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"YLB", "=", 
           RowBox[{"yL", "[", 
            RowBox[{"kk", ",", "qi"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"YloopB", "=", 
           RowBox[{"yloop", "[", 
            RowBox[{"kk", ",", "qi"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"X10B", "=", 
           RowBox[{"x10", "[", 
            RowBox[{"kk", ",", "qi"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Y10B", "=", 
           RowBox[{"y10", "[", 
            RowBox[{"kk", ",", "qi"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"XLp", "=", 
           RowBox[{"XLp", "+", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"XLA", "+", "XLB"}], ")"}], "/", "2"}], "*", 
             "deltak"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"XLA", "=", "XLB"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Xloopp", "=", 
           RowBox[{"Xloopp", "+", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"XloopA", "+", "XloopB"}], ")"}], "/", "2"}], "*", 
             "deltak"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"XloopA", "=", "XloopB"}], ";", "\[IndentingNewLine]", 
          RowBox[{"YLp", "=", 
           RowBox[{"YLp", "+", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"YLA", "+", "YLB"}], ")"}], "/", "2"}], "*", 
             "deltak"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"YLA", "=", "YLB"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Yloopp", "=", 
           RowBox[{"Yloopp", "+", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"YloopA", "+", "YloopB"}], ")"}], "/", "2"}], "*", 
             "deltak"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"YloopA", "=", "YloopB"}], ";", "\[IndentingNewLine]", 
          RowBox[{"X10p", "=", 
           RowBox[{"X10p", "+", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"X10A", "+", "X10B"}], ")"}], "/", "2"}], "*", 
             "deltak"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"X10A", "=", "X10B"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Y10p", "=", 
           RowBox[{"Y10p", "+", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Y10A", "+", "Y10B"}], ")"}], "/", "2"}], "*", 
             "deltak"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Y10A", "=", "Y10B"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"preVB", "=", 
           RowBox[{
            RowBox[{"tildeV", "[", "kk", "]"}], 
            RowBox[{
             RowBox[{"j1", "[", 
              RowBox[{"kk", " ", "qi"}], "]"}], "/", "kk"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"TB", "=", 
           RowBox[{
            RowBox[{"tildeT", "[", "kk", "]"}], 
            RowBox[{
             RowBox[{"j3", "[", 
              RowBox[{"kk", " ", "qi"}], "]"}], "/", "kk"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Tp", "=", 
           RowBox[{"Tp", "+", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"TA", "+", "TB"}], ")"}], "/", "2"}], "*", 
             "deltak"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"TA", "=", "TB"}], ";", "\[IndentingNewLine]", 
          RowBox[{"preVp", "=", 
           RowBox[{"preVp", "+", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"preVA", "+", "preVB"}], ")"}], "/", "2"}], "*", 
             "deltak"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"preVA", "=", "preVB"}], ";"}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"kii", ",", "2", ",", "sizekT"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"U10Lp", "=", 
        RowBox[{"U10Lp", "/", "twopi2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"U10loopp", "=", 
        RowBox[{"U10loopp", "/", "twopi2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"U11p", "=", 
        RowBox[{"U11p", "/", "twopi2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"U20p", "=", 
        RowBox[{"U20p", "/", "twopi2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"U10LT", "  ", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"U10LT", ",", "   ", 
          RowBox[{"{", 
           RowBox[{"qi", ",", "U10Lp"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"U10loopT", "  ", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"U10loopT", ",", "   ", 
          RowBox[{"{", 
           RowBox[{"qi", ",", "U10loopp"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"U11T", "  ", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"U11T", ",", "   ", 
          RowBox[{"{", 
           RowBox[{"qi", ",", "U11p"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"U20T", "  ", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"U20T", ",", "   ", 
          RowBox[{"{", 
           RowBox[{"qi", ",", "U20p"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"XLp", "=", 
        RowBox[{"XLp", "/", "pi2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"YLp", "=", 
        RowBox[{"YLp", "/", "pi2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Xloopp", "=", 
        RowBox[{"Xloopp", "/", "pi2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Yloopp", "=", 
        RowBox[{"Yloopp", "/", "pi2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"X10p", "=", 
        RowBox[{"X10p", "/", "pi2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Y10p", "=", 
        RowBox[{"Y10p", "/", "pi2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"XLT", "  ", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"XLT", ",", "   ", 
          RowBox[{"{", 
           RowBox[{"qi", ",", "XLp"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"XloopT", "  ", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"XloopT", ",", "   ", 
          RowBox[{"{", 
           RowBox[{"qi", ",", "Xloopp"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"YLT", "  ", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"YLT", ",", "   ", 
          RowBox[{"{", 
           RowBox[{"qi", ",", "YLp"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"YloopT", "  ", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"YloopT", ",", "   ", 
          RowBox[{"{", 
           RowBox[{"qi", ",", "Yloopp"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"X10T", "  ", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"X10T", ",", "   ", 
          RowBox[{"{", 
           RowBox[{"qi", ",", "X10p"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Y10T", "  ", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"Y10T", ",", "   ", 
          RowBox[{"{", 
           RowBox[{"qi", ",", "Y10p"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Vp", "=", 
        RowBox[{
         RowBox[{"preVp", "/", "pi2"}], "-", 
         RowBox[{
          RowBox[{"1", "/", "5."}], " ", 
          RowBox[{"Tp", "/", "pi2"}]}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Tp", "=", 
        RowBox[{"Tp", "/", "pi2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"qi", "<", "0.05"}], ",", 
         RowBox[{"Vp", "=", "0"}], ",", 
         RowBox[{"Vp", "=", "Vp"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"qi", "<", "0.05"}], ",", 
         RowBox[{"Tp", "=", "0"}], ",", 
         RowBox[{"Tp", "=", "Tp"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"VT", "  ", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"VT", ",", "   ", 
          RowBox[{"{", 
           RowBox[{"qi", ",", "Vp"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"TT", "  ", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"TT", ",", "   ", 
          RowBox[{"{", 
           RowBox[{"qi", ",", "Tp"}], "}"}]}], "]"}]}], ";"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{
         "qoutin", ",", "\"\<: q=\>\"", ",", "qi", ",", " ", 
          "\"\<:    U  = \>\"", ",", "U10p", ",", " ", "\"\<,     time= \>\"",
           ",", 
          RowBox[{
           RowBox[{"AbsoluteTime", "[", "]"}], "-", "ta"}]}], "]"}], ";"}], 
       "*)"}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"qoutin", ",", "1", ",", "sizeqT"}], "}"}]}], "]"}], "//", 
    "AbsoluteTiming"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7319279989146233`*^9, 3.731928104139935*^9}, {
   3.731928134293325*^9, 3.73192825076374*^9}, {3.73192833651369*^9, 
   3.7319283983731413`*^9}, {3.731928429823647*^9, 3.731928430204953*^9}, {
   3.73192846383047*^9, 3.73192867555795*^9}, 3.731928791386606*^9, {
   3.731929544254753*^9, 3.7319295459211073`*^9}, 3.731929727793606*^9, {
   3.744020925099435*^9, 3.744020938923373*^9}, {3.744021117559992*^9, 
   3.7440211196557426`*^9}, {3.7444677041555758`*^9, 
   3.7444677285245934`*^9}, {3.7444679475723248`*^9, 3.744468039435051*^9}, 
   3.744469376451172*^9, {3.744469737326007*^9, 3.744469826124918*^9}, {
   3.744470386199065*^9, 3.744470391181775*^9}},
 ExpressionUUID -> "3ee14f6e-1b8b-4633-84f9-c46dde5bf2e6"],

Cell[BoxData["0.00001`"], "Output",
 CellChangeTimes->{3.744462723871805*^9, 3.7444683088832912`*^9, 
  3.744468455117586*^9, 3.744469386341633*^9, 3.74446985827218*^9, 
  3.7444703919898987`*^9, 3.744481349354225*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "301.04599899999999479405232705175876617432`8.499232772945133", ",", 
   "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.744462723871805*^9, 3.7444683088832912`*^9, 
  3.744468455117586*^9, 3.744469386341633*^9, 3.74446985827218*^9, 
  3.7444703919898987`*^9, 3.744481650412744*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Vp"], "Input",
 CellChangeTimes->{{3.744469240948142*^9, 3.744469241198406*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.01088198601537016`"}]], "Output",
 CellChangeTimes->{3.7444692417289343`*^9, 3.7444816504871063`*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Linear Correlation Function and its derivatives", "Subsection",
 CellChangeTimes->{{3.7319300034030333`*^9, 3.731930027376251*^9}, {
   3.744037483447528*^9, 3.744037484561626*^9}, {3.744469144487576*^9, 
   3.7444691448295317`*^9}, 3.7444699297668037`*^9},
 ExpressionUUID -> "fd73ec98-19b5-4720-8249-a497db88a067"],

Cell["\<\
This is the Fourier Transform of PS. It should be computed with much more k \
points to avoid aliasing\
\>", "Text",
 CellChangeTimes->{{3.7319302155695953`*^9, 
  3.731930267973612*^9}},ExpressionUUID->"9a4dbb3f-90aa-4cc4-9475-\
e83258705b26"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Nkpoints2", "=", "12000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k2min", "=", "0.0001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k2max", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dk", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Log10", "[", "k2max", "]"}], "-", 
      RowBox[{"Log10", "[", "k2min", "]"}]}], ")"}], "/", 
    RowBox[{"(", "Nkpoints2", ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kT2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     SuperscriptBox["10", 
      RowBox[{
       RowBox[{"Log10", "[", "k2min", "]"}], "+", 
       RowBox[{"ii", "*", "dk"}]}]], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "0", ",", "Nkpoints2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Max", "[", "%", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Min", "[", "%%", "]"}], "\[IndentingNewLine]", 
 RowBox[{"sizekT2", "=", 
  RowBox[{
   RowBox[{"Dimensions", "[", "kT2", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.731930058591652*^9, 3.731930074420397*^9}},
 ExpressionUUID -> "8cb4c646-a762-4438-9a2e-dc264920319c"],

Cell[BoxData["20.000000000000004`"], "Output",
 CellChangeTimes->{3.7444630161568317`*^9, 3.744468729568728*^9, 
  3.744481650515201*^9}],

Cell[BoxData["0.0001`"], "Output",
 CellChangeTimes->{3.7444630161568317`*^9, 3.744468729568728*^9, 
  3.744481650516074*^9}],

Cell[BoxData["12001"], "Output",
 CellChangeTimes->{3.7444630161568317`*^9, 3.744468729568728*^9, 
  3.744481650516692*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xiLT", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LapxiLT", "=", 
    RowBox[{"{", "}"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Laplacian", " ", "of", " ", "xi_L"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nabla4xiLT", "=", 
    RowBox[{"{", "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"nabla4", " ", "xi_L"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"kmin", "=", 
  RowBox[{"kT2", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ta", "=", 
      RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"qi", "=", 
      RowBox[{"qT", "[", 
       RowBox[{"[", "qoutin", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xip", "=", "0"}], "  ", ";", "\[IndentingNewLine]", 
     RowBox[{"xiA", "=", " ", 
      RowBox[{
       RowBox[{"kmin", " ", "^", "2"}], 
       RowBox[{"PSL", "[", "kmin", "]"}], 
       RowBox[{"j0", "[", 
        RowBox[{"kmin", " ", "qi"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Lapxip", "=", "0"}], "  ", ";", "\[IndentingNewLine]", 
     RowBox[{"LapxiA", "=", " ", 
      RowBox[{
       RowBox[{"kmin", " ", "^", "4"}], 
       RowBox[{"PSL", "[", "kmin", "]"}], 
       RowBox[{"j0", "[", 
        RowBox[{"kmin", " ", "qi"}], "]"}], 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         RowBox[{
          RowBox[{"(", "kmin", ")"}], "^", "2"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nabla4xip", "=", "0"}], "  ", ";", "\[IndentingNewLine]", 
     RowBox[{"nabla4xiA", "=", " ", 
      RowBox[{
       RowBox[{"kmin", " ", "^", "6"}], 
       RowBox[{"PSL", "[", "kmin", "]"}], 
       RowBox[{"j0", "[", 
        RowBox[{"kmin", " ", "qi"}], "]"}], 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "*", "kmin"}], ")"}], "^", "2"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"kk", "=", 
         RowBox[{"kT2", "[", 
          RowBox[{"[", "kii", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"xiB", "=", " ", 
         RowBox[{
          RowBox[{"kk", " ", "^", "2"}], 
          RowBox[{"PSL", "[", "kk", "]"}], 
          RowBox[{"j0", "[", 
           RowBox[{"kk", " ", "qi"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"LapxiB", "=", " ", 
         RowBox[{
          RowBox[{"kk", "^", "2"}], "*", "xiB", " ", "*", " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            RowBox[{
             RowBox[{"(", "kk", " ", ")"}], "^", "2"}]}], "]"}]}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"with", " ", "antialising", " ", "exponential"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"nabla4xiB", "=", " ", 
         RowBox[{
          RowBox[{"kk", "^", "4"}], "*", "xiB", " ", "*", " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "*", "kk"}], " ", ")"}], "^", "2"}]}], "]"}]}]}], 
        ";", 
        RowBox[{"(*", " ", 
         RowBox[{"with", " ", "antialising", " ", "exponential"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"deltak", "=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"kT2", "[", 
            RowBox[{"[", "kii", "]"}], "]"}], "-", 
           RowBox[{"kT2", "[", 
            RowBox[{"[", 
             RowBox[{"kii", "-", "1"}], "]"}], "]"}]}], ")"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"xip", "=", 
         RowBox[{"xip", "+", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"xiA", "+", "xiB"}], ")"}], "/", "2"}], "*", 
           "deltak"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"xiA", "=", "xiB"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Lapxip", "=", 
         RowBox[{"Lapxip", "+", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"LapxiA", "+", "LapxiB"}], ")"}], "/", "2"}], "*", 
           "deltak"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"LapxiA", "=", "LapxiB"}], ";", "\[IndentingNewLine]", 
        RowBox[{"nabla4xip", "=", 
         RowBox[{"nabla4xip", "+", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"nabla4xiA", "+", "nabla4xiB"}], ")"}], "/", "2"}], "*", 
           "deltak"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"nabla4xiA", "=", "nabla4xiB"}], ";"}], "\[IndentingNewLine]",
        ",", 
       RowBox[{"{", 
        RowBox[{"kii", ",", "2", ",", "sizekT2"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xip", "=", 
      RowBox[{"xip", "/", "twopi2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Lapxip", "=", 
      RowBox[{
       RowBox[{"-", " ", "Lapxip"}], "/", "twopi2"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nabla4xip", "=", 
      RowBox[{"nabla4xip", "/", "twopi2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xiLT", "  ", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"xiLT", ",", "   ", 
        RowBox[{"{", 
         RowBox[{"qi", ",", "xip"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"LapxiLT", "  ", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"LapxiLT", ",", "   ", 
        RowBox[{"{", 
         RowBox[{"qi", ",", "Lapxip"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nabla4xiLT", "  ", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"nabla4xiLT", ",", "   ", 
        RowBox[{"{", 
         RowBox[{"qi", ",", "nabla4xip"}], "}"}]}], "]"}]}], ";"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"qoutin", ",", "1", ",", "sizeqT"}], "}"}]}], "]"}], "//", 
  "AbsoluteTiming"}]}], "Input",
 CellChangeTimes->{{3.7319301466561213`*^9, 3.731930189791163*^9}, {
   3.735229513902605*^9, 3.7352295161786337`*^9}, {3.7352295483739243`*^9, 
   3.735229650204205*^9}, {3.738399391584723*^9, 3.738399432708582*^9}, 
   3.742819144309723*^9, 3.7440218716943207`*^9, {3.744466471282648*^9, 
   3.7444665482555532`*^9}, {3.744466626764433*^9, 3.744466761298883*^9}, {
   3.7444671259891644`*^9, 3.744467155188302*^9}},
 ExpressionUUID -> "31c55317-6dcb-42ba-bb54-1767d775f0bf"],

Cell[BoxData["0.0001`"], "Output",
 CellChangeTimes->{3.74446301618076*^9, 3.744466780593371*^9, 
  3.744467160514702*^9, 3.744468729583164*^9, 3.744481650531324*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "274.46403700000001890657586045563220977783`8.45908536022364", ",", 
   "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.74446301618076*^9, 3.744466780593371*^9, 
  3.744467160514702*^9, 3.744468729583164*^9, 3.744481924999242*^9}]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.731930127253392*^9, 3.731930170398913*^9}, {
   3.735229668586486*^9, 3.735229692204973*^9}, {3.73839943788476*^9, 
   3.738399440878607*^9}, 3.738399509057129*^9, {3.742819152965506*^9, 
   3.742819161305848*^9}, {3.744467058217449*^9, 3.7444670880134773`*^9}, {
   3.744467522386451*^9, 3.744467591350197*^9}, {3.744467868094944*^9, 
   3.7444678773040133`*^9}, 3.74446791170886*^9},
 ExpressionUUID -> "e751588c-fb81-46b2-9720-cf8384d4ea40"]
}, Closed]],

Cell[CellGroupData[{

Cell["Export files", "Subsection",
 CellChangeTimes->{{3.731929994437415*^9, 3.731929995371888*^9}, {
  3.744036943088751*^9, 
  3.7440369441591177`*^9}},ExpressionUUID->"a6b179f1-fc03-43ab-a0d2-\
8cc173fef5e1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"qFunctionsT", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"XLT", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"XLT", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"YLT", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"XloopT", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"YloopT", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"VT", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"TT", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"X10T", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"Y10T", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"U10LT", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"U10loopT", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"U11T", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"U20T", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"xiLT", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"LapxiLT", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"nabla4xiLT", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}]}], " ", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "1", ",", 
       RowBox[{
        RowBox[{"Dimensions", "[", "XLT", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "%", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"OUTFILE", ",", "qFunctionsT"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7319296733763847`*^9, 3.7319296738886833`*^9}, 
   3.731930289171385*^9, {3.731932941036771*^9, 3.731932946584622*^9}, 
   3.731933305113331*^9, {3.732031992661022*^9, 3.732032017799909*^9}, {
   3.732273456953*^9, 3.7322734792875223`*^9}, 3.738399521468976*^9, {
   3.7428106038927383`*^9, 3.742810604114196*^9}, 3.742814336441926*^9, {
   3.742823430630231*^9, 3.742823437172027*^9}, {3.7440371017663383`*^9, 
   3.744037121605955*^9}, {3.744452453945314*^9, 3.744452461684424*^9}, {
   3.744468156064022*^9, 3.744468160735849*^9}, {3.7444684157991343`*^9, 
   3.7444684204222527`*^9}, {3.744469728966367*^9, 3.744469729624956*^9}, 
   3.744470727408719*^9, {3.7446486432611732`*^9, 3.744648650386142*^9}},
 ExpressionUUID -> "f032b466-ffcf-49d1-aca8-c2d5a09c82b0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1201", ",", "16"}], "}"}]], "Output",
 CellChangeTimes->{3.744463223231838*^9, 3.74446898619487*^9, 
  3.7444697180535793`*^9, 3.7444707302957067`*^9, 3.744481925113556*^9}],

Cell[BoxData["\<\"qfunctionsT.dat\"\>"], "Output",
 CellChangeTimes->{3.744463223231838*^9, 3.74446898619487*^9, 
  3.7444697180535793`*^9, 3.7444707302957067`*^9, 3.7444819254016*^9}]
}, Closed]]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["PLOTS", "Title",
 CellChangeTimes->{{3.744467842323317*^9, 3.744467844581039*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xiL", "=", 
   RowBox[{"Interpolation", "[", "xiLT", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LapxiL", "=", 
   RowBox[{"Interpolation", "[", "LapxiLT", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nabla4xiL", "=", 
   RowBox[{"Interpolation", "[", "nabla4xiLT", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"r", "^", "2"}], 
      RowBox[{"xiL", "[", "r", "]"}]}], ",", 
     RowBox[{"100", 
      RowBox[{"r", "^", "2"}], 
      RowBox[{"LapxiL", "[", "r", "]"}]}], ",", 
     RowBox[{"1000", 
      RowBox[{"r", "^", "2"}], 
      RowBox[{"nabla4xiL", "[", "r", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "50", ",", "130"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<q^2 xiL \>\"", ",", "\"\<100 q^2 Laplacian xiL\>\"", ",", 
      "\"\<1000 * q^2 nabla4 xiL\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.744469060458036*^9, 3.744469074625444*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
3kO1NNFrklX/AyZGH5I=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
dPKfH8JHOWiVvJS2qhHWNy/v2DvG4cOQyheJGoSsDJJtf8/8Cd888/xzgrjj
zPbeGaZ3PurVCW1Cooff+3gFHtnDWZ1uOoRa37ePJ+bxCI58UF6uRyg7rT5+
Vo0Hqt7mfa1PUGhu3vtQk8cXI9oHF4oII04Pa19q8Zj4q39AvBHBXs9jeYse
j6x9TxVhSvgqfzbai+MRVzs9Mm5G2KV7Ybp8GY+gCcMnpeaEC3LlsDEzHqYJ
JFdfQfDLlXrbWfJQazj4ww0rwr+/UdGzteLx9kNR2r5VhHfPyF20isf1pF+C
H0sIwxmBO05LeJQ0KXtm2hDabycfs7PhkTltJnGyJWzYvLLq2loeseu9xG/X
ETzKhH7zdTwCUyJUiu0J6i90N6bY8XC8fnQ8QEq4fSBUvcmeBz9b2afqSNgR
E7ml34GHqkt72zUnwlKHyBUjUh5vDo7WRbsQMrsudAyu59F9c+EZzpUwcT0n
6JYjj6uK1pndboSNs+kjmU48itz8EjLcCfeX6cgdnXlkpMYJUk/CoVynhjbG
0a15W0a9COkXhi+au/Dwn395XdEmgrFq2eZYxlLPR9y2LQSTeLdb5xibZExq
fOZNCI0o3dzM+LM2/akrPixv1YcGdxiPqEp/idpKmLd8UNbIuHPT1x3GXxJq
vLVkeYyvZKY0PdzG8mu86B3MuPBeQUlaAMFHMA/UYJym0XzCbjvh6Jzy5Qp2
X6T3wIHXQQRv7d+K1jD2y1YMLwgmLHmSs/U8e5/9A95v6w7C4tDuaRXGxlru
jvOIMJ1R9sif+aHsJzNvCCH0Ty82zGZ+vc5NX7QnlKDlvHGujvn5c+f5T4a7
CDPVqVfvML8bdH4a7thNmM0yS7vD8jicr968NoKQ+vK0STbLL+KRVeWrPQQz
/7qwQFsePkt88v8VRejQa8zVYHkb/pATpRBD+G+z5LsNrB9Kz2oC62IJoyYt
va2reQyLulzD4wj7uhPerGV9qv9RV789gWC6uGDHIOufW0EfF5ZIKPJ2z3G2
4PGgoHTFVBJB8e50RpY5u7/Q1sU0hXBJ6pMyy/rMnQ0ITzlMuPJSnOki5iE/
axS7KI1Qp+b4xyoR69e5X5PLvyX4B04c09Zn/S9OON59hLC6ZL95jQ7bX2l+
vdUJQql+lFoI25u4bOeNWzmE+AWBvqMqPCrKzNqCTrI8XY65x87n0Xr+cm9a
PkE03vDJn+33Y0WPUt9pwtOejoFCtvcIua7f8XLC/r/PPpP3s/9A3he8rJLp
RWqU9PZySK0u3d1URaiva5yce8Kh8JJt0q9ygmuOtHB1F4ee2oAzTpcJuJT7
7cq7HNwa80dH/0Pw1Yy9f+UiB/FN3UyfXsLr/pNjjQkcrA1kp54/J1y/Fl69
JI6DR1x9WWQ/IS7GwjEumkO06baW9BeEN8UBnP5fONw8kjNz4xXBvSqm3iKI
g8xPPWb1O8LfhOI/khw4yAcV/LU0QyAkJtm9+9MErvNHjDqdQ7B+0u1SWZIJ
hnqHWn6qDAFpf+/qW2GMNR13jraqCNCTtFd/v1eMFwonE0tVBShWWn0TFCZG
js1OWfoCAboa4/f1g8QYPTWBjeoCtq26y5/aIEb5LpOpewsFSK2GDuSJxDD6
Mzm8S1eAzHqN57E2Q6iartwwuEzAjxfn2pstDNEYOGXdYirAOUdtWtnEEOFH
W4xLzAQMeC6P3qRniJY3X03LzAXUGNimP1AyxD+a0mt+sxRQMNn++71eEd75
DCwdkwhsz9J5ocdFKD5Updm5RsB7nccGGakifFm//2OtjYD0jzVPK5JFqDbQ
fBxvK+DVfeuqIZkIkUMO2VP2AiQ+jb9bOougv2R+ylMHAUfyLIsla0W4u+nn
PVelAg4dNJLbWIpgWh3ukeIoYM9ur0UWeiJ0vZDY7HQSkLXERlesIcLhxZ9M
nJ2Z/oBK8wIlEay92hYudREQgLihsUkD/C85b2aO8akgjeDuUQP8H+sXNPc=

        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
uDEZiqLR4b+sv4eGSOA1tsF8Bx6DCv4ztL79kQQZX/Ny/d7HoUDi/JzwDAnC
+QNvvI95iPTyPybpzpHg+qdp91LaI/RVpOuA7QIJzDbLPApXeoyo73LiHyyT
gLU/P8787FMkqlMsE7WODP5Liyc6KRlovOocvlmYDHxExx9RA7nI5PunuEwR
Mvz0Wa8d8C8PJcg5nNEXI8Nvq+4DVPECZBVIEGVIkGHSVIq20awQlR1SO5ks
Q4Zd47zz+/KKUVj3+/XK28jg818MqaO6AmlEPs7p1SRDtHDF1IMLL1HzkeOU
cC0y8Ng8/bxTlX3f4qNJ33eRARZfil2OrkLheSM7KvTIIHvF/eWB87Xo9p0h
GytzMjRx/7PUlKhDmocf/v53kAx7k2ZGXC7UoVYuh0dFh8nw97933p6tdYjf
b3ByiyUZph9/X2nxr0d3XAd8xyhkuOLQm1n+oQFFHHz32Oc4GYrUrp3Ijm5C
WpwPzDVPkCGbYyWFc7wJtVfbTQ07kWH1/ul/GXrNSHBPn67ZaTIoLYV2Vww0
o7tKvY0C58mgviIzqyTRinaOxrlh7mT4HjWcyevcijoTbTddvMDWJ+S35lJe
KxISeWv/7hIZUlLPe48caENR/95MP/Ujg+6ge38Fox1pV92Ltr1GhjQnk6LB
pHbU5U3du/46GWK+/jHvHWxHwjPd188FksHA5OCuI/QOFD3cJaIfTgbvW9X9
HaadSDshumzqFhnehQhaHPPtRF02ZIfkO2Qg52+5mJffiUTaXqdzRpFhC+65
P1DyNbr3slO/PZ4Mg2J7ch8MvkaDe/aunHhABg/aTdOzXF1IseBh7VICGTg2
e4guSHShgkzXg8rJZDjW9D7d2KQL/VZ8veHlIzKEa2bW/yF3IXi0t936MRmS
w39xSTt3odexXDZ+qWToju2PCw7pQhKbzkgIp5PBtdjYpDW+Cx27/XogI4Pd
H/vWUveMLpTJo/do3zMy+JaNp18o6UIzAcmO3c/JkD4iX9JZ14X0/nKpuLwg
w+V7cCesqwv5+5z5/DebDBj96BBtpAs1/Hz94l4uu5/7zu0//aULCbjruWvk
k8FzQqCj82cXsp1K1qktIMOIu+/G6L9d6OHJdb9sitj+PxPi94KnG429P1Mx
Vcyub31KspxQN9J06Lp6o5QMYwdaF75t7kYX+/TQ5nL2foFsXgnZblRJecSV
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
XxrpoL1Kb/ErV8IV7kycf9REh1DDHOufqUo4M88ql9pCB9vztDbBu0p454Ks
Vk07HaRctz/RcVbCywJrt93rYc/j8w7f3XxK+Gy62pnDvez77w7Br3tOEdds
vvv8bx+7Xu8TTpsHFfEUoePqLoN0+OZ+fCIqSxEPffhPxfgjHYyZ9Rl25oo4
rRQUJmfY/h3dzs10UcAldLRPxs6y+YbsI4VZKOB9OfLP4ScdnJQ87Jx3KOD2
6Wu7Hv6iw39Oa2s24/I4K7Yakf/SYXuk7T6eWTncydPgeCWfPUzsvlzx5qsM
fmGHdspdFXsIt37xvclbEtfJkh/bp2YPnpfu2OzeLon/VNmkNqVuDz5vBkVV
3m/BvWRmcg9stwfdy1mdSQe34D4bc2p+69iDaHhdDaegBH59Sn3ECdlDgo7k
yMsgMfxOhryMPtMeaNmLt3JIAvjCh9LrTQ728KVv5GDOi404S4b4kX7UHsZP
vIzexbMR14q9knnF0R4anYtM2yv48M6Abu3K0/ZwZqnCLU9qPS7MCjq4/5I9
SA5cz37UxonHiX52PxBhD9iGbL5nU9PYoxt5/5Fq7aH5m7B8cfkqIh6MXODE
7WHumvdRlV3/0DL/OfWS/+yh5MLtz+ttOMDu/rZIyUZ7KEK8i9ItnLApN93+
Y5s9TJWWEm4UckPgYNKPiwP2wIgeuCpzmh9O7Q2Tvb/Ajp/ATLeUioL4yiny
kUV7kAjEJHr4xaAONw9aXrIHu6HlbchRDOSIXFPHVuzh2Fajj0r84vDOyb9E
nYsBWxuTCAuMzWyfX7J8uYkBH6tJj5K+bIEd08d9hzUZsKCCORkUycDNCxOt
nloM8PWe5a/4JQP9v9xk1u9kQL7ssmu3gSwEc3hjOjoMaHLDhV7XyMLg5gie
MH0G0IbV3Cfr5CAcKmJ0zNnrF8K2BLMUYLRx/6dXBxkAk7ekZ/0UYI9l/R7W
Yfa6BLqukqgA72md70ItGHB7bNJ44q0C6J0dlx0mM2Dfhi0ZtQRF+BQv/CL0
KAMu22cuRGsogYH0/RXp4wywpp6IczygBHefSFsVOjIg27hyef6oEhhlq80O
OTOAp/bs3Ml7ShCNG+vpuDHATjrfweW3EphMu9YNeTPg2pCakka5MsRdmBHz
vMKATyYKpS87lOHrr0uneP0YgHh0bTeOK0M8x40NOv7sfKbljJlNKvBtc7x1
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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {60., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{50, 130}, {-29.94377177565379, 22.657848453976744`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"q^2 xiL \"", "\"100 q^2 Laplacian xiL\"", 
       "\"1000 * q^2 nabla4 xiL\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7444690529979477`*^9, 3.744469075491288*^9}, 
   3.744481966627812*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"UL", "=", 
   RowBox[{"Interpolation", "[", "U10LT", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Uloop", "=", 
   RowBox[{"Interpolation", "[", "U10loopT", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U11", "=", 
   RowBox[{"Interpolation", "[", "U11T", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U20", "=", 
   RowBox[{"Interpolation", "[", "U20T", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"LogLinearPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"UL", "[", "q", "]"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"Uloop", "[", "q", "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"UL", "[", "q", "]"}]}], "-", 
      RowBox[{"Uloop", "[", "q", "]"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"U11", "[", "q", "]"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"U20", "[", "q", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0.0001", ",", "300"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<-UL\>\"", ",", "\"\<-Uloop\>\"", ",", "\"\<-U\>\"", ",", 
      "\"\<-U11\>\"", ",", "\"\<-U20\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.744469084287368*^9, 3.744469087062736*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
l3Sy2yhoSOqb2rFzofA/Nkr+3Q==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
+UUOxzdjIv2nYWk7AyvbGoeUvDn4f+dxGLo=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwV13c8ld8fAHB7j3txr829yF4tSTinFCWVJGW0KMq3pQglq5RRmQkhIntH
IdxjVlayM7KFrOztd35/3df79Tz3POd8Pp+zqNZ3TK4x0NHRbTDS0f3/N6/J
PTf3PymU/0fS71BhIciJMpezuCGF3jFknj3SVggyr+6JYbCTQq3pZ1Xs5wpB
ysq47xlrKZTG+itGRKUIxFLOXl48L4XGwpinRBKLgP9dJd79+lJI/dNJ1dKI
YmBD6LyJKFKIdkggPjemBFzuyhu8LiGFpo3rO/VpJeBi4svzRDEpRDl8z4Vx
oARYaOodthaUQk8aI1PmZUqB8eUsUSYeKbRwueVPflYp0M55WmuwTkX6XxPv
DX8vAwLGO+V/tFHR4+qTc3JBCDx4u6h2pIWKfI+X+B74gEDHaNG+L01UdEc+
deZGMQJRjw8ZJNdRkTHfk8+CIwhQ08/YepRTETXFe6H4QDlQZXmQqJZJRa+H
Lft0p8vBsZJiStBTKlKxvZl+4EYlSGP1kGfxpqI1Zsbqaa9KwHVGT93Ng4ou
pe4yLI+qBE3jdeD6QyrqiDy+r7q+EpgJ9l6Ed/H/AxRZT+yqAlfvbUfPWlIR
mhZ97MlYDdzlDwuf3k1FVsrS6fG0GjDhEbR7Tp2KpBw9bJK7aoBZR8+JUFUq
Sqgk72pYrAEqz5y82xSoqGH8Spqr8lfQM5T015xCRVUmfNoWb78CrXfsZdbc
VJSVNC9p5fENLJN+WDv+oSDfMJKz+5VaYH1L9DFphIL2iSpotnrWgsYquzef
Biko7scL5VNxtSDpPl39Si8F3Wz9damgrxaY/dy593ErBU18FWwyuFwH8l+E
sT4rx+3pm3tlXK8HdxktMt68paD3tlUppW8agfnQyazDkRTkROF3svrSCA5V
6uX8C6egva/vf5TpawSkJyr5x0MoKDyOYrBL7gcoZqAv2faloDDWk6IGRT8A
E0NKnd0DCuJOXrUqv9cEIuiWJvadpqCp8xcmWrJ/Aq/+icnhkxR0vKv8wH9V
P4E96psONqKg4d6rniK/fgIdz+9zfw0oaEAu1aScoRkMbkevvdOloAzdceXd
55qB8rYeB5syBVXONOYgphaANoMVOlkoiPytIPz0/VbAc+luqQkTBVkE6/23
42UrsEQnTzfQU5AjY0OLcHIr+MssOPd0VRLdcf7GdK27FZgROILNRyRR1B+9
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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwUV3k8lN8XHsyYMQyD7PuSLSkp+8w9lVJSFKm0KKSSiKIUJUmkEsquVFIh
WylFXER9KUvZ9+yyJfv+e39/vZ/nc9977/M859xzz1Wwd9t3kpNEIhlRSKT/
f7Orr2VlnVXEz5wtXbwzG1Bm7CFV2zOK2DbI/+n27w3ojePGBM5TijjR46zX
xoEG9Gp2MMjKXhHvt34W7SHfiB7L7z8+dZDA37bO+YQ3ojvn1wgYbFfE+cZ6
kcM+TciB2eiC5RXxhSvWRtYuLeh4c3bXaVlFnHZdX+Dm3RZ0LOneQUFpRbw9
62xyQ1oLstXfamIvpojHg2Sq/420IMvj6VJkfkV853n81JR7KzLODCg3XVDA
tP7WowdutKFVltpqVXUKOOSUokd1QQfyiptat+2XAuZYGiva1N+BGvo+6uVV
K2DzSRmjfmonivXdYvqyQgHD2HLQj/WdSCHVyul6kQLGxZJqtTc7kRa3V9K6
Nwo4+mF/X5/Wb7Qz/5P8gwAF3GqqMSEa24VSqNfVuP0V8Ns+t/PFWV2Iz2rr
ep/rCvg8buK5+18Xqh6sQKevKGDbhaMaV+a6kI1Y2zE4r4Df1KYfLbPtRo4e
K/F/Dyvg0nQZvs1KPeiamonEXh0FfPKVyHTb91705/oDnX/rFfD1fLmtJX29
yKahdXeElgLOVy2y+ErqQ2sDPf3r1BVwitMvA81Nfai1O3nokLwCruEcO3ju
SR8yfMJTYM9QwC3qfx+MePejGZEq+4v98li5Y0P8lOkgsj8n5SvSK4/5XIS6
F08Oosovp6Led8ljstNglWrAIEq+QPo+2yaP19ZkmQziQWRTo73Jt1YeDyfy
bZcz/oPe3X1IDSySx7cYca99DYbQeS7btKg4efw2JjqXvXcEHerek24SQ6z3
KXvziQsjaEvJ1szxSHmscY3qn/poBIncXPtuV7g8jjXl/v2heQR94uTIXwmS
x1j23vocp1FE5nxVccpLHq+cVA8+GziGoknTf/T2yuPikFfCAhN/0Y3OP8M9
e+Tx527ZkHLuceSMO0bDzOVxkk/1VLzkOGL5/fdvyFQe+3ZeEbi9ZRx1rcTP
P2HL4+MNH00uRIwjzZWtdJqmPE5YCHpeYvAP4aUw9UZueRw08laNHjOB+O3O
f95Hlsc3txRplmdNoMN4z94fHPLY2dbm9OvyCTREEfsXMCeHJ9lrlMoWJ5AN
kx52qFcOCxvkLfnYTyLN1X8rOT/L4YmPJnFcG6dQ4558s/0ucthw487YmL/T
6IKgt4fZKTnMObD/6APGDOKv3RSL7OVw1fWep6kaM2jroYxB9YNy+MBAjZPl
yRmU7vAsaHmrHC7xPz52oHUGBVwOKnspJYczul7rBNXMovXPrLfMl8viRlcL
t5KmedThoxC6rUwW7/Neo+owN4/uHxhteVAki2cPCVDVJBbQMF+Qp2quLG66
fHVY4dACenUp75X1C1mscT9GrKV5AcnvVhTIuC6L3e3u/Q7uXUTM2bEWh42y
OL3t6DkpiRVU+DNfLWOdLP5zTmXuA2sFub4J9pzXkMX1ZglXr9uvoO/2SgJh
CrJYqdBP80HaCgr6YbOlgF8Wu7n+6zymQALS88+vxAdlMGfGNbO8PBKM7w7x
/JEgg5+FkBoHODjh9Jo1fW+jZbBDV8eBTnFO6KRV2MRGyOArazk5p9ZxQmUJ
Xf9UsAzOrjl7yusYJ6QZ3JknecrgFaUlv7Z8TnBaHXx9o7kM5m0d+Xn0Ohc0
LwYGx81LYxt+1gU9aQrsbVaZvzEljTv/PvGS1aPAtw9lzqf/SuNWbcv7qvso
8MGD23xTnzQ+K7YvKTGIAg8HbvFX1UjjbXW/JHRmKLCnNiCC87U0dvm2aLrS
zA3Fqf4JZw5I4ymLnWvOF9BgY+yFtlP7pHF36IDpkTYaJAc5yjjtlsYc96c+
uC7SIOTk9gT7rdJ4IqpwF9WIB6zl6AmH10ljLxV1O75PPNAbHha/myqNj9+J
+hZaSAfalcQ47Q9SuEz/vsSvQT64cjqsZV22FN6+7pdlP4MBwzb+UlpvpHAS
9uVV28CAGh3HOI3nUtjujlHHuqsMiB1RjVMKlcL5tuLNxwT4Yc2JjFiRU1JY
xrv3+RkQgD07CmLmRKVwhZWdztFuJtTuKVzeLSSFB4MHD89PM+HwfuzwjCGF
e90Xx9/QBeG0ffHaXWQprDnj9u3gBkHw9ykrih+XxNcGLKsK/QUhJ7NyEH2X
xGOfqoQHVYVAWqLDIPCGJG7bUHv1cIAwPJPrfNzsI4l7zf12zcQKg7rKb651
lyVxx0I0TssSBl2d7h8NrpJYaqyOerJDGCx3959QPyKJ9SGTxm+8CgJujAV/
15XEPefq+GznV8HQ4EqT0LAEjrzGY54YIgqGE7/sOfsl8Mtj2V7NL0UhaPHl
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
M8PDNQTeeelnneVaBjbReKeeTPBTeaKt3K3EwMtB/r4v1rGB8+sDD09JBs7O
dn1TRejrGB3DVEEG3muMNJUJP/JFLQRiqQycofgo8JkOG6LZ6Uc1l/nwtmz/
zWaEn55OjLSCST6seuZ3qiTh9777LvOWQ3x40TJJS5iIh9b7ih3dv/mw0+Zi
fh0jNvC2a0R5NvJhFsXV25tFxJNyp5daxYd7HewyehEbvqwd1Ikt5cPGBcmf
vLYQ8fN9WV2QzYe3dMfd4tpBxO8Ft9ze13w44FXv+iUzIn4/Tp7rfsKH76yE
RojtIeIlrUyn3ePDsl678l5bE/7nJ27de4oPG5wY3iHnQPjfsxLWfZQPW5UW
lc0T/YAMn12npzUffqnsIDPsTPh9WMY3djMfXqOgSKJfIPxbiHnfLcWHX9Nj
a7kCCP+U5sheQnz4vzWUT3ZBhH+7DlrRePjwrp39X0vuEn7Fiv7VnObFu+2Z
LfGPCP2GEepe1bz4zb9H/kdfEvrt/12ifeXFBrfEHUpTCf3Be8tiP/Nil+mX
/CpEv/G0ScChMIUX3zpByfkvl8hH77vxtFu8uFbkVb0DUR9uJIdtqLnCi/em
2jWl/2DD6K/IbzHnefHDn3+pHTVs+E/r6aTGEV7cXbVqT28TG3SPJN+Z2MuL
aZOMhvdtbEgKTpXPN+XFdU297o6/CX97csx36/BibNPD2jXAhiHBvC4RdV6c
JaXh6zfEhoMIX26X5cV9hap3gkeJ8+ZSyv9yFS9W1l71zXGcDRtiy5Pc6LzY
IZzXlznJhidfqwz1Sbx4xfdB451pov+Zqq0mTdMxJV86+ecsG64oNjv9N0TH
60nkNX3zbOi36FgM+03H7c++HvyyyAZr355w2wY6PrZFk+SyzIbilEE1pR90
vD/vSF/LCtH/NY4WDBXTMS7hvShM9FPxlEnrd7l0bO0Ye1eQEwGPztwfn3Q6
fnnty486AnsdX/bblkTHW9vfZdtxIei+xyXGH0vHMGj7IZ3Alnm0N/WhdFy3
nmeumMCfBxhbn9yi43e88RLxBNYQFW46dZWOb5vuv2RI4Oit4m7r3elY8tpe
i8fE+hR3GcqcEx1XuHoNfSX4eDxWjCs6Qsdi4xoauSTifqxQ1b6zj47JySx/
N4L/7jnNr/t20HG15CWJMeI++KSy4agUm44dtTLn9Qj9qtZ6E906dLw9UM50
F+HPwxvGwWnqdCy6FBavQfjHmbFZzlOOjtXeOFs0TLHBrXV7DkuEjoeM/bda
TbChlcd8FzcvHaOzGnsS/7LBTG/v70oSHdu7TdvhETYohx9mHB/mwSX69c/8
+9kQVnj8uVoXD9a/Q76p3sOG5eGTBuMNPDjykvpYWicbGk3Pn/Qv4cHtlufW
WBP5dG8p4HNSLA/mjxHp8STycV7jjtW5Bzx4luT+eG8pG04fDB3cFMiDtx/S
oygWsWHL2xiRr+482DWvqfANkc/Tp9PPDe4g5k9eDqgizoND5FuubDYPvjdp
k/jmORuqS3Jjrmzkwb3GBcJxT9iQKltSyivPgydJA46ZUWw4XtsgozVDw/vM
1TZJBLOhROn6PpURGj66vmNv3S3ifF5QuS3bTcMTZtLVOf5sCC7+kSfaRMM/
rd5RPl9nw7Cg51/+Khoe8qjiHPFhg8UJ6dXUUhrWXJMtaXqFDdmZJYdWPtFw
96MUnx/E/ShCOnt/JpOGi996Lvl5suGyhVDJWDINe9vm9dsT9aHl8ceZ/nga
pnMecblIvCfYo8c1O8NpuO5feEGOG3GeWbQTjUE0/MFbZlSVuE/J9zIeVV+j
4W311RXlLmw41WpT/u0iDT/jDjjy+CwbytcsL2NnGhZYKcp7RtSjtVdf6Hw8
TsOZVR2/688Q9b7c/HSWDQ1P5UnfMSTwhMRk/GtzGn7Ixef2/TQbbM7E1Tzd
QsPR9WeMQwj8MXcLd6w+DZMe59R7Elia9scwXIuG2ziqaHcIfP1AmNsdZRr2
GS1YU0bgrmT9JH9JGs5NPDSsSqy/bbqj8QqThjsO7stLI/CrbbcZF7hpOPxn
+OZ9BD/eR1pbzi5SMdt07wERgr9rT52Xwz8qvtG1RnSCwDU6vqmHB6gYmXw0
GSD0bryp3GnVTsULbW1nx8+xIepnxSrzWiq2ldsuwUv4Na9wYadJORWnhu2O
0T7PhiJclL3xPRWvYPvvj4j+RJl5pl8zjYrdrxz6r4LwP8iOKb36GRVvitrY
tHyRqF/pHyxloqn4AFuFtcaLDXuWj90SuU/Fl95uKjMn4pm1m/sTI4CKjcwr
He0uE/U14c0o5QoVN1087mLnzYZLw9ZKy25UbBCf5raDyIdmo8UD0yepuCus
RkbsKhtYIc/vjh6mYkvjQzFfCZzYbFbUt5eKf3yIF7ch8olL499UuykVHz1R
V1JIYCfvGI0GFhU/a7v2huRL1OdvYFelQ8XWW22cRQmsKT4Q8VWd8CO4aPUy
8X/oqdBvhXJU/JVt0fuOwP/e6y59EKHiV/8d0DUg8H7udu1MXir2Crh1NIjY
P3f/LadXHFQcwgnGTwm+Ui804xJnuPHqgNIn/oSea5O/qqJHuHHnekqnBqH3
99ar5LBubrz3TMruWMIfkwhFg+AmbvzflcKxKsK/l13/nbtRxY1PjGsZfCf8
pm9wf+ZdSoxXkUdDiXicuyHe4J7HjYXo/nJSRD5XVxfyOmdx43tnw8bdiHhH
uvF72iZwY/Ycufwq0S/OFeS83hfBjQ/O8z/Us2fDEf6j7WbB3PiFhNqvL8fY
oPgm1dTIkxvreA9lnjjAhnTNC2UdZ7nxuSTbNflWbDBIM9wWYM+NR0QNTsxb
sMEy9b8tPyyI/1/caNIi+oFrr/tZdhrcuCA+zqCd6D/o6hn5XArceH/0h4yP
RL/y6JWX0Ssxbnz94h6tSKLfSXtJMRgnc+M+9ZPv7FWJ8/tCaePNDgrOvLR7
OUOMiNfqoWzVegp+mJvltCRM+J+Urf39OwUfuZUZeYpJrJ+0eZ3IJwp+bDEX
85iH0KvEk/4xk4JtvjauceNmg8Lzas1jLym4kXfGw4mL6E+e2Wm8fEjBpAGr
8oolFnxRUH29K4SCbYPKnxsvsMDi6ajq3xsUHLZdPrh+lgXN8u+TH16m4NOt
Eh0x0yxwSvRdbeBGwVMvRF4FTrLgn9y2pLaTFLyD9F0g7h8LfJ/wKfkfoWDN
h8xn9X9ZQJOrfapiRcGvC6ov6o2x4OHjOPmKncR+NjNceSMskJd1eOIGFMyd
UtZsN8yC1AQN2VV6FPwg9om34hALdGX+xeeupWC/zdN1K4MsKI7/KHVUmYJn
EqcYUwMs2CN9I5ZDioJVbl6aXOpnQVPcDolkQQqmXvlUKUrgv7ENomPLZHzg
cO7AqV4W+Eg+eRQxRcZB2rnbonpYQI11WqU/TMY39v+0KO1mQbiEVkRrFxnn
SFkFj3SxQDZmSvBGExnrn//TSCdwivjnB6urybgz+IK9xG+CX3SAQHkZGaep
Jrit6iT4iZnfd/1Mxre/b907086C3VHCDOF3xHwhi7yCNhY0iraEfEghY+va
pJmTrSxwjHxGP/KUjFdWZlIGmwm+Is7BpGgyfvf4oo5pE8H3kTbtxX0yVu5y
U77SQPgpMhe48xYZD1r2ad+oY0HEQ0wZvUrGl3K3sm1/EfwiLLj0zpBxieHh
aO9Kgp+wmH+LHRkLD29tKahgQVF4O8nPhoz1AiIv1nwj+ISdW/62lYxH+hI+
2xcTfAQ3+Z4zJOODh/mp3QUsGHuwuCCoTcYvnFu0dfNYwP0gZM5Wlox/nneV
PPKWBYoic4WbVpFxYl2DQEs6C9ixToFMOhl/eK9XvSGFBV5Jm4XLpriwke+t
wZuJLOjLndHU/sGFEzq9o/bfZQEn++QEbwkXNpWY6De5Tfhd8vNjXy4Xjoz4
1cf2Z4HNjzfb45O4sF2Yb73LZRZ8/e1wnOrDhZvsVHu3OrGgx6lGpcudC+94
HZeuYM8C0jB7JP8UFw7zvMxce4wF+tMSVzysuPBPYXSkzoYF1ldvw+6dXPiC
Du/181YsOE+a4lZDXJgEviGGlix4Ra+OaNPgwt5jgWfMzYjzEcqyzZXnwufE
Bk/dM2VB56pU+QhRLmy9TnNw2IQF4nKBb3ZwcuGCoQO/xxELNiZNXFCa5cQM
ReOKYBYLLNVPGC6PcOLvl9xLVYxY4JJeSWrq5sRrYwL3FumzIEjH+OvbJk6s
5JiTt1eXBTwNww/5HnHgql1LCTVJxrDn7pUXESEcWMV46c5MojGEb6a9l/Tn
wDrP38qgBGOQTlNqUHPjwAuVZo9UI41B64atxLadHPi9stDKmyBj8NAdUP+O
OHD62/PXdt8yhg9DnoZWuhy42GxItP2GMYBN2OETShx4aqhl99srxrBvzbcE
3yUSnqkgbYxwNobIzv3p5EkSTg3W2SDsZAwtj7oLQv6QcNuNyw9OnDAGR9JK
R0wDCQs3fUtyOGAMXnWbFN9nkXD7Eb1Ex83GEHf9efLoSRI+FJmU2yFkDIct
351/em65sFZv9kSzsxFULwtX8R9eLqzX4mI0OBqByZsLa312LBdqtu33/XfM
CLToOn9slJYLE5RwZpyVEXB+yXLga1oqXN/2bMNjthFc8hAs9i5bKvy38tn+
uYERDMu7y/e/XSr8lVq5NmejEdT5rm8rur9USCbPHG7RMIJXehk2l0yWCmtO
/E1jiRqBTB9/To/2UmH/zWsJH5hGEP7QVXif3FKh2kmSEhevEfiMr63WnF8s
dF2Z86KvGIJFatrOrozFwko2V6hGryFMy6YY75ZaLFSxvns5MNMQwkae0Oa+
zRXKDt74vdhrACovd03/fDdX+Hbz5u3mHQaQf3ymOy1xrvB6VUO4T6MBDPza
U3j88lwhPnrh55FyA4BPS57fVOcKzWeVol+kGsBo4OHuqMDZQhXThs1GLgZg
Li9WoGsyU3iAz9b285g+cFvdv3CxcLIwYvvwSFi/HhR+fzi6iu9vYVmP6L4j
5ZvAVcbYO7u/t3D1jN7AmV064Kb12/Xtj4bC2VtXxb99WA/o++v0g+HvCrdz
RXR/D9OEF3s4o8bWVaJfXs3bdE+rgrW+StHsUidStnXq8WlTBJX+M/M28Aft
MlLhzX4iA0863lvfPv0HPUuhZlKuy4B4I1fGhwd/0IeVHKfLR2WA978EB/Hf
f9A5TQmbaDEZ+JtS873pxhC6+ulR/pfb0pDnavDkSMkw+q7aO/7lrhRYTtNM
7LePoVLKlx0XQyTgM2dtma7KPyQdPCd7vlUEXsl+spvW/4fIQ6dFmFgEHhom
zubs+od2FWW+P/dcBFw8XDQ2uf9DIyf015edEQHJLvJ9nfx/aDyr2+UsTQS8
ijbtX79vAoXXbcgX2bYK1vtFdatfm0SfPa7kHsVCIB3v6zP4YBLVDeHX914J
ATXXQeT180kUdIa9dCtUCNrH1pmq/TeJPPIEg4QPC8E9u28pKqum0I/siQXz
KUH4w55zV0qZQqIjOqV7NwnC8yVbkkz9NGpbs+xpHCcArvxTPOf/TCPH1q2N
tacEQF8uVLhkeRrlGJ3x+KYrAFzr1WVEhWfQn4dHFG/QBaASSlTOqM6gthM9
t/728EP03qPr841mUEF6CufTIn5wsJ8xELCcQU8+jjJjEvhB60LYVnvHGUQ9
6D0peJkfZm+u2Z1zeQbhVS7rBi34wZy+GLNbahalVoWpP/rBB9OiCTrXjs8h
+++b9Q8o0AGr6rFqLs6h39UuhhyTPBCiX7NdOXgOed/LyzpWzgPythTb8qw5
tCAw/+XXeR4Ycn7iIFM2h1bXM0XT2Dzw/qrBufPNcyhupNZwhJ8H/O7+8ioZ
nUNyd3y1HvfSYFfCOT9Rrnn0tvWtAxemgWg69c4ZsXn02HnZwvsxDToLnkbk
r5lHn1USdCOv0yC1yihBAOaRyVRa5+0TNPDqrEu2t55HC1s2KaVtoUGiEvtH
+ot5RA467NqSTgWz9R1OHX8WkLLc8iZRKwp86dRvbVpaQDEBngmOuhRghYXv
rWUuImvn7He0VRR4v3m4rFJpEZncdslJHSbD+n/bjP/TXUQ8wXuTC0rIIPou
TfCt/yJ61hfW+FybDF16V/IDJZdQZUFZ7OJqLriKRIS0zJbRdxdWG3UjB0yO
ud5WO7qMDtsWWzswOcA18dui4vlltHO5vjfvHwkGLBU9ZG4uI9/vSms12khg
z+HTLxa5jHa8eyC5q5wErVl1R4ReLyMBLcN01nsS7Ldf95MvfxlVW1iX8z0l
wY6SrnyOrmU0dvHMXIAXCYovGG9YnFxGP2MuWH+yI4GRcuTLaeoKEpW+0udq
QoJ3tWPS45IrSMesJGxSkQRat3aGD61dQdW3ZPeor6ygV5ueU/tgBa19JJl7
79MKUuhb9Om0WkFOOQ3V67xX0CrTzFN1xPeSno5LInkF2bx8cazAmgR3Upw+
nm1bQAlHM+d5j5FgqPaYo/bTBdQjnBd56BQJBlXvpp08tYA8/KorJ71JMOzU
+OoixwL6qNvivOUmCbLMlxOjKuYRaaSX+8FdEqyKq1RvfjCP7h9aYK95QoKN
Bzwj5cTnUZ0Ad8vlVyToRRrnTrbNIeky5qWyLBKI+L8+o/B6Djn4SAmvyiPB
rzu/3vcHzqGUDSoZJ76QoCevXPLT2Tk0PrB+V8YPEpzQzbzutHcO6T8x6l+s
J8GhXeqlYtpzqJR3r1z0IAlchvk2mI3NIr7iw3m9RJzQpNtpVtUs2nfZ6YDO
Igk01cX3/0yZRTFa7hN+FCLO7TENtldmUWfP1dBKfg5Yly6awLtlFqnGBa6R
FueAa124uJN7FrnuDft6RoEDtOSkxKp+zKAcarzDBw0OKEuvqAyMnEGLn5NX
yETebDqivVGXOLdbL2bF7WNxwOnnhdcFDGfQHY18vcTtHHC5+WKwn8AMquks
+zViwQFxme97jzZPI/GoGjejQxxgv9/4dU/cNLLb3cobbM8BPwaq3z22m0bJ
XP0v689yQM/tt3l8OtNo5OP4VmVPDnj//rJ0AnMabTy/2OF+jQO0H/FKP5mY
QldVqD6FtzlgW/eyZV/DFCpuFRRnhHGAWHeveEPBFOKJkH5nG8sBHul1MSav
p5DlTlXLV885gOKTJMcfNYWiVrSHp9I4QOTe5jPDflOoPcc4aOt7DuhctFP/
c2QKKbuYKocVckDy44PDuzWn0FnFfbj9Gwfsmz4b8XV6EmU3Hjmi+ZMD1Nx0
wgaKJtHs/VOz3i0ckP8ntFT//iQKXPBZLzJK+JfSqea+aRL9yLr93X6GA5Ka
nNMc+CfRqtPhpzNJnCAx86LKv3sCHZZNIC/zcEL2Tu1i+ewJ9Kz2ZeIuYU6o
1RD/53t9AgkaWJ1Y/YoTvH67XHl1aBx9G/yQY5zNCSvjw09+ao6ja7HSdOt8
ThAZ6rG5TB1HfxZ6s/2rOcHm78MtOSl/UWKaGTW2mRNSpgVuFrn9RQeOZhzO
6uGEtY1nBl+y/iJ+/lWZ30Y54baga9Ibub/oS8FlcucsJxzNcmsL5PmLrri1
HZzh5AIX4Ydq7wfHkLb8ljf8DC5Yri+sCywZQwPVyRwqYlxw6t5wiWfSGHp8
g9eGpcAF0hI7eX0fjCHrDedTrNdwwdPJBiWbC2OIt7t2+ewmLqDnMgpCNoyh
4ggDq5uIC7hthb6/qh9Fl00ev4zdyQV1bxoNOt1HUbvF4IjAEBds2JdAO33v
D3pI2rNFdYoLPA7Rbm0+QdzzWdmR7BUuOLSg3Tmk+Adx2osN7echw5l4b+rD
n4MoV8gHnRMmw8HVIu4kn0HkWtIZESBDBpKT/Q6G+iBafXHbQJwqGXZkC/pt
aRpArcopxm+JOuqy21VB7eEAcQ/zh5UbkaG95MXkysEBtCPwQu/vbWRI3XDv
jIzEAFrRbTSYsyDD8fddJUYf+tH7fuP7TFsyHBs9+Hd8Xz9yiX7apepIhk1r
T3M8pPUjxZ3cesiVDFc3cW+r6O5DjXPOITaXyaDF6+tQ/L0P3U+p6jjnT4at
1ygtJtl9aNvhjRtv3SXDvXcW2oGxfWiRNyYoPpIM6V5Rvxzu9qHs/KXWt4lk
CLm9Zm3n7T50+py9dkUKGfoP/rAwvdyHZGW/3up6R+y/V1ZnmN2HaivXNM8V
kOHCcP0DubFeFHL9gZbgf2QQijV40RPdi7asn/JX+0WGQ/IJG6a396LZzkMN
qI0MTtuiTprM96D0sII1B/rJ8Hn/10fbi3vQyS1Kfq7jZIgMYGYMhvUg6Ynb
tbcWyPAjg8uccbAH/Xw+rJZAocCO1seR/dQeFGS91/edAAUsT/85lJvTjRDl
fU2FBAVcu8ryNF260XSOpEq3EgWiFTT+3VnXjdKcrl+ZX0uBtF6/tnXUbmTY
XxJwUo8CXYcWHFcvdaFvp2ih1UCB9Y2bx4QXu5DNgHmMkRkFyL+G2/+b6UI9
p8OeJxP37O37x+dEhruQx2DdG8GjFJh87W91tKULkZwlc32cKLAkdG37iS9d
6P6fY8X9bhQ4KO6qevRFF5I6+/z7Pm8KXKx85P74ahd6NdRf/9mfAk7edTb0
zV1I10Xzt9pdChwNNKDok7rQl+HzQxGPKDA9dUCvpPA32ncuZ2r5MQXCL2qt
Tr75G3WOzK2ceUUBccds3gdmv5GrK5tel0UBu9vbuC2kfqPFUf9VkEcBxfbI
ppXRTnTH7ats6hcKCJ7X8ND63InE//Kqi1ZSoD41pPXzuU6UfN5S50YDBVRZ
rvtM5DrRxvGHrOFOCtT6UMKeVHSgYvcm0wN/KHAqufWnU2IHsvwns694ggKk
KbP9E/c6ULuH/ZG1SxTAPKGn3bw6kMtEslM0NzcsT2reumHbgeYvDJ3nYnLD
ZT65A1tNO1DQ5LqrrhLc0LJnX9ZBYlzU8+KtJkVuuDZQxBV9pgMlTeWGmmhy
A1me/+bOvR1og9dSTMYmbmDVFfy1GWhHeHpzkiTihtjSB1uH7NvRnkuB6bd2
cMPO7TnT3Q1tqHWmPPfvXm5gzAqeOmXdhs5cFig5fJgbHKvnTxe1tKLpWasf
ZY7Eenl3zdfda0UB3tEN2q7ckHZwfXvX7lYkNN/6O/4SN/zNyMCVXK0o8YrC
MPUGN5TKXn6xLbAFaS2cnPa4ww35b2r25nC0oPyrKaT2CG5Qpr48mRnUjMwW
R+k7E7jh+rOJaZp6M2r00RF5l8wNNXYnZZR6mpDT0iU5uUxu0HZvGnX+1YQm
ffPV73wk+O852svb24T8l0kbp4q5gct+m0oCqRkxr29jH//ODYmyWoYBtGb0
eCV4R0Udof/4f+mHKM1I069yn24HNwxwt5Jsx5vQJ5Lw0acD3HBuTeyMydcm
tOPGgVN8/7ihkPOBoV9IE6rniHe/tMANVcqt/HcNm5Cjf+fVLjIVvNhNquea
GtE/ztWBu/mpoCZQbJfs3oj8bp55kCtGBcZnnsy3jEbET06PVVKgQkPyRL1w
egOKD/iXdF+DCivzmySrDzYgDYpexpwOFUZMHn3dKtGAPty6+tGRRQV35U4a
b109MuHGJVXbqWDU3Clse6Ye/QwkVxpaUsF0KfX4uaY6dJy6s/HFISqIpOy6
2XigDo3evtfFdKBCltr9rB7VOuRD+zl81YUK839T/ukTmB4sOtPnSYU7f9+P
vthYh6J5DnPsu06FRaUQUi8xrnLnCe/nICqw4kSpJXJ1SJnCrhwPp4JNQ7uA
pE4dUvBrfaCSQAVn8hUVsRN1SHbhitXhlwTfmO1jHF51SNpLQvRBFhVO1hT5
PVhdhyTGPzR+yaMC5VngIb2UWiTqYhM3V0qFJU7jY8qra9Gq/smjWtVU2GAc
X3s15RcStI+Qd2imwhvU227F/oX427S7o3qoMPfJ2zaT9gvxHax+8X2UCsyt
m4cGW34inl+upznmqCAnqvh7W8hPxL2HsUaXiwaaus2GBYyfiPxf6ogzgwYq
HdePRD6oQRwmZplPxGhwaPZL5q9NNWi5YMCjVoEGEeLnj72cr0aLBrc38WjS
4INyYeDTiWo0/271LEuXBhf0ZStNZWvQzLovnzyABvnh0oai+2vQZIq970sz
4l2yvDolxKMG/VvNAa3WNChxXShvuVaD/iY+4RS0o8FMioOesnsNGpFil247
Q4PNX9vMb5jWoD+RrbevXKBBz3+i5h70GjQgeNUsw5cG/y3c+Vv6qRr13ZVg
9NymgUjdn5QC+2rUTc2tEg+nwefQoRu3GdWofWnS2j+ZBoEHS57dHKtELZcj
xD5k0mDdcPVKj38lapzQbh76RAMbk91uzvRKVO9aHS9fSryTfLi0ytk/0K9B
V7v9VTTYQppSP73uO6p2ZCjeaaKB860Xxgu7KlBlR2pPQTcNPIsbRHKMKlCF
rdnLiREarN1ULsM8X4G+1Q2cUZulgYMVZeZbbAUqs7yteZSTB1zqPySeS6lA
JRWrx8L4eKB2TWN0eUUFwtu/ZJWJ8oDZjn+rV+/6jgqK7C8uyPNAopityUD6
d5RvzKG3fg0PpNWP/zb2/44+fngy57iJB5LaL57LxhXo/QZ2fgzige7Hdyd0
q8rRuzet1yp38oB9LcdS2fR/KFvt6mYuax74SQrUpW38D2U8lyDrH+OBsWVP
DnP8DaXJ5pa5nOaB25VxLikh31BKjE3wUw8eoE9lBOSafEOvVk3tqvfhgT0P
VoqFPb6iF6ER/Ly3ecB17YE3JqFl6Bl9Qw0K44Ebfdk7/NtLUeKt6oiLcTzQ
ws9Zu9G7FCWQ3Gxev+CBx9cYVfGHS1HsVYZEewYPOJt4f9n7oRRFT6e2CH3i
AaE+j3dPDMvQI3ezx6ZfeODar9HnKL0MhQ8PHPep5IEMP8dDFnNl6MGp20pZ
jTywVpdz11nRr+he1+q+3i4euGMWzn7bUYbuHP3ySnKE8K/a5ce3q2UoqNH+
rMUMD7SnLp1/PFuKbllxaAVw0EGvevzD+pOlyL/yyd9cXjr07j+YW/HzC/Lb
yX47IkKH0NaymkG7LyjomWHDPzk6/FU/zZyaLUGhC7oLM+p00D7k/Z/pkxIU
aa0jt6RDh7seOmbR20rQ4zfrtnKy6ZARcLi6qKYYJXNrnqLuoINkzQWrB0NF
6I2dWgjfPmJ+2+7QBcEi9C5XOUPwCB22u7+4nZONUb6gwi9RJzoMULJvyHZh
9MVZZkbqPB3e+wdcXMcuQhUlElIKV+hwi5pbq322CP2UFkUqAXTIybkoXxpX
hJo9hRzW3KdDj1mQH2mhCHVV8t9eH00Hjx3HkgeDi9EfVd7UTc/oYOqlE7fS
X4z++VGrDNPowPx9qZscVIzmmrgm0Hs6POF777/3vyJE0iGJbcN0uOdi35o+
iRHt7qKhWTkd/mg/HCAZY8TsnT1mUUuHa869PCQoROLsKX/rdjp47Zgw+Fhd
gOSjxpMPDdCB88WcxdaUAqT6d6T82D86ZD9Lu5InVYC0dv4ZdVikA7nl3uPQ
oHyk+6xP6Aw3L/RW0H0yBj4h9kKXriuTF0wc21/KDn5E26w7bC9I8gKnXdFW
yzsfkfmblmuXlXmBnTrDiMr9iKy5G5/5avFCpTmJdjD2EzpiV1vmr88LNwwO
5dp9zEMOudV/bm/hBQkecq93YT5yFvzBf8+cF+abIv9L9f+MPJz/2xBuwwvy
uzfu5ez/jK6UlNpEHeeFuzxXfd5FfEY3pIuvxDvzwpTZTJFWTz4K8ix4/PQi
L4yTpvNvzeWhB5WfipOvEeun685NTn5C0aof+lKDeKEp5mUw5+xH9MTvLT0r
nBes9B+idNuPKLkpQ+t9PC88/pP3fuVnLkrfkLYvL5kXarjqn3Ka5KL3Ia+8
cCYvPNcv2BoR9QF97kmKLf3EC06imoOGRe/RF9bTgvIvvCCTelqyeXcO+h6Z
0FVVyQurN1sVMQfeotqxGO66Rl5gOD95WrHlLWrdEanR3MUL7uU5m5PevkU9
T8P3dAzzwkmPPTN7/N+hofn7Hj3TvBCwMahbQjoH/bMKiRwk8YGSs/ul329z
0Hza7U+jdD4o3dNq9PnOe8TJHdA+sYoPGt0kNmR+/oDodn6cc7J88MFF/uOO
h7lIKNdHZVmND1bZ5MgCMxdJCHqbcenwQeSI7baXOe+RvLOnK43FB7+P+idW
q+cgtRL3cIYpHxwyXXviY/9btF7a9b3QXj646kD2ONKajfQ8nZvFDvOB5oUy
Py6fbMSudFqWPskHJ8Z5SKnu2Wi7qoOiohsfPL5eW8gtlY32+NltV/XmA2lm
RkxTUiba33TYWfMmH/z777mWuWE6OrLh4H3te3ywrtwov/h8GnIMsc7WjeKD
Tz+GT++XSkNb362/G5rIBwIzNSa1qWlIsY3PaeA1H5z9LX6jyiwdcXAPos1v
+WDrXbFPr7QzUadWqURsPh88vJt4Mdk8CxUeeDrxr5QPDt7rj2DtyEaP/Xx/
7Krig5RmtZVOzrfI9/Whl0mNfBBT+fus2uq36MjPTTeWfvOBlqpsUU5WNjJa
EDxsM8QH+5NomhbTWUhSeXRjxiQfnMz4cblVPgvNmZfz05b54OeqaiFO00zU
6Jk8cJzKgOl9VT7H+DPQh8f+xR+ZDNBR87Rfb5uOIr8eixeSZMCAhcJCxJc3
yPOvoddZJQbUX61FfZNpyFpCzPKLJgOClJ6zgjJSkc6WCXUZXQaYfJSmPlJL
QUJnq7i8EAP08g+faed8hcYjUtsqdzDga1dSguWnF6g6//YH1X0MYGWG/CwQ
TEIZvQ5hfocZYPlaaTAqKgnd54ezTY4MmH0dffGhQDI6pye9bYMrA1w+2hq3
fHuJzI/PyoZcYkDxyvPwY5TXaE1w7Wy3HwP8XaR+WR9IQfTszJ/Gdxjgqqw1
X7QhDQ023017FMGAm48NhKOd09E3rjOBo/EMEA/iGdk3nYFeam47bprMgBEQ
EzHWzkCB+xUMEzMI/YYmVxcX0pDTtSXhuVwGrNJMHKkyT0HbXjaN7C1mQG7+
9igr1VdIuTrna0oFA/5rTr7+1jwZkefCnnLVMaC51jtcd8ML1K3gevVIOwOe
5HTFXVV/gYrNzPbn9DOA6XHedzPzBXp6QWUd/zgD/A6UqAv5PUd+8Zw8p+YZ
IKw2TDL+kYjsStu7Crn4ocnnfbpqZDxij37KF2fwwzra5VNrlmKRjFhUpLso
P5x6WWOjFBCHFtGF8+Vy/FDrROXkjk9ALactzJTU+WHUw6vG4UEi+hS2Rtln
AzF/OXscMp+hmE/U5Vojfjiyxf1M5FwSutzd3bB2Gz/wvN64f17pJTrAh7MC
9/DD4LZTc5s/vUK6m+JDOg7ww6Lghk5F/AqJHLt8Uv8EP/RtaDPwj3+JJgOt
UZgzP2z/dMxo7fQL9CtjvcSfCwT+YbHO0i4JZTfyTWzx5Yc0y8wHp5qeoTCO
we9xgfzw7/ffpel3T9F5jdLkyVB+UKpyf7/V4imysHrqtzuGH060m8pVzSUi
LR9f2+Rn/GCYtzdbbn0iYrw4tHEllR/ez64S8XqfgIZ/bOI/mMMPHiLCae+i
Y1HFtOBAZgE/CGy2bzz0KBKlyI0W8Xzjh972nzU8v8NR8I7yOPsafvi1vVu9
AT9Ap92TPfOaCb+d6w58+RqOTGP9LVb18EP1cpC56tZIpFJyTP3cCD+QJ4ba
avpi0MW+h3mhM/ywUSYPXaAkoBKeit3ZHAKgXcbKUFFKREJrOTpreQVA9SGl
fvzyM3TcUs9jRkQAbiXYPpoKTULpF86RJeUFQNiY0vNI6gVainweaawhAIE8
1/fxGT9H5p+a1Ow2CsCz/4SmDj5ORLFtAnk32AKg7naotP5HPBogbd+dtEMA
DlrS90/rxSA9ZZ+Osn0CoGEgrKbMiEKBptnug0cEYP7IFBeeiES1zgNcfKcE
YO1c9ZbDoZFI6b5spJa7AAx9tBp96RCOPLKs1fZeFQDOSnHdknfBCNfe+XTh
lgAYhipPPNzljwRmsXlkqABctDzrqX3sJjomNdOeG0OMx8Zdj5MKQmnste4t
zwXAMYXy0CbzPlo44cC1/EYA6kwb9LX3RiCzWzGP5HMFIG2VRszAbBSKflWl
urVYAIrL+hOeowTUX0H5dPK7AATgduWspESkO2ZkHlQvAB7lyRu4EhJRgJBH
e0qnALRTZE9fsX6Mfm56df7HHwFYo/WfKdUvFikcauf8O0nsH1d67a5QFDrv
s+qR0IoAbAkKJesJPEQdFi8iYslMiO1WmE/tCkeBJ3BrKg8TtjjYrln7Ohxp
XWhZ/ZmfCXfO8yVZ14ShuoBp10phJqxadV6098s95BMpmNshzoSjZXYGpjgQ
Kb3S5BiXYUKSncKero++qPyjqRmnEhNYFPljo9rnkUeFfYSwGhMCmN9UOt2c
kESbb6vyWibQu/ZcNzC7hPBo9GrdDUywszfO57kTgE6T3rma6jGhcil5X4j9
XSQgVPXhoDETbuVxKDYFh6H3Sn9IzpuZ8LOVW7qS9Agd3UQxu7qdCWJu0szC
nTGIbCofcXcXwa9m+47c4/Eo7aBRa4IlofdW2pdgHIesnG1WZ+xngta68qDD
KtFo/qq7K7ZlwvPkF12mmRHo2b27H2rsmNA5UZl0mvYA7XzyktTtyIRv5LUZ
oc3B6G9m8c7JM0zYJrFhUe3sbRRV3BZOcWPC119v/UXX30bs2tkW0YtMaHE4
E3pqNgD19QqvVvNmgqSjtADnw4vo3oyWq8E1JpCKmc9djvMVbuQx+2B2kwnN
4T5ClW8OFrZKniQdCWJC9PXSzcbzW9BNTb+d5+4xQT+1n2dY9zzSYMeFXwtn
wimNCyoq23zQT4v3LaFRTKj9LdWSpHoLeZ+oUX4azwS35i1zj6ruI/kLw+ey
nxLxuwYW1JyH6FsA9UNJMhPY61VNjI9EI7dIRVJdKpPIX/ONJ7iikOgr1s6+
TCZ8ujNaHfwtAhV8PBg+k8OEnZp3vrX9C0UnKy600PKYoPY2SMzrexCa/XJt
paSQ4JMgrNqy+Sa6WxCsdP0LE2Z89b8xnvgjudyHpob/EfrFU9UF2/xRdtaT
s1M/mCD/LuHffXQDbUtNCc38yYQy7svhT4K9UGNSztuzDUyYdq7+mI9OoLOP
cYNKKxO+zLkMPxzaX7gcVbHwu5MJG6Q2eqVQ3AvDwurlEnqZwPPk+4Fnj70K
lUN+bz34hwl9e4UqdCZPF34IGD4lPMYEviePHgjZWSGzazMhlRNMeOrNuvbr
6CXUdokzM3iWCaUbUoIDLvuj8+6MWpMlIt7+qruG04IQ11nx2RUOQWAFKuia
UENRpKOSdB63INTuCWOe8A1H6se0wItXENTNfk3PWTxE+QcMHLWZgrAxxdXx
vWEEsthrEjS8ShDe/7rj9OHSA9RlZpH2UkIQNM/E0WcF7iBPE9tqe1lBGFtZ
bdX55CaisU9OyigJgsrCjv2lpVdRnN558SZVQbhrsVrwmakX0tK+avxQk+Cj
EsEhsuSFijQCj1toC4LuwRvr/GY9kbVyWABdVxBO15OqP3ocQP0y8a9KDQVB
9Kz/OW2u84VXxF5+90ME/9P3Ckr3+RUyBLP/GpkIEu85xzHBxCuFifTPq2Z2
CMLD3oszmYvOhTrkb/rZ/2u4vOOp/v44TimS5H7GRTS0qSQNVDpvo0iU7RKS
nZU9L65rryKSMrKioRIpGZ1KUWQVvn6SFFJSSZSQfvfP83if8Xy/Xq/HeZyj
xwA+/ZLimOhvBxr+vrJ0N2RAxLWayIILdsj891vOZjMGmMd+fsLo8UVj45+K
Bo8zIGTssJYxKxKFj/58nmvDALc86Tfr9ZIRMTQ/Zu7AgM1L5mN38e7bK2+X
MGgXBpiQW7Lyc1KR8n/U7nYPBlwvelLKv+AMam5fbZ7owwCFhz+19w7GIOsm
udBDgQy48XswPWR5OPpRvzufP5Q3P+ueevSAF4qqg2e1EQzocSj8OBPmgsTv
H/kcEMOAv7skw7KT3NH1MtNlOxMZYOQjJeukeRqpXj+549tZnl+bjbzb2kxR
e6GbybV0Big2acZniZ7AdjkBQfYXGeCSv8pOKNMP/8rg5qzOZYCUfHWFThEH
x6ckP+4t4PXPat01OBqJpRMyh8+XMOBSynNT1iwH344sXGJQyoAPNmKBdi88
sXrorW0idxgQeUnMKU9SF3X5PzBorGSA1fmzW267eyNnz6d+3GoGiA50COb4
h6HZU20XVTED+lQuHz3nHIXO2PXWTdczIIsj9LdOOR7JWA2/r3jOgJiRetn/
aSehu6bji063MKDXa77Gbj4RaenPysq9YoAjWSb1fEsc6j28+OhwNwP0LPbI
NjzgIncNhnfeGwaApdmYrHIQ4lOVzjg+wIAUPFp8qdcFpe3ZVM0cZoDOPn/N
QwMGaKOCYn/HZwZkvuqr9xA1QQ8lxhT9vjFg1WoLk5fXTZEpf3GsxE8GcIKG
dliqHMbfPp/oq/nNgHItJZfVe4NwzCvJHSfmGPAliFV7vzEGr6p5Hb2An4Ae
JT8dO6s4fK8wuffKIgIU6shjcY+5+GiS1vbDwgRYJk/2Cq3xxyO+/FFjogTM
eMwP5g67Yo5VTc9ZkoCvja9uVBVbYIlDftt2ShAwcFLqq8HZo6hMfju3W5qA
XqWO+VfhgUhb/HN3kAwBtuTKNFZlNBr4V7Bl5UYC5nPtVp0rikeBnyw5j+QI
MK4fmHJ6Fo3EOphddtsJYMkEmE79DkVXH7TLCu4iIHEwUCtS0ANBQULYdWUC
Ak1yMhUzFFBPguZrPVUCmpTlP0r62mNPn/lNP9QIiLHHk2HB9ljIsoqdfoiA
5cvWpzeLW+E8Te8OpSMEPPU7P1vWZImVt23d+OYYAYZ81yKlt3vjdvpjcJgx
Ablnlc8RluHYef5ym4w5AerxhSY1v6Mx34j5+mdWBFh4TjY0ZyXgzDYyyNmW
gJOLdUrCXZKwQlVLy1InAsxjkgwsnGLx87zYtbddCRhTGOUXOB6CbeLVAgw9
eXzDm7VlSkzxtNds85QvAeUGgxa3bW1RikXlmotBBLQmV5+J+eOLZDVO++0P
I4D97pSgq3UYerJFtukdlwDJntNWUyNcZEENroqMJWBcxe0/caFoNDGX7bMx
iYD9HZyL+TgKJQybPn+RQkBx9p9rjOkItLZVbKX7eQK+mE19EPwdgqrvNXmJ
XSJANC+RNVzpjQwvRzVU5BIgMq0+yB9vh0ZjD0iZFRIQ3eIeear2EOJ6Tp+e
KSEgoviU1XNfU7TCvPxpTikBJZru9Ra3T6JyNTdJtTsEZBp7VNyIMkY6chs9
hioJCG6jJrVGPfAHYuBJbDUBni2C+RatETh49qL4FkyAcMmlZoN7UZgYMnJr
ref5c6C08m98KL7+ctljr+cEMF9tsJFf4ILVKxtpuoWAR7NTBGurDu7NiXCp
6iDAzcVe2U5HB3nH7MPHu3n9XdJGa/uckPDpKfJfL88P63PNKWQEKjC77Vzw
joCUZ7GuTn8T0V44VXdwiJcfMc1dbOFU9GrzOuLzJwIahl88LybPIFfGW8ek
rwT85OO/4X89BgnMZNRsnyCAEDaMLTkYirI/6Iu9/kVAZCpX6c5rD7SrWdjB
f5aXD1XVrx3NBuhlxdMHknwkvNIMjV8ScgzZZ4eJ1gmQcL3gblr+XRs0F6Vs
Z7OEhOj4/9gqHx1RuvvE/YWiJKxZtpuOHNmBtpqWipQQJPTNj9UqOjrjuX1p
qrfFSQDuPqFlc0H4pUywx31pEkIETjPqUyJwtuDJy1iGBI6hxeGoVi52+6rV
3riRBPsdan83qAbi/a/l+du3kKAgFHI9UfwgFnlAK/YokPBeavjdiJw36sud
sx3YTYJWcPqLa2Lh6EbUYNqnvSRc0DUR7pCKQsEuTU/HEQlXj6l6nW+KQTr6
d6amNUmQ+LX53On0WLRiT+ZGfh0SLG4+Ll1hFINGpcLNlhwjIW/fLaP3lVxU
ze8YxzAmYUNgw8rliI0SRnQfSJqToNJzZ8vDGW9k0bJzVMaahCSuhtS7UQck
V7FCSs6OBBsNUSkFYXM0k8mvq+hMQt2tMf4DVXaoKewTe687Cd/zCldUqDuh
S/ZtN9W9SeB7+/VQRqIqPqVzr18ngISBM5vvuagEYWWFnOVGbBKm2TVSamHR
WIgZBccjSFjIsM5bVhuBe2ZdvOxiePXfzOVXxnzx1fcGBa6JPP23hygZUPY4
sFH5tU8KT8+35WHrzuti7ZurBdjneeeFdQhyfpsgibTFu6MukeAwckj46ggb
fQr86pB0mQTNpZ3tXxXjUZV1Z0Z6EW//Cf/u9YuSUJxmTWP2NRJeDrz9IdIf
jVhyBdNFt0g4o1e6W6ooCG0Si5e9WUFC5eB53Sf5dujX1GmLyioSMvrmysQs
dHDDG9PEujoSmKMDBT0tVjjjsWrtsyc8/7niFxgHATuWrP/a0kjCxrH5xOx8
TbQneemq7pckjL8o+6XBOoEX+0wc7e8goShbUVavyx93s/4X/rGbBEHP3cNR
gxG4+MCjsm9vSJgwTHp6bms09l9f8v7XAAmLOzoidNZF40PCZ4h/wzx/5LIU
slaxMXPcV0PwCwlTu0bX7ii0xsNdx32Xj5OwOWhtYvs/R3S3Rv2K+BQJcSc0
5rP/BqCofNnu1TMkZE2o1NfpcJBxrJjg5n88XqnuP0J8XLTe/beSggAFtzP/
RGfmRaBJw35n5SUUyOon7zeVD0dPlZ9dBFEKOqPnWsdsA1H6qtImbZICX9N9
dTtLPJG9QNqsvgQFk0Tnub9v7NCu0aCt5ispCExhtRduMEIC7TZWJ9dS4OBV
S6ZaHUSdlVpnTm2iwEq/Q+H3NAsVZsljr60UCBzEkRLHrJB3BD0etIMC1q+Q
k6aKx7G609wa7h4K9HOTTsQ1sDGhN2iQsI+CoYJfrOKFMfiDYhP3HFAw6y/8
bVqZi8sl7lRcOkhBsdRPnYl4f8ydvzBUoEPBtivnt+1XPYUNh8LoG8co+P5H
/2c5i4XXNjkcqjCmoEx+5biB4RHUf2G/oYM5Bfw2vsnbLAPQRQfSWtyagtLQ
vNa7DVHIeOfoqRe2FCSv3bu3UDgOifE/9gtx4vEF3tnO/5OLXrZeiNjmRoHO
yPf8Xkd/FJvtkfzOkwLr94amPpdOIHWXgxdT/ShY7xi6+2W7Hp5Xkr6iEUxB
2pu3SzKOOOHqRT/LpsJ4vIGrp5a3WmK/1y9qSyIpcG580/zAXw4r5Oc9N4+j
gPOWc2+WReIxj4DOpckU+OcYB2cauuKr+48O1KVSQNu+GRL/yMb2whvGTmdQ
8F4gwWM2LxKv6Zn9LZNFweXGVB8n1Wj85sqrhZ2XKdjhr1AjKxqFM3yuLY8p
oiBHX6bz9FY2NlTjSClfo6D1xuG4Lb8csehys02jNymQgHvDxwdNUVPftp3Z
5RSIOAp2qbh6o5jrAujofZ5eQnWN0tJspBb4RoevloIFsEflf7EcNHew3LT8
EQXPsgI3VJhwUBUZb2v/jIIw1wjv5p2hyPf9CQ9mEwXiins3/UsPQNtv7wl+
3krBn1rdFzsmPdEoe1lM8GsKyld39tctc0DFOkOpW3t4/g3IrDG0tkS2EjU5
/X0UpBx+emdtoBFa+TH1Wsp7Xj7HdX1rDPVRT4VzpfpHCsw1uLPqF4xQegR6
PDlKQftCD+W3lrpI/xizpfg7b73tqlL9FVZ46cqvPaxJCr6Ui9zd0RmIG0br
h4T/8PIXtDdf8Ukk5lZdGq/9S4Fy2tpPDmZcfCDGa85jAQ1fz9ycuVoRhGeM
tIVkBGlIs09vi7zvgu/JrKZeL6WhwW78bmuNNfb6PrU6WowGuWKVGAXGHry1
7uUWJZoGyzQB3Z/BDuhTQqHSZ0kanC9MFXt/ZKMiVrBG1ioaPjTWXITGaGSz
0eCY3joauBu77e2JaCQ9uen4v000HKgNvlXNH4b+ezzveGcrDbeafglr5bih
c2e7vO120MD3VRWKDqmgo1alYfQeGu5+tH0+434SC2+JTGjcy+MNsnH+cs8Z
P5s2zwhCNPjWM/PculmY06BQsEWThvadG+f6kgXw/nTBW2+1aeBUSq/5mmaM
p0/2PzirR0NbIX10qYYPrthe+UzNkIYjixLZiq842ONvYsdPUxpkHf1eVX+I
xHLNtm+vHKchQNi0youIwh8zVT6b2dDgeP9p+nvtCJzvKDa1xIHX/yapR9x/
vthy1whf7Skaxo/K2TiWG2GJBQ9FPDxoMM0/+qAqxw51tqVLrPGh4e9Urinx
wxel5LiufxVAw3DNZP71WjbSdVVXiGLz9EpRGW7ZH4YEVST374mg4eqZsO7z
eiGIVQCUbwwNXQZZuV1mfujqUuexO4k8nhMiOSLIHU37nn36PYUGdbZqYDHb
Bmn338velkHDhgT7NQqVJihTq9/XNYuGxjazptECI/SpbJHetTwen7PS0iIv
I6S8YtuGkSs0ePt3E/le+igu0vjv+hs0KHSHDf4Qk0A9YyFdtmU0WBR/3u2Y
54Y3mxbezKukwbopsCpfJwwH4qbo/moaqvdclXG4GYFfbJ6wkn5EQ5nqnvLS
viC84pzkHotnNMz8cIu8g05hl1kQzWyioaBOL3y4hYWr7Z0/drXRoBnaKW/1
SA4Jt559SHbx/MutErmyzANZKN3PMOil4Wnqsfr4YA66ntfvcfYdDUxblw37
EqPRzJLFWi1DNCi6yZqMunKQjs+21UtHaeg8LZX685wnutRn/Fv7Ow3Z79iD
HWZqaPQguy1mkoaSf/VC6+ps8N7bhSVP/9BgyC999zLlhBMlmsMX/OPpv2DC
/YSzPu6LmDADASbE24ckVAmqoa1fJBXCljABXoS1tnFOYraxmlCtKBMUjucq
jivz3md1zgN/SCYUJEcr9e7iYulNKVVKkkzQLPfION7Fe5+l3E/xW8WEH0dG
/ySYcXDtn37ninVM2Gn7zj1Z0AeL2C1W+7GZCRJeqWs2uGhiy5fbJLfLMyFw
aPWJeZYzKt1t8sNtJxPkIkKuHJ72R3O57BfXlZlg7Rv0trKEjfSEivI/qfJ4
SJmZ4t4glOvVHLRRgwll5sf4prk+6FvvhIG9NhMyd4isHZ52Rgc0V8gV6DFh
vxSxXdedhc7cVFswYMiEEXLSwjlUA/UzT/WuZDEhxCDB1G2XDpLnpJQft2LC
2I+Yk+qehijs8/2Ei7ZMOHCyvfBjuC5qNXxn+58TEx6xzh6QmPj8cFXt4n20
O6++b73ShU222GODPGnkzYRxT11S76Y/fnjG5EtKAE8vr1sbDntz8PJpdn0r
mwnrD6tcvmTC+z+dLMoS4TKhplRt6kaTJy5ravbRiWXCr0frrMTfn8B8u34e
iUtignFuhoWPrSLWz1mxviGVCUPntC921dqgvMXqcwsvMMFP9kLr8uQgNH76
VKdaNhOWF/akxqVFIvhfSml4PhPmqnZKk30RKEW9KqqumAnCQVojv0z90MCN
d5azN5jAlcYtr23MkAItuFvlDk9fvuf5sYOGmBMmvyzgHhP6pX/cXJThiDtG
TIbv1jAh0fO2ZrWfBV5rEFo38YgJa3aL/na0F0Xe1UXnFRp448dnbxhsV0dP
1r1092hmQq1XEZM/zgITyT8PlrYzofXdOH+EAwf/H5wRT38=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
ncU=
        "]]}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}, 
     GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-10.701752291395596`, -0.01387500504756928}, 
     PlotRange -> {{-10.701752291395596`, 
      7.195194394075615}, {-0.01387500504756928, 31.60679589265347}}, 
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"-UL\"", "\"-Uloop\"", "\"-U\"", "\"-U11\"", "\"-U20\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.744469065649262*^9, 3.744469087929738*^9}, 
   3.744481966968913*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"XL", "=", 
   RowBox[{"Interpolation", "[", "XLT", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Xloop", "=", 
   RowBox[{"Interpolation", "[", "XloopT", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"YL", "=", 
   RowBox[{"Interpolation", "[", "YLT", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Yloop", "=", 
   RowBox[{"Interpolation", "[", "YloopT", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"LogLinearPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"XL", "[", "q", "]"}], ",", 
     RowBox[{"Xloop", "[", "q", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0.0001", ",", "300"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<XL\>\"", ",", "\"\<Xloop\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"LogLinearPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"YL", "[", "q", "]"}], ",", 
     RowBox[{"Yloop", "[", "q", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0.0001", ",", "300"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Yloop\>\"", ",", "\"\<Yloop\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.744470752450013*^9, 3.744470824070421*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
8vr4nzlNTKQcG1PzaSbw/+CI57k=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
/kcrRnkdBLjv3rP0UzT/DzIxwOs=
        "]]}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}, 
     GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-10.701752291395596`, -0.007670310785672656}, 
     PlotRange -> {{-10.701752291395596`, 
      7.195194394075615}, {-0.007670310785672656, 75.27228687835671}}, 
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"XL\"", "\"Xloop\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.744469096308169*^9, {3.744470814618414*^9, 3.7444708245909777`*^9}, 
   3.744481967123518*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
8ZOiPIrIT6uUmvFcHO7w9OVdilJEdwzCb8Y2iYNGduSh353yaMPCSuPII3H4
8EVdvDZbBtk5STzZXScOrdWSUazWdFS4a9bU/o44HBF/8OrvR2k05f/irX6V
OLx7mqTjxSOPth/Kc1e5Jg7qzdX+EwvKKDni0BdyqTgsRk47KFWpo4+xRvt5
CsXhWtubiPgDGkg2RWR29bI4/Kd4N1njjzoKz5qImsoUh4NtZ0O+fFVBzwoa
mftSxeHjTY3kKBd5JHg18/ybJHFodLQUvpFDR341gcKPTovDN3Whb8K7pdDt
B9uLKmPEISlFTLaykI7WMa9s3glxGDpDOvb+iRxDz681ycfEIT6uPcvJQwEV
vK/TPnFYHPyPOI1Lzsihyf4UHBTMwPuD7fiPIVm0fczHyiNAHJZTaTz6yYoo
aVq9y9xXHFRUvV/cva+KPvxh89q2SxwMmb8xG6htQTLMn4dl3MRBgXvrsze7
VNEx7pqDIo7i0P84+DLPDmXULHz6N6uNOHh9y98/LqeCBCTdTy2YicPwl2AL
izJV5CunyDGCxOHKddfbXtZqqGbLevp7PXHoaf5RsOs/VbS2vYvwbJs46Ene
7O69ooxsTK6V3lMXh0sH7yX9PSeP8m3/UyxTFgcT/Wzd5EPSaMLNvjZTjsHv
A/eop0s0pO1L2xFPEweSylN20e/SKHH/4vNQCUY+eS7jXBOyqCfsjd0egjjk
aASuc96UQfTo4g8OQuJQFnIkj1BPQ0fPHPU13CwOHkN9n6vTSAjSzL+rcjHw
3e2g8cXxI74c8TBJVnH4dfp88VLqX8PdJb+WeTeIsBKjFbL72rphdWXz6bVl
IqR5XPu1+x0H+nvvMvfPBSJUV+c/PynAjWyeHLjYP02Ex6t3ZR0lWFHeCwOJ
tkkiXNX3FpE489fwe7vgtcejRAjR1vX5eIQdaX8aU60aIsIHmwhv1XuC6OzX
Rw/y+4ggcd1K4qQyCXVPXkDnPhBBRUz0eZoRDdEX9r6OekcETybv6Vf9dBS2
ts05uI0IledviZSKERBm5+7zbCGCfneRVsbFMUM+/i/+ls1EiGQPYFLKYcY+
xNof2o1EENmXqX0q9WvTLVpSuNxDIiy/f5zpO7lmuKrktS5aS4Qjyj+ElfT/
GFppqSWx1xBB/dvmPOvgxqZcAxb+xRtESAyWKZ8v/9206jveqFdBhENWn/Z+
OTrf5BPfGhJ/hQgsZwzKY5tHmnDZbWJLPhHip5+QPh7MMqQ/z27huUwEj7P9
C+eLvhsmjkaGO2cSwWfTCUNy9qrhBLs3PTeVCEz2DzeenOZGtvLo3UASEbz+
dH73MBBGt62kY+kJRNC71F0r1yWCBEM4VYJPEWE4d27GQpEHhaf++FwTRYRR
32Zuv/IVw0/VnckLxxl6mXSp0IbXDPU67m/TDWXoMfC5Js9TABXP5I7EhhAh
Ly2B06WKjJgEY7Je7CPCDc+b/lo+0ihAww9x7yVCuNWdrI+u8qjF1eyXow8j
/n+fI94lyiPFCIXCy55E6OBDey84SqG0HF7rfhcivJW1idrdwYNmHs4uUR2I
oLb96ruDpWuGLp97rgZZM/gynH4EcTyofrXBpdqMCK3zN45kHRZFRIlipnlE
hLWh1/hvlwA6aXD6ts4OIkC85IsjkuuGX3z3+ZzSZvC5vmO541+roXG8Nffz
rUR4fbCOXifCiq6WqTZwqRLBN+8ky/5lEcT5XDDIQYEI1ue0mYdbJFDI6KLw
JWki1PLlptg6SKJ29r7mzxQi9BqnmW/eQ0bq8k2hUiQiCP6ntOvrYwK6aFUu
uU+UCOIK/NIdPCJo6UBSW5UAEc5+j+XepSqEdqWG/DfLw8B3uPdZ4wgBNVY7
yGtzMvDRLQrTKFJIqkPjw0kWIhhGL34Q16CjhBmxM83rBLi/98GVlhN0NCbw
V51zhQDt6Oitk6Z0ZKUx9MXuN2P92POwYRYd3XJ9npY9Q4C93sZn9aKlEV/E
Db3eKQKw8tff/vhQBh3NSZ2QHCeATO7j59seyaGeh6E5Ad8I0DDx3rD7ngLS
+exqdnOAAJJ3ooZ8fiiiglWd+elPBEjoqZsNL1dE62SJUq1uAjyjsn/Jeq6A
/AyYHKI7CFC22zdGv0IePfMd/YvfEKCgC/xoCXJINv71TfaXBBhO/B6vmSWL
UsqqPW2BAObzuXWpDrJo6lkme9YTAsT9LZ0VOSeL7EfD7398QIBiAYNwny1y
6C77rr0StQQ4Idd5a85OHgnLG/D71xCArVPcISdLAUVa0Z7eqGTYp5FO+TxW
RJ8PsB/8VUEAQ9Mhx2NlSkg/dZKoWUKAfLffdgfslFFJdXtLVAEBBrsLpUT3
KyOWjnvhTZcZeDz/zi9aK6N9M5fpbFkEMAnI6uPxVEavBaLfWacRIE2nNqdf
RwUpa/jGZiQT4F+Oyo+xHaoo3dVE5UMCAe4a2z7O4VJDc+FyfaRYAnDzdhj0
hKghtxzuFL//CMCentOtelUN1b5G7E3hBNC49e8JZ5UaEvgbnkAOI4CZgM5q
c7UaOqJa9S/qIAF4qrQ+/R5TQ2/3DMV8DCLA5DvBpnI5daSULbKq6c9Ye6o3
mnero5QX1ieydhOgeyHZuYd5Kxpfiv09vZMAT7sl6rYS1JGpYt1ROzcCCDya
vJ/2WRWVek9O33QkQB7r4dm5DWW0cYFyiNOWAH9H9GL4eZSRD7hOBloQQOpZ
6drNBCX0eD4l6JkxAd4w+d1b9VRCRNmmESkDAjiLGj56laSEIj0X/E5tJ0Cz
l57bMMO/55zClz5NAvB37Y8+NayMNBp3e2/fQoCqzWTfCDZVlDmd3XtZiQCU
pSulJxPV0DT1tfuCLAHW0jNjMyzUkZ3r+nsnGiP+35mOYqWtqCpRw+m2BEM/
4hnIOrEVcTXsb+chEkDFaePRM8mtKGiqyOaAMAHaFi5MCZapoxcS71+18BGA
4J5ykvFmQzRHTnMZbgLI35yQCohTR7Gn9Z+dZidAK3O3nGSjOhq4fxQNMRGg
k3NXfq33VqQ3fr1Rf00M1nHpc5b1rSiPOKBb8EcM7lt8n/ztqIGWbAQf/pkX
g0vtHKvLf7Yit1MWWu7TYqD0ta1LKWErqr1z8l7tpBjobB5hLrPdigSG76oJ
jIlBb17c9T2HtqIjIuO3Dn8VgzNjUcdMrm9Fby3Iim39YrC03WQssmMrUvrP
6brCJzGYd3xj7Lu0FaXcSpROei8G+xSWNntraKDxwcelI+1i8CFDt4TUoIHM
BGYljd+IwSJffWCwiSYqN5EtvPJCDAq/Kg6UX9VE/8K9iGtYDJ7+aBLYdUcT
+dzIuLzriRhILDz0rS7VRI8/vxB6+EAMDuom5nhf0kRE3tUMkVoxEFcj9+nn
aaJIwy2bj9Uw4t8tj/xZpcm4LwSe76wUg9nzfV+kFjWRRkU+p+pVxnket8IF
7bRQ5oeOs+dLxGCt5qmI4hktNM3JxjJRIAaZx3kORShqITs93TjzHDFofTKz
Pb5eE1UdOrJWniUGjztHorT9NBFXScV/TBfE4E9I0NVOf00U1NW7tDtFDESf
j80pnNNEL1j5wp+cEYM+8iu6WIcmomubzhHjxCDEIzTtnKwWig+OOhIZLQbk
N8eefIzRQoMFNT+6Ixj7w9VVFSVaSK99OHjrUTGY8SalVdRrobx/hPH0Q2Jw
KvrAtehxLbS01T7g534x4Nnltf1x6jbkFpjw1TpADD436jRPmGqj2pyHu2/4
isGjxa7QrG/aSODNzz42LzFgn+1pMNfVQUf+0nb6u4uBaf8ZEaZ9OuitqucH
7CQGAnvitF8Y6KB5/z2RDbZigL0yLZv7tRExbz/hnoUYgLxFlU+1NjJsD224
aSwG2e1/lJfO66BAlqhd5fpisNUuVf1CyXZ0Xid+tUBHDHJyBoN9zBjvxUMp
hRc1GPrVG3comOqij2WZ+mmqYjD38/5LVyVdtP4xb/CsghjspfMO5kboIhne
sthT0mLQ7C2Tb/VVF9kY35SKpIgB5Yx+hLaFHgqLvMe46zP05L3lXZCth3Ju
Pdq7X0QMpqJ/P1F8pYcavzaz+PGLwaj+3J/++3poWLS1Yie3GIilavzZk6+H
uGzfmzmzi8Fl+r+qftBDavF9Y9ZMYmAm5+nf67MDudUPJ5n8FQWTSUu3ui36
KHpqSn7HkiiwHTH/+cTUAJVKLbzWnBMFO+PYlzFuhqjF7e8BlZ+iINd9abCS
BaGf51h5ZL+LwrlK9/0mS4ZICPNUSw6LAvF6OLdDhSHa/lvYXmxQFMymK2a6
FA3RHkWJab5eUdjfEvhm+oUBSvKVyeDsFgWF1C+nxD4aoOqLKupMHaLgYLve
3zhuiN6/1upafi0KSTVncniWEFpe1z8291wUfv37yfpqBiGKprnwVBMDT/hI
aM1WhMyC7euGH4lCyHYBg95SQxRS7O7eXycKwnoXnxDkEcp8v3up+44orPuG
b2b5jtADzqDct1Wi0GYoeXhBwwgN6B/Z/vKaKESYizp6OBkhlmORn5+WioJB
4NaIqRAjpHAjNvpBoSgQbma9jsk3Qs0nSzbykkVB9KZv2gFjYzQv843Dd48o
dOVnCIpUmCCi1+QNDy9RuGYYk7iRYYIMM+asHN0ZfPMPqD06bYICX6xMWjqJ
As/UpqKL7Sbo/ApzqpGtKDxdS4vz1TVFd9W4VXQtRMFNJ+up0UVT9DFAqH2r
sShsHng8VdZsiqQ76PzSOqKQHBgXKOtphmxYle+SNUTh6ofnPJ0vzVDYdk1n
EVVRGNyhm+7NYY5yDu+Y51UQBRWOCObIeTPUWG56kV1aFK5ntGYHdJih4U+2
WhuSohAfaGw11maGuDa7fVgiikKxNH1sYMwMqZn4RM4Ii8Izm2H5aYI5cjsR
SJjgE4UH83s5s4PMUfqLmEFtbgbeUNGdKg/N0RvByxWJ7KLwWWLUU/+vOWLb
U3Ogh0kUCp5Ivt+naYEMq19ukV4TAcIP7wpiiAWKWhlcPPpHBB5sinF9VGOB
ai2WnsC8CDDRan63zlignxf5EvinReCVXuI2irQlkv8mZ+U7KQK9b4rUt2hZ
olWbyaie5yIQPFbjtrBqhbTymJE0FoGWniWWfZutUeiYOPuxxyIw+OvznXBZ
a1SlodEG9SIgtnrWuN/eGo3G2WTx3xOBFVs/Y+ppa0Rp9/f0rRaB+tETaq9a
rNFO0knJmhsioHP00Z/fRBvUXnfrps0VERB1yn+jX22DSilH+iBKBIbKjI7P
XbVDfQeTSvnDReBRueznl0t2SPTRlSDfUBEobglvZ7W1R04cD1VqQkSgP/A+
EyqxR+ddO+f/7hMBYzPma8w/7dGL0u8NNntF4OKy8JZlugPa+PUvNt9HBAbE
laY4DRzQ9h1E8wlPERj2jMk9tssBHU9R59FxFYFzaocErhc5IIv5+R01qiIQ
d7R4UjfSCf16eaI4f1gYBqsSnwrNu6BZ0YDkM4PCkDdVNMMt7orm9zkcPdwr
DJt/mjftMXVFi/W63p7dwrCUwns1JMIVLbPLmht3CEMUPXdattoVsVi8/znx
SBhy9+8uZI9wQ8QWFf3tWcJQFS6g+R+TByKJEeXoacLglEw2EtjhgSSDWAV4
k4VhUi1+i8VxD0Tn6BsZihGG0YM0IZdBD6RqkZyaHCwMw+tzxao1nsik5Vvf
RyQM/CKVifyXdiEzsfYXoCcMT0ytX354swtZBjXcrtomDMs7xBVvbOxCdhwZ
CbHKwnDm4djmH/95IU8LfSU5gjD4EJS+pUR7o0MtOf9FTAvBsvzssdYbu1FO
iy1RpFgIrF77aJ0V3Isuyad0ieYJwXk1gzgj3b0oK+XFecJFIZCT3v+qc89e
lGZjsE46JwTpRy98mb69FyV0qA3TIoQgpCbihouDPwr9KFi9xV4Ipnfght4r
AeiQjsO+rVZC8O6uD+11ewAKyTtP0TQVgq47/+G96wEoyIs1S1tXCGYuLONI
z0Dk8+V3hIGsEIz27TxZyLsPWY1/QrbrguBZ0Pim5EwQsrAUWbFbFoSZX5to
D+qDkGmlU63DgiCQZx0TEiaCkGHIGxmXSUH4K03+aOO8H2lNP96064Mg+Lwy
t3lEDEa0peLuoBpBoOiOZnu+OoBW2QP3J+wWhCEZzviWw4cRb9xd876dguC7
cntm6vphRFlek9ZwE4Q16Sc16V8PI+Opy1+/2QiC8juh+54eR1BKx6tdxtsF
4ezq+DWCdSgi5CrbMQkLwnDy0I/rBWFIS2FBPfa1ABw6v9F/t/YYsihD/B+f
C4AMoV3g4YdjjH5K+6WKBSD+6Wxu4/IxFMMrWzVYLwDqLTt7vdFx9HzWQ9qg
QgDyDBdKU98fRy6PHouunRKAxF2v22o3wlGoTcLqf5oCwJwxduV40glk01K2
dkhNADyFkq9m1J1AMibNG3sUBeD2SMVj+ZETqFeXidVCSgAU+bSnco2jkJFi
LI8QjwDcCVJ2Nv4XhagCv7e7veSHB/mRSYWp0SggdSSmTpof9kEvc/74KUQ8
Qz9dIM4PZJGJfjupWPQ2em9iPD8/8D01L7HdGYu0QoYu2P3lgz0Xw6Zc22IR
m3X/ldH3fNA8R5E9Wh+HrnN0g0gCH5RV9Fa2dsajidPP2CK+boauf23qySMJ
6OVNmivnp82w+OVlxUG2M6i8K74sv30z8IWZ3m2XPYO8aciw6fFmGKkQPYUO
nEEd8OQE5+XNMPHU3/jM3Bl0/1/dVL41w5+jJ6eeLxHFnrrxrqmWF2zJzMqi
McnI+xqHlPNNXnhULU44eS0ZbW/fd3ikhBfeW8Y8FehMRnMSMtxcF3hhqYRj
dJieggIbS02d9/NCl62+bX9HCrL+m/9ghMwLWzffpaVtO49E/ksr4krkAS6t
PTBjdgGdvp6l0RXNAzXGP83DT11A0905r/PDeIBXeW7U88EF9Eat7LeSDw9M
ugqF0hXTUexovZ29Jg/j/Rtw2lkkA313HFrL+sYNVmV5O93iM9FjOY3dZENu
GFXY9XJLQTaSd9NZGNHkhvXs2cr+p9no0mn9c9WK3NDhkp/46ls2Ch2wqDcQ
5YZ/rwTFjildRDLZ3pv9fm6CNBe2U0tNF9GF9bNPrxZsgprjw9erfl9Cfj2f
JNX+cIFZ8o3/1HNy0XPpOBe5X1zwVqvBj/NZLpI7LpdMGeGC2c+/O7dM56Kf
ghGzfJ1c0Ook+V+4ZR6KchR6PnOdC1gyjza0ruehzFa74HseXMC07fMvt+gC
1AzNtVoPOKGg971ja0MxkhE48F2lmhMWuqrKN2aKUcoeAQnZck64IhIVkid/
BTls+CaKpnMC28U/nax5V1DfjjXPpX2ccLNDOOXNqRI0/0B7/aEoJ6ym3Goe
vF2K6DW3LHdEcMCJGvu3cY/K0W2V4y1DBzkgp0LM6s3ncqRbrWd+1p8DzjY+
XbFcLUdOt96YtDtywLnqhrSJHRUo9uZ3gz1KHHB0IPn94+YK1H9NWuvMEDuo
jHnGvP10FV26Ukhts2aHuMZhz5/qNxCVElASasQOrEJvJ6/svIFuFStRRHTY
IaAo2fNS/A30rOgRebcMO/BSFszsu26g2YJPYjMbbBBQw0Vaj6hE9rnCm4Xr
2EA1fZyj/u1NxJGZuuJFYQPmLQuPtGurEV10BW8TYQMZM/VHZt+rkWFBUJIA
NxvoljLX3ZWoQZFXjYVbFlnB6x3rytWUGjTe8EdlazsrWEh1X+XZdxu9+hbg
xxnDClxE2xfbiXdRiqb+q/ufWSDKyrG6macWXW24eSG9kwWyBOoqv6rUIjAg
uB14yQJfznKQdjjUomXL+a+Ueyxwd4GjuSKrFgX7VK6eS2EBVt2rLxzI95FV
ooianw4LmFOKS2306tCmTz8v8V5mhvH8i+B38wFySIu+djGVGVK8tNWGOx+g
bGOuB6QEZvAxOLGlYukBkqiW/qQQygykzzUNY2YPkdppL3Fza2ZYSZs+HzX6
ELkovy4+tc4EZNUnj9TVH6HCuIrr0/uYYN/AN1HTtSfoq9bWhxE+TMD1Pczm
uHIjkplqerXmwgShx889n/FqRLfd+ia4jZjApH9p07vHjQgUBZXlSUzg2iH8
UT/2KXp9Y90XF/3DLrtHeCxEMPJ2qgsrO7yBt1uslBGNmtG7DeFOPu8NzN3P
+2iPTzMyqzmuGmO1gXuH2oS6o5qRGrfmlIf0Bma1O/QP1TYjlhf3Ang/r+Pq
SX6RHfLPUKXOHY8TZutYwN3y+Kr4c7REqdK3J69hE+Zza24yL9HB9k2Fj7nW
cNDtzve3LV6irycPrMgv/cUV7LGchgdeotZehQcsXX+xn5DOwvrtl6g4+8aW
hqS/uGi29cZmgxZkxnGNLj2/invs2CzuBLxCWb9KuFZer2BvqbOlywNvkNwN
26X3dSs4ZNPLRRnuVtTo92ekunQFr8mX5BbptKKJbgfsF7WC23M1TUMvtiKj
x+sRr+VXsAfzoHq1QxuaTvIeyU1axnbr/SVD3W+RHZXQpG32B/spbv0ZzPcO
DX9+dktA/Q9WLTn9WVrpHYq6eCR/ivwH3y3h5ue1eIcqOFrCrywsYR33k8X7
Yt+h1Z/hyhwVS9in9DTBYu4duvnofd4H5iVssu/owuJQF+JwTT8ejn9jfWum
AJaRbvTrUPTi9erfONSkkLOGpQf1JAWd+Jz/GwuzjHIn03tQ+WPDk4bhvzFT
7GB0q38PMqDPJHAp/sYX6JvTc8d6UPicY3ZR9gK2GGniT/z9AQ1nCN57sW8e
C908t/+Mbi96c3Nd44/LPFZdC7pdvqcX3X0+WadoNI/PSUarrib2otg/zQ3p
pHl8ctrGyLW7F4nvOQY7O+fwDo9P9g/DPiMnte7On9vn8B3jb6NnH/Qh/PbS
tAjvLK6+XbwpJGwQpY/k/9s/M4O/L9r1spUPoiuq3PTrLTN4Orax41f3IHra
PBVEj5jB2zqvPLm1/Qtam7w1S3o/jV9WVs58Yx9C0XpqbLxpv/Am7fnGd55f
UWS/hvL0vyn8pab71zvaMEqSrbBX+TSFt5f9CJhBwygnVDgs5PYUVij67aLv
O4zqWX/XjftM4W/a1vH+hcPot3K94dCjSRzqZ3drnDCCjsXouLw7PoEvGHXZ
cZNG0RFJ/f9qv49hmYPXci+ZjSP3GS2xO3gMC8jds/YMHkf6zar3b+WO4cH2
z78c0sYR9z6pX1ctx7BvQaz5l55xdKOaZW/ujVEceYkp72zwd/R1xxurmP0j
OKHttppKwQRy9fIgWnz/is0CdYxGFH4gPRXHehP8FR+IY9fudP2B6BuWLij3
K04XdbFYif2BZst007ZbfsWlYz2/uD7+QMRuXSYPhyHsXdrbREn+ic7PtXRK
dQxg4ivDdwcWf6FQtW9H7rd/wkMTozw+CbMowbVnhe/MJ1zC9DTXomAW/a/B
Mg+Hsm3DuH2dGcMw9l1EtjCPpfKcZU3lLdnaJJVsTYVXPiFKCypLIRUhSdKm
ZI+QhFC0SCJK8qrsS5a++fN33Md93Nd9ned5Hdel0BcxfmbvqykpH9I2F42S
ZbV3r6jeeFfNbToRVdc/SvK6hTUkhL6t1mbe61puM0amHWcoBah3VM/9y/2S
Th8nj2fHX1k/3lJtmnSb4Vw9Qeb+d+QB166W6tj7J2YDuyfIlyz3hpIXzdWs
fv+B4pkJktGkMb4so6n67wJ25xtOkrfGq9bz2DdWywQJ6lnnTpJtVqOz5Rl1
1SOx2cOhyVMk2XL7nnvy42qmZGzpcPwMmS5h2pbg+Kh65YWbsdfvz5AT7vW/
G0SKqhudjsXFdMyQm5qr9vgJ3K+OnPCZ65WfJRWWtLzVh3KrzTqiLfvvzZIq
R8/13g10qfZjd9GsPs+Rp33uknWDj8g6ho7f770LpK6aivI5nWLSSKN3i8SF
BfJNd/KSM/sJWdZ71zigdIFU+ie0anCqlOzYmfXyOXWRLGFZrRLhf0rKBTv1
SlUsksHRAVfzxevJ6dtbFXao/CVvOvKk/TZoJbVPkudPiHJjNL90n9iLVnLV
wV+TF9W4YcF7yMjAo43UZnbtqTHnxlD3T29Tzpzw+dv4wM+HGxGJ23mOBr8m
ayYVGwRfcCN/zth8ur2DdFZ1f3k0lgeLzYN5k7EfSL039Zveq/NBbe7Z+Zi3
H8iBRKXzRy35YK+ZESyp2kWaGh/uYG3jQ3LU1nUmpV1ko5B1JyWBD8tZNT1B
gx/JCaEDSloLfHDKTJecWNdDam8O/FflEz+czTSfzS72kVt/h0S0PRKEmJ2o
BY/6F7JRmb2v7rUgmlxGi0Ttv5DmWyg/3/0WxNqg8lyl5C/kaLix7S5dIejf
czxrrdlPLjh+LP+RJwQhjaP/JDoOkAVT6QlSOcKoEmvs0br+jUy2vtBn91AU
oUp3XVfWfyOlKo+Vbe8QhYlecpvFj2/khR/u3xOmRFHgsPPZJuNBsp/55swe
CwounxrNDXoxSJatu1504zkFgfMyAdW/v5NGe+8/fdxPheZ33z+uGCbnrgkv
b5Gn43rvE+czPsOkdfCVjIeGdMh84L1fkjhMvvEqKSy0oUP0ZcZemS/DZEt6
TuvAITpGC163dEX/R1o1e8e5Paejgm1+fWfdCOktKXVlV7A4Nk8LWXvZ/iZz
2gNVtAckUMXT2UBojpONhXlJxfxM5CuV7542GyddNu7ZFKPExCWLrNniDePk
40WR4gOmTAQEBuiwjoyT4seeXg7wZUKun++CceU46fiwvYLdykTIM5aLodME
Sfl176DLNWkYRqUNaEdOkjklWzY22MnixuJ2LsV30+T8Zc/rrB4FsGlTwoeH
p8nG7Cqtp4sKMFNOYNQtTZOCWYp9HkqKaEWdpq/WDNlLVKQO7VbE7MkVm4pD
Z8gr3kkF8l8VsVFkIX0TJzc7jwnWLo4qYZqZYRzpOUeyxgZXmF5QgYNhr3fv
8Dy5LTgf7G41uN666fHUmQt+C6dsnydoQdx8655l+TzweJJ5byJaF4Xex8P+
6PFj/dj+vYWjhrD4Xhez35QfPm4dUt5/DNF4QCihHfxQ4HsqqcC3El99km7k
beWH3eqi1HDplZD3v9Hi9D9+fLj3ikazXIm4Qy+U7tTzw9/S2fpg3Er4horV
7dghgD2ts5r5ykaYnt36qmGfAOakzI63LTdCzP8uv1/JFkBbwR23sZVGyApT
HRGMFsBSZtwaDWsjfAg3lnqcJ4BmJ96zNj5GsI92O0AZF0Dyzzglj/tG0Iy7
Llp1VhCv/zfHPG9mDA1+y9axZEFwhyoHXlprDNWoT4maGYJ4NV+SkuxgDIUQ
WWbiQ0HITNnaBu00hrjXRZW9HwXBk53p0nDcGAvmZ1jCnFy8G+1UzK03RscP
9m6XNiHsH1d2i7E1Qfs+qlpclxD6XHXpNo4maO298/XpgBDk5IPs/riYoPHt
kO/yWSH8PbzCdO1+Ezx95hU8ryKM4wk3364+aYKCdNfY7EBhtLiZXP5RaYKo
9ZaPfkqJ4IeCjluaJgtncyzejyuLQCBlhU6OLgsJ88T8jLYIlHY+uHDdiIXM
uwZWPJYiWLUxeP6IJQuV4qodTG8RvI3Oawx2YWGui3eCfCKCK6WOlS+jWOAy
5pK2qRHBV/92xYlTLAidW7BwaBKBr2DlOlo8CzKWUyecP4tA7M1ladkUFoic
QQlfAVE4Vg1yHc9nIdDvpVGyqyhOFUYKBbWwEFb33DXNUxQeTjxyBe0sRCvU
hl3zE4W/cbzX604WElvLa/MiRSG1ffLU2CcW7hkVOlXkicJdSk336AgLT+Lz
Q2oeiCJJIIJ35SgLVV9zrzwvF8X/lksJdE+w0JKa0d/WKgrVtZmLf/+w8N+f
C4Ffp0VxRESmL0aIwPjW+NQfXBSY57CvVYgS+FN4pvyXCAXh38rkvtAIiOyO
4plToqCGsXf3rCSB5XVHkql2FEhYDdTvUiFgqMB+IrGFgkQeyUqqOgHTf/0+
Su+gIH537FThMgK2WnvV1A5R4GYypF2mQ2BfvHMRkUbBvVD/50ImBKweG55L
yKKgSyXzGJUgoNZD8R66TUHpNuZpHjMCffrPZa9UUpDtFN5atYpAtVv2xDhn
7kXUlradXEMgMyri1YY2CvqKFWUsSAI737CiF79Q8HzXN6uj6wismhff4fof
BZ9S2i8tWRGQ0/hlcn+SAhXpFd9DbAh8+DdvyFOQCnld9ioLewIlmSdqy+hU
JPnG/HNqPYHUFx7XJOQ452Mhms8cCDjLSm+u16XCLJMSKbKJgPG6CW1FgoqY
m3ZyMo4EJPzbeENIKsy73CuY/xAYu3inp9WeirdeZ7UFNhNorzxTouVExejh
Tq5BDt//tjcpagcVIxnWc8VbCFygwb9rHxUpH7y+/OtE4KCpgo0Rm4rK5nch
y7YS2Og5qxR/lIqMwF2+9RxeEds5OxDFmfufMt87OXP0KnrwZnUcFZPjfy61
c/jHx3OFKRepCIuTub/GhUAjr+/pX9eo+OVXcuIKh2/p2nja5VHRHD7l8Z3D
p11ULbLuUyH+mneXhisB78hFxlwpFb0is2lbOGxzq+vnllrOe/kT7EMc1mgv
flHQTEVB9MHECA7zzSVl876lQnltQu8xDg+oso/t/MxhvRBrPw7XOji4FH+n
Yn1tx1t7DmcHaRrQxqhwtmLkSnM46hqP8IE/VHTGSN5+x6ln9/PP/dW8NKwp
U3pzisOWv8orZag0rE55v28ZhxWl01KPMGko3nLvzWPOfxfIoMNNyjTMBazI
MeZwt88/DuraNMzQ7S2zOf0qT1qhEW5EQwhNvWeR09/0csGlzlU0/M76sGM9
h0MHBt7r2dDwLjbq7kmOHgTrWnyvGw1Fnubyzzl6SnmE7jfbQ8O9xym+LRy9
J087k0l+NLSk99jXcfxQ9IEysS6CBnZaiVf0BgJJ3D9arp6m4XtfGdue45/D
Os/zJhNo2NyzkPqX4zf98IjteTk01MWl711jS4B6c5vJ3zs0PDrf9LbOmsDI
KxbNvZgG19kl0oLj3wLlX8+EG2kIrz2hOcvxu2adh/bBnzT0ZvddLuTkJXjw
UkXCDA1xAe1XT3DyVCfcvKmIWwzudsrS1py8eW42DZyREsOu1rHhswYErvSI
VURbiqGK37pYi5PXIS7bTbn2YhD7TePzVOPkWSO8t8FJDBTfMO1TygQ6/YZ4
KQfE0Jkr/CJFloDYbM3G1AQxVLPD8jsoBDzkZz6XpovhNtf6/kBhAoWWeke6
b4ghq0V74yI/AYdT6SkqpWKIK7j6sGOJhRiJwM8FfWLYPCidf+Y3C+Gp4qW9
MnS0rdyl6viKBfV8Xe4xRTpezWwUKGpkoanMzoFHnY49WY1mvPUsyPZEfNLQ
o2PhTIiTXzlnHqoPc/mtpaOeKuyOPBZGH9Sun/SlYyBrVF8njIW02p5kfs6e
U+a1+aZTMAuWnbPdzGA6qujGCT5sFs7P6LPNI+kY3tgQv8uLBR3Lq8mRyXRM
XYfGvvUs7G8O6haqoCNvd6LEDQYLs/WRf+uq6WBXZnvRqCycexqrfryes0c1
apn5CbBQ9PC6/9QrOtSOrwsZnzXBUlrz/Jc+OsSGVvPa9ZggdZ+6QoWAONrO
dJ9tzTFBw+KbnQedxOEpUS14R9UE22Z6opa7iYOPvT9TTNYEI6NDuQM7xMHm
/ajmRTeBxNelkW37xXEgamLDmyVjeDTpRNiGisO7YYvWyEdjTKeeyFDOFEdE
74aKjYnG0DQ0+vz6hziO/ce10PvLCLquhZRbEgwkenkVWsUaYmHVxTX3pRko
MTBx+BJliBbVMHaJAgPRdPsHoaGGCPhp1/5Ck4EAAcXs4wcMcSdm4OKQBQO+
dhtkLlsbQueRnLzOXgb0lq3x45k0wJ/L3BuNfBhw/1YW6NNngKbIoXCLgww4
em3bfqnFAL4OTz47HGWg3+/Z6LpcA+R/2ZLjH8+ALvvq8RubDaBFj9W++4iB
mh4dg7Kr+pieOrS9uJQBrwK0/Tmpj4Zu1/iqKgY6ubwWuAP04X1L4+erF5z7
4hqzXqv0kWdZ8+BXNwMPdgh7Jb7Xg8bBGVNDPknIOWtFdPHpQa1pv+0jZ0lo
/33pKbtmBT6nrXbav00SPMvStR1UVyB9P8ND2kMSZ+Rv1WzjXwE697N/jx2Q
RJNcj8KyVzpYMlW4aRUmCQ3/8IBvO3TQffMNb+d1SdyMCBsxOaqNS9Hks8lh
SYjVebS15WpB0Fx2NREthdVByfQ2YQ2450Ay+LQU/vK3zxgNqyNf1GfkYbwU
Pk87a5U2qcP+85NreqlSeM0esVU+p46zJ50XNe5IIb5fmd+Brg6R1oSnjLdS
UBdOykxUVANlr8DaseVMOMhwy11wUMHOFj1ZA30m9ArXZm3VV0Ehy2UswJgJ
Nf8wORUJFWwSys0eWsMEv2rD+6xHyrhwdy1PnxMTL9PvFvm/VeLkO7yuNZyJ
ZV2Z8/raivDck3uVcoKJ07dOa3ycVMCDpuYghzNMLP87tCq2RgGbM+Q0GpKY
GNK0efXJTQGJ60pjqvKY8H74a4/2GXn03endOX+Hicgo/9TMrfIwlBJkmT9k
wkXJxOGoijxef3f59riCCaHAGLpQhRzUtkRUjdcwwRCuOFJ+Vg6B5bkphg1M
cHkygytd5VCr3nKQ3czESfvl5yWWyUHi/IRNYTunfmLZpmcTsvg//+3kRA==

        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
paCBh7/tQ3+Fwv8ALzMPiA==
        "]]}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}, 
     GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-10.701752291395596`, -0.04089763580616934}, 
     PlotRange -> {{-10.701752291395596`, 
      7.195194394075615}, {-0.04089763580616934, 22.33785345719813}}, 
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Yloop\"", "\"Yloop\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.744469096308169*^9, {3.744470814618414*^9, 3.7444708245909777`*^9}, 
   3.744481967268176*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"X10", "=", 
   RowBox[{"Interpolation", "[", "X10T", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Y10", "=", 
   RowBox[{"Interpolation", "[", "Y10T", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"LogLinearPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"X10", "[", "q", "]"}], ",", 
     RowBox[{"Y10", "[", "q", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0.0001", ",", "300"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<X10\>\"", ",", "\"\<Y10\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.744470774763269*^9, 3.744470785514287*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
Y7s=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVV3c81d8bt/e87r029157hIySynOkJKGF0kBCKlGiEBJllIq+iCLKSKKE
oqxjZm+SjGRLyMrud39/fV7v1zmfc57n/X6e9zmHau921JGJgYGhmJmB4f/f
nBb/9+8v0TDfAJW6i5MVsp9aK5y8QMOTU97OLhtT+lkO2glM52n4S8qQ+cCF
L/oZavxCbxxo2Gt4pLnkS41++vJE6DF7GhbgnT3suXNEP628cnPNloZP3jNi
Sfi7oJ8cnuiRcoaGD6p2H7xGW9FPsvKZND1Fw2dq87MUl5b0n1Ms7RZP0PDN
Wv3FuKx5/fhJ9a4EKxp+m8/9doZlXj8uj8vUyIKGX1Ud/viydl4/xn+kbPoI
DTecpuQ+qlnUjzLG258comGGj8cMympX9B8TnmWBGQ1HW/i8LT67of+o11Nm
3ISG9ZpWG0hfN/TD0w7HRRjTsJxp5idm91X9e1dU+HcY0bCfVL2h2fsl/VA9
truDhvT9/Gcje54s6t9lGVwNM6DhWaKSNn/dkn5gU+EVTaDhzQXT6Ne+K/oB
sTGjPbtomJ1pjVPh+Ka+v/3V00F6NJzWZqUy0MEIN1VN21R0abjG7elMEQ8L
eC3JG3fo0LBZlrW02RZWuI4ZS3y1aFhwh70WYxsreNzr1ZLbSsPDY+ax09vY
4KpF/utGNRrmTkjz+WzNBq5Sj6Wvq9Lw7f0PZPdws4HLuEu0lDINexN3HD0+
zQIXc/Zzf1GgYebz6xUrDszg7Eu77SZHwz2GLyNdPjGCk9HGkrAMDe/Iv3OD
W4EBzgl0u2AKDXfH1utc7t7Qt+vJ+eksRcPpltHCVI0NfZuUBycEJWj4XtfB
5Nspm/qnXZ2bPonSsOp7iVO7djPASV3DvfbCNDwuxPn+wTkGOMEk9ZmLRMOy
9u6VR4UYwLJhWT2XQMPZm8cPD2X90z8a0556SoCG3bPNunWLGeCw3VtxFj4a
pnJ6wq84RjBXDovM5Kbhb+TrO8O8GOHgwjl2S04aholdh26XbOobl+j7bbDR
+Z3eNiMnuKZvFCo6n8pC16M2YTPGZ11/79EFZ3MmGs4dzbOJP8EIBhLN/Uv/
qDgrqCjwZQYL6I++tkjcoOI/JU3VX5ZYYVf2nbr9a1QsfKg55xedTz0fWzS7
TMW0jupkwbOssH2v3sfYJSoelZ64EDrEDNp8JFWDBSrm2L/2YHsgE2h2z7yY
+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
wNruxNLZ7JMw8jgy3oxdAndQD6/K9Z2GE7cDew8ySeDeX/riqXJnoM7tmoTJ
hjhuqfizd8z1DLw1tYw3mhfHuTeONDUw28B1NtF4GBDHYvyhQ/t1bIHDJ+nZ
1nxx7HRf9MJwvx34OEd+V88Rx6w/glZpnGdhyipQXC2LPr+ZEDGidRZatRye
KSeL44jcyeT2e2fh6W+FZzKPxPGjkr03bXfbg8rZd09J58WxREtUcF7BOTA3
LolbIYvj8+pBHCs856HDvHTTjCCOTxi9b+Y2PA+nLPG5l7zieF5b70ea93lw
ti/fcpBFHL9IZNvYN34eAn2ry+L/iGFXqIf+Omf4kN00AQ1iuCvq412ljIuw
K7/ZPOqLGL4hZ5h3afwilBe35I6Xi2GlLy5ZWxUuQVNdm1/kJzFsrrJn8mna
JRgf7hIcShPDC1Himz8yXUBCdGBH8G0xXFhzQDSmyxVeSv943uMrht88HdyR
K+UGSvKDzOpeYpjjreHF++fdYJvWUONXVzGM3je/YV5zg8NmY2eVTothw829
4htRV+DO7Zmwhm1ieM3PIWi64yr8mvj3jTAlimuW+gmtzz1Ab77dnmlMFLtU
/i7iaPeA0PVXv/4MimJXidyOSnZPkOc/vNHyVRQnO3xPanX3BDvtJMqjClFc
b7B+1ezQdejyR+e5n4liP7GFy0s0L5ALJc6uRoti3jcG73jtvMAjctxrMkIU
pzw+r1mS4AWCKRH3aoNFsY5C7vkJMW8wrf2RFeIuih97azBlSvhAmdDtBWYT
UVyA+tr8wRcEJC395veK4vaUwKeDwb5gI6/ENgSiOH6+IGG1yRfWdVuFy3VE
cUbKjRyrs36wzYa6M4BKzyfEzTv7oT9kppfdXl8WwXsENAoWgwPgyW4m/sVX
IvicfkB+j2UQrNqMFukli+Dgrb+bTwUFwemAuosBz0XweJHHF6P3QUCreFzN
HS2CDzctB1jz3YG3xjL+tEARbClokvam8Q5UH9v7+9BpEfz61/dj788Gg5Kn
4rPo4yKY5/TdfftjgiE8hufA96MiWLRY+v3x+mA4+q0jxemACI580h80vS0E
+m0cT/ttE8Fl+Fk9OzEUli4E12cIiOB9vzP/9I2GgfX9i96z3CJ4rTIzJ1Hm
HhRlmitsYxfBoa9uFE7b3YPAGXJQ2YYwvrZX00Wv7x7web7S654UxireIzKJ
vfdBLqDmNWuVMNZ6E2Vf/fcBWMRwhdp5C2N3rZVdby0iIacGWEs8hPHtu+fs
TvtGgsCaR6D4FWHMTUFO51IiocF2wLfLSRgPePYF3l6MBEOlvKumFsKY5cUR
Fv74x6BZdOaUrrow7u4ObqKt/QcR04+7o5WF8XWrgNxKxSiYptRYzssJ41bX
mm0NVlGQcVfz8FsJYfyh5eNDwbwooB5i3yfLJYy3v1xB4deiQeBntprACBmP
6SVncbI/AVfi6JvLP8jYjak60mvnE2gwEleq/07GS8obzaeuPIHQN3dlgtvI
uC0u5mvQ9yfwz+OkyHopGe/YOOtwIz8WptlZmMafkrGeAhHXBD+Fhi3HO0sP
k/GxhvTgyHvPYc7e9nrBQTJ+hTxO+3Y+B5HY88LvjciY2nvHSpSaCA5MXtYv
d5FxAFPxutvnRNjoiu27o0jfnxVP9Pkk0d8bPSMHGOjrsTPwita8AIsPP4P3
rJEwE5FL5Nb8C/CZnFTYuUTCT9WPKh2UfgnVFmsXVKdIeN/PIQZRr5dgqyQx
zddNwk5VVXPJaskQ0XZmqf0dCcuqho2h7BT4yO70pCGDhAkucrzXfqZA7y5X
3apUEraY/PhdlJQKiq/8fT4+I2HR92vtNTdToexm4mZsCAmbfB1krDFPgznZ
QTYbWxJumPauUOZJB4sbDsLjfCRMfNIoVfzrDTys9O3bxkXChn9KFtaVMqFW
MDr5LisJR9kznC51zgT9zCp1mXUi3i9QGt08lgkKg/LGNhNE3NPdGbh9KgtW
TSa8OiqI+PLxEnZf9mzQjmUEmVIiTuOOiR9Xzga3EVFW989E3LIWQ35ung3D
t0wi+d8TMbfOf3kjMdnQmPfmtclzIk5k2AxaUH4PSVKuPdiLiJ/YHxG9fTYH
ei4FJ/F7EPGFq9drP4blAOnTcycbNyLOPuBjsTsnB+4da55bc6SP4z3SwJIL
10I1uLcfI+IgB64iWmYuGM3N7czaQsQlBdu4+7k/wO+qGwlxP4Uwz9AxtxK+
ApglnQsJ6hPCh9yVxO2MCmDO0fzq5W4h3Cgnxu/hXwDLrHL7DJqE8E7UaLc4
UwBMRm1T45+E8OjE53y37k8gUq26SzdSCE8w33VrKS2EPdWDPV0ghC2toxYC
pkphL7mxEusJYav8leQmUQz7nQreZugI4eRQQbfE3RhM2R4F+qsIYXiUtcoZ
jOG40S5leWEh/HBj6SMn/UngUh3j7TlNwLmuOsFj5uUQU31QhJhAwNp3pcVu
/q6EKIXQVlIsAbtcSjBcEqmCyNDKe8L/EXDLd9V9+XurINxk94ZYGAG/yHwg
wJ1QBYFNaj+pngQc+bA2cu1wNbh1CWaqmxHwlozhqxzVX8B49Csc3BDEDnzi
K+nDdbDK6nA+8IwgrrBuU0labAGeW9n7ek4I4nurVPs8wVaQWl6X0bQQxNzD
r7MGt7SCwWT0j0ETQXygYEtxsFMrhDZ9sTbQFcTMPc/mFrpbQfiJiimDkCAW
sYvS3VreBtqK8xr+NQL42U41xZCUDnAzCVz11hLAple+h8k86waT6hfrLmoC
+NPANqJ7STfI7inbtFUSwP4nRvoaB7uhewcDs5G0AJ59MPUsU/EbICV/bgK3
AK4766THkv8NKAILuhZV/Nj60uQioasHzt0f8s2T4ccR+jufWUn1gUgQ7fZT
UX48P/2VZGvYBw0+Z+8G8PPj7cyxN72d+0D74sAD0zU+LFB2QmQ0pw9YDnx/
PtzGhx0zgu6/Ne6HNLZ2TAzkwxWTp8mPvQZg/HY5i+cPXqxVmnD+298fUPWa
eoz9Ky/Oq9Y/O8A1CC9bA17ENfLisRsGDSuSg3CKCvoln3kxi+bNzct7B6EJ
F95gj+bFJ417Gu0fD0Luv7zJuAO8OPL+pfvLmj/B3+9VS0kOD3Yob6Tm3xuC
U6ls0kde8+DLrnIzJ14MgW6j4+WhRB5sMmdpRikYgj8SslwcD3hwQmW8P3V0
CByKkgyPnOfBbYIzISuGw3BgLe7jkDgP7tB5YXOEfQSI3uHxHHe5cUcFu7jK
21G4nRap2erDja8Tp2tsG0Zhuj2mJu4KN5YJel9YPTkKtWovFpRPc2Mxp3E7
ZcUx8B/+YGqmxY2/45NskDoGY4cG1iMHuXDB0cDduunj8Fle84y4PhfmLx1I
Em2cBAWL7fNDWlw4N/yhQvTsJETd3hWWqcSFjXfzKWoQf4Fbr9GH3SQuHJmG
N8pO/QLZx6d47aY4MXN42FujqV/wYONOccpTTpwR/cT/FuE32HV8lVT7y4Gd
A58u1F6bgQqZW0flf3Pg1UpVXu2nMyB/TT5EaogDr08VupXhGZgS9Jzla+bA
fFHLEnLss+B1iFAxk8aBtaauvo+znIWIOlPn91YcWHHv0PnPS7NQhstytD+y
YyU+91frZnMgK3BhTDWTHZMap3fdcpiDUFsBCbmX7NjQn22rzM05MN+0uUt6
yI4bWFlZm9PnoGfn+vElR3bM2T3B+IF1HuY+btvIJ7Hjz/dNTgdXzQMt683+
nZ5s2FA/O3jVehHeql6rHrjEhtk+qL/e774IOzL19t2xZ8MHx+3+pN1bhMNv
avc0HmLD6VvfjT8tXAT/12O7bZXZcI+bRJGV1BJ8T5XRDhpgxaUNr520x5Yg
6vkzSv0BVvzcuGdbctgyUKTOJbohVhyd/Pfth5RleJOgLEXczoo9PLSaxkqX
oTz+k/gZWVb8+a7kkaylZZh9+pU8s8mCsyKvkmodV8DsiRCvUB4Lrjpsx+xq
sgpsEfdXTkqx4JM0uV3XVNaBRlop1SGyYL/YwhAWs3XQf+oULMDFgvMkRfa/
d12H6ykGQtWLzDja6tO3UznrMFrwV3VrIzMm37mlMaO3AV8Gz9mx+zLjm9cV
TI2PbEKo1q4vud+YsPmNDAl/UwbE+XUqiieaEW8danKuaWZC5uE+qf/dZ8SN
PP16SUNM6LEBx0exQEas/GWn7f2/TEgiU+arohsjFl63GkmQZkZqt0+K7jvA
iCUOXrcvusKMjqrUJPhtMODV4cmYYTILenYrOW3akQEHuuWJ773Cik4dzrvy
4vJm6TuJ/vYiaw7UsinUzHdqs3STsetAwVUOtDfr2hZf483SfC/215VhHEiN
S2vSSmazlCuyJZ3wmQMxVb4/x/Nto5Rw/7nwE3FOlL79ndWNvRulI41r51N+
cqIlqYxdZuLrpR6tibJ1/two8ncix0rNSintoqCXxwwfYjv28JpH6UJp2I+o
qRsfhVBpQ9Q0kWe2tKDI1u/efhHkKrnLO2dspLQvTSyNVCeJ3NQGXXMbv5bK
SHUxX/xCRdDw+u2Jx3ml9SZeQVy+siiOsL35kXluaYB3p+q9EFk0f6Jyppor
p/SOm4oZ23+yyKy++OxFtnel+FR50MJrWSSxqeAkM55SWlCtHZT6VRZRboQP
ZLlblt4x0GUx1ZRDwc5ZUDGaC/zlWZlKw3Io1ZzpyYx6E+y4RRFS3aaAZtML
HPi/NAFLuUTkU1BAesxumuo2zcD/Zisn0wEFNP79t9N2oxZICdKYLjqlgPwi
TjLd8GiF09rzGz8DFFD6itaOpZZ2YDk7taOyVgFt1I+mLYR1wwdOsdBoS0VE
Wyl7cKezG2iVdcNcNorIWD7Bg0j9BpKcH5CXkyJ6HHBsj3bBN5BlNY/Vu6GI
FHVw37XRHjgj1lpuGauIjj6PI87v6QOXyMPWr7oVkYWufNnyBt3H3zpdWDqi
hPj3c+sxyQzC2VBGRS5rJVRnOZvDbTwIiv1VdgQ7JWRw7XOKFN23L9uplzO6
KiG1t+ahe+V/QqOnaINDmBLikL1xKMJ8CGKP2iQfKVFCFZqna+KuDUGIw7u1
4kol5G9gYJAcOwRdIiFVkvVKaNGGW+vjzyEosR4uzv+qhH7GJZJ7rw8DH696
y7FZJVTMX9OnkDgCM14n3l2UVkZeUllWWytH4ILf51BJOWWkveVxs97ECDz0
dGOoUlZGGSany8y0RmFOtG11RkcZxd6dTbn2ZRSO23rff3VQGbmvibiUzoxB
NlUpMthDGW3h2hyuIY5DwNV7ehe9ldG4yNCZth3joDwpo7bHXxnZbss6NBI0
DrLrFWPNIcrI9KqBFrfIBHRMb4ideKqM5McurFqhSTDNsO7KL1JGiQMfLUKc
J8Ht9PVNcpkyEulmfpcfMQm/SMdDHauUEXdtwjmRwUlwrftyrr1RGc1mtDZ8
u/0LEpydezb6lNHFZCkFroxf8Pe8z62hQWU09OzSbb22X9Atknr104gy6gpn
3faMNgWDMx9MtH8ro0LXHYmnK6ag13jN4NAanY/zwSvhv6Zgfn5SKm1TGb21
bT9WLPQbXugMzU0wqqCkw5c5pBx+g1z5ESk9DhUUrPni6gDLNCxJcI/wEVXQ
P+Xpev4t0/DeW3JLH1kFecnslEeW0/BOZmtwvKgKukTs7ElKnYaNgTXPKSkV
dHiJY6+90QyEqft1limqoNppy+ePXWfAzf5UA7uKCtoz9nK5PGYGnBqqenW3
qCCd7l1ZMmMzsPRgj5LNVhV0fLySOYN+LkmtX755VEsFRTn80igXn4Wlv5xR
mjoqiPeM7v05w1mYaL9OzddVQSbfbAq4TsxCt1/6exs9evyWd0doLrOAhW2u
LO5UQQzmbXAsiv6/Y0nFnL4K2lW37HIpfRYMjO/vskYqyNtI+mlQ0SycNAnJ
fGuggub0XRZyh2fhBGdUgNxeFaRe+JjasDwLio5PNo32qSCX7Z/Mh3n+wO6j
nhOWRiooPXfg5jrlD1iXfnM/sl8FjaizvSbq/IHuvltpusYqiJap2qV64A/Y
en9y5TqggmwUjzHvO/MHrsT/t7eSjp+leGucufoHlvOqFZxNVFA3JemM590/
UET8e2GJjokJ1fcexP2BD33vht0OqqAjor/zU7P+QMSpJu0uOn4YLTRSXPYH
Fti356uYqqA6QT1CV+cf6GddzXejY/aHdjA98Qdc9UIdX9LxXq4QF7bNP7A/
TOtbBR0HBGfFSRHmQIK8lt9Ox8VMHdXb5OfAwrD2cisdp0t9tl3SnQOFrp3X
S+k4Si9p+cPBObB1kK57/v//rYIjPW3mIMS8n3iFjl3cXZR1rs5B1BslmiYd
n3h4tGIhiH5P2OcwM0yP1zBD93RezByki85Eh9CxWrXU4rXXc3Ay8ra6CB2L
/WR5qFU0B9fKS3ZF0fNn25yUn2+iz+9XW1ij8/VHtLU0Z3AODlT+sThEx706
+SfcF+bgo45BZzid75ojCX+2ss/D1pu5qvl0PfIuB937IzoPYzOzE810vRLD
Lsi8V52Hdcleu266ntfLdCw1js7DERf+gM+GKsi+T3x6xmEebqydvxy9RwWZ
rTCGvLsxT/cniSY7en3Ibm0qUEuYh4zsA3u+0OtJwCzvyPS7eSD9+bNpv1sF
rTs/ncwqn4cl0v4jM/T6a09yktgyPg+mB3/G9NDrtaTI9MPU6jxYjHOO7Niu
gjK6Nc0zeReg7/EDmVB6fQcK/LulorUAMVIMklP0ftAIeDKk5L8AIVVv6z4o
qSCJeD/fiYgFCD+bn+apQNe34BzpdfICeNxrY5GVU0H9M+r7FWsXILeVVnmM
ooIe2NZkyBMXYZD0CK+T6P17863hqPwiHGW+WARCKsjhSVRv6o5FMF7avHZN
gN4fzXZ8craL4Bco/Osdlwqa1F+5KpOxCL8Yu1Sc6f7RdXKAa6hoEU4Tkaos
3V/Krlclv2xehAMhM911f+n++jayk7pIv7ed6HDqnFVGRlLKOyhoCTTvXfPj
/KmMkjdOMkh2LcEwj01xMN0PXfkWOa9MLkGdZaRKJ90vdaUfCVVsLkFNyBBV
sEAZNaEK+QsKf+GaHKHR6K0yWg5SMfvg9RdW07rZA+Po/su1Hmcmvgyf0kPi
KC7KiCwek5ykvgyKaaff0ZyU0aCKRta84TIcOvabmWSnjK6bOeA4l2WQ7Iiv
aDimjF5ENIyOFC+D02vFqm16ymiJnKDlb7cCqnzpP14yKSOssH13q8cKlL3X
qz+7poTu67YayYatwKnQ3hyeBSVEOcl6su79Cngwst/VGFFCBxMuB5CZV0G9
85hZSbUSSpLRb3ybugp11WMP7txVQiYaA04Dk2swN06tOr2oiCp/6PZ+21iD
YerztoNTimh35OMjHQLrQMmP+qM0pIg05vbtqt22Dl8Oe5ALWxQROS9TMDdw
HTJcg3ZYvlFEP7f7FAWLbUA0i+ZlJfr5fxNIBDWTTajaHrrxJF8BWb1KtSmx
YEBOd+P99+2RRwlnsle5bRjQd0GpWeZt8mhYqDDG+jwDmj6vlFqkJI/cA1qa
FrwZkC/p+ICEoDx6aL2mr5LIgAQPiar4DMihKu4j0rETDCjn3Pv0Cz5ySPvK
+sBVf0bUWGfo7ZcuiwR3HDsrl86EbhR+yqqeoqFMp1s+q1tY0e6+/7ymxyWR
/L1E7uJQdmQX/D0qJomMZFn1m/48ZkeHNUu8VALJiBrQGyGfwI5SvPrU48+R
kcR1UXLEe3a0ltofby9PRoL2/1HO9bAjR76BI55ZJLS+I0SHU5UDxboxMZ+u
IKL2CVdby2YOdGsmmpa7QEAtDry0e9840JcHTOai3wioaeDNcMkQHf8XLPG8
mIBqOscvKC5zoEzC/EZYMAGVlNl7rFE4kXrBlvcuZALKiLMKe+HOidqa7Sp9
9ARRwAH93N8kLsT8Re/6lA4/Cn2p93VOmgthmcOuXSz86NHatrW/SlwoVOs/
ju/tfOh5lrohkz4XejT0/PVndz5UJEhtJztxoU7Dr6/a8nnRyjfmefjIhYJN
NYYpO3mQ+8VazcdW3Ch7JcSHfJUT+VRUWT2x40YvWSZHsCEnui1R7hN/kRtt
MX4u5ErmRBFNn8vT6PfmbcdZX0UXc6C3mplHC9O4Eav3dbNKAgf6tfrQfXiJ
G+nLiXrWN7Mhh/sWOdue8KADnax7D1iyIMM8jfBHSTzophglcU6LBdH6eJzG
X/OgIxwJld8FWdAPtSrRp0U8SJzxW0JkAzM63aZze2OQB+me+Pbl0G5mZCEq
fJj+1ET5L067KqswoX2vvv0+Us6L2JuVRyXVGZBsy4cvGfW8iES7pHNBgAGx
rES+YO7kRSxXFBQ5h/9BuYmJ5YcxXnRDy2zL90v/QH/6c5EILx96uXyX9DN0
E7bpxN8fOM6HlheJiiZl6yBfYaN0+Tcf8i2cSt7pTO+70ajCR3/5UETeqdo8
jRWo4Kw3y2HkR2u6e10T/y6D3eHt7n9J/EhLKMnX8dYyPO3jL7ytz4+ESszj
L8f8Bf5lbBrziB+99Ayy3WBcAhvxv/0FcfzIejNE907nImTqb7n6PZkfsVsJ
dIykLYLJ3bhoSgE/cs9fbs/auwh3CO79GT/40WWji/G2VxfAN0awYEBEAMlq
1MqlLc6BTLoq4x9JAST8s91rf+Mc1H3ab8IkI4BOZYh99H41B6J9fr2yWwTQ
zW3XLcxP088xmUmGiwYCiH+b20uXD39gNrv8wMIFAeSoxXXqusUsONZf+85R
KIAa7U50nmecguVK/38VpQIoWujurstFvyC8JEzmVqUAei6v7Dvk8wty3ide
WmwUQAwPljpC1idh80n92uAPAcRTc0iJS2QSYhxkJArZBBGrj3B3uME4VG+0
nb58VBCN+T00edo+DNZ/+wIUjwuiFm3X01yJwzA1O54ydEoQvbGTepruNAyE
4c0pa0dBxHTusGzk1BCk9nEKki4KomNHsMrJjCHQ/UrUaXEVRHvE3wpyOA+B
TZ2yn5GXIOo8z7J+fOYn/KnQecHoJ4iujmzEn/j0E+4Uo6qi24KoP230WH3w
T/o5a8WrdV8QCb86cvSL4k/YnXF26/QjQSTx7aNu6fIgtCS7WL6OEkSxP22Y
C+oG4VzCDW+HOEF0NtBpnvxyEJZiAhOknwuiTSWrnLTAQZDX0OxvnRBEHX27
jz6T7IMSkSlNz2lBVGudSdla1QtWjGkhIvOCqE51WaT5Wi/97mTbW/hXEDlm
bpOhqvZCcJvoVtt1QRR9+Ne/C5PfQaqw/S4TIwGlGW1ZHMz+Dh+TH/SkshKQ
o6CjabPPdzAP369+gIuArnmwzkWi7zDmwXhnio+AGh/tbd631AMBZwq7HwkR
kJ35zy+vknpAxMhzi5YIAYWr2PerGvRAtpp6YJcEAc341BBzv34DY+GJLm8q
AX3qzNj47PQNfvx7qSIpT0DcUSb64dPd4DV+OgArE1DHLxlfgavdkP6pRYld
m4CWyi389IO+Anp5zz9Dl4BC6u4l3RL/Ct339rab7SagPalVHqc+dwHH6QLf
KCMC+u36o5+BswuS9rq3bj9IQOunrCsz8jpBd4uq/PdDBGQS/Lvk8plOaCGN
+vhbEJC32YhjHk8nOG8mNlOtCWhL1gnzmfoOYBizlq06Q0CwmcWemdABsc1C
3s72BOTyX4ipnEcHaBQ0NnKfJ6CUz5d9Pu7tgJqkENq7SwRU2DPaL83XAXZh
BjeOXiGgrarnoyxa22H56lr9ogcB9TY6PzQKb4eIkx8ocd4E1Ky5fuO7fjso
Gbp57vInoM7Kj3yjo21QrqJUNxBIQBGJB2K9b7XBSeKQVFAI3ed5bNyNyW0w
tx5/TT6cgHzdojNzP7TCvRGrmtoIAjp29bqD/rlWoDUJSF6OJiCR0P8WecRb
4fPHuqsCTwmIqMnj0fGjBY4m3qnOfU5APrXf30i/b4HJEH3x48kEdN8lx1g7
pAUCryy7rb6i83fdhDPxRAuIWedUJmQS0MRRlbIJtRbIMXARNXhPQGYLaSl3
+FvARFnedfgDAQUUubzsYWiBn4Qf5SGfCaj00JmGob/N4LMWJ6xSSkB1Xz8l
rdPHCcPHXJoqCGhOw4k7n6cFMhp4y67WENDbOaFb4eQW2PPhC4nUSEDMrnZy
3wgt0JNw+2JBKwHlheuNDjO1gHvwztJTXQR0I+mUZ2pbM3C5LQr96yEgoazH
moOhzfDy+DvnlwMEpF/xL2mPRjPooQvF+4YJ6JzmYwNyQxO0KcoQJsYJiGOr
e92UTRNcEuxzCv9NQMhKd5vwUiOwrMYUqs/R+VpIKr7xshHifx4WaF8iIBml
lLx450bQrudyvL5GQNEd2TctdjdCQ27lJ1EGIRS+KX2XJNkIDvH+fMUsQsjT
PsFSnLUR1u/onrPjFEIz9y6pPplrgKjLc/nMfELIZ2T95VxnA6haZfK8Igih
/y4dLW+paID1nf/tficshOrO/43yb2mABqqPa76EEOLc0bagy0OPh/1sYilV
CLmPGD0ONGsEl9/7W77IC6GI+dsHf1xthF3taowtKkJoR1lw0v2bjcDziaTZ
rSGE/MM0LvO4NELv83X7HzpCSOqP3scLqBHe3Bn6b1xPCJX7bec4tNQAPhfr
KmdBCOlqc9CO3WwAk8PvF5f3CqHxoIkXUSP1ILYtVp7RRAiFGry6LmxRD5Pi
t45zHhJCJtZNu5eH6uAzo1OooIUQarilVrQQXAf3xkw/iVoLof3rebUP99XB
yUatSaqNEEob5Q2IJdeBcq6YuPI5IXSx2Xt8ZLwWVmMZTTWdhRDTTt4Dmqm1
UOc/7qt3mT6f8eRu8sVaeOrQnLXHXQjJvc1i1D9cCxdMPvab3BBCxqkLT/kt
a0FXI4H/mK8QenOD9PvIhVrgIN9Bp24LoYFxvFpzrxa61y5ePRcshEaT0p5X
JNdC+uCRl5fuCyGJXoihPasFry+67dcihFCQ5WBvB30/4yxpFt9o+vqZEfcd
xWtB5D82nTtPhVClZEp2VFoNjHv9dgxPFEIhTP91LYnXQIFNR0xUCr0evFJe
DAZ+gdC9hV/iXwuh1b+9xf0j1XBC+eVyylu63gGDoXuPVYOCQJhSVq4QOtap
JMY5XgW0OkejXAsi0qZ+WXsnVwr9T3YddbQmIkuxu73TqATiHIVshG2IKI7k
tbtDuxgstCYv1NoT0apNy+EwUhEIMJZ53jxPRBJVLAYufz9DQ9OT21tciIjN
tvn+nulPEBLv+mDgChE5VJR+3KfwCfZc3BcX6UlEL9fcxmafFMDmdolUQx8i
Ms2f5BlWKIDPrPPZi/5EZKIjGPSpLB8822uLXgURUc73/ARFl3zQeJFUYx1K
REwxetonpfNhyvVGB/cDItJUuRhg2/oR0neZ/yiOJKID0sLPnmd8BAcuuSm3
GCJ6+EFLtHDiI1C61/5SnxHRr8mzlr/88+F7ahtzRyIRsaSVzLYLF0DMtdf8
wSlEJKqTakU6WQBHDQLEdV8TUXhp7sGBMwXAx39cYTKLiF5cL9FOUy+Aut4t
WvE5RGRc1fDhYGc+BGewgHk+EW0ZmptS25MPBl7fTRiKiCjW1NMkwPojrO/L
scrBRLRelrhfTeIDFAiF2TtUEdEP6bifxK5c8Bi0dSXXEREK47w93pkD6u+2
+dQ0ERFzzfo+aZEcmPTlDfZpp+PL430R999DmslwpGo3nT+tfI66/e/BXqQw
ob+XiLauXctKln4PkqORryMGiahcUNYqfTwbunOdP+wZJaLbJ381xN/Mhqjb
ULYwSUTqqI73nEI2HD5EbkybISLF7z/cvmlmA7fk7+4TC0Tk516k/TQuG6on
K4a5Vug4neT0R+Y9BBY8nS3aICJi18P9mfnvQT/46rorEwlde/vtTurOHFg9
ZsxBZSehGP1vP2Mic+AjVZrYzk1CLptWf7Uf5MDVmUXpuwIkJMs5bvJwXw6o
FjeobCeR0EP/MIXsN+9h/F7y9glRElKKerF+tzIbUk74GD6TIqGKq0Veozfe
gZ38kUNmMiSk9sh1d6RTFkgsKJz6p0BCbVuEn4Z7vYGvZZtO71VJqMG75aJ1
82t4/KjT/dxWErpyqFBvtDcdzM9k+pO2kZCCZJBS48504FIJuvdFj4RiFT/S
aspfQdWydYw30OM7JEAJNnsFAdUaL1X2klAkvlDwcSUNdkWxv+0zJiFV4xdp
jNlpsHy2/9MjMxIqPUco1o9Ig1z1D1UGR0moyf4O18PuNHDduN86b0VCKd6u
b4NROijX2/elniIh1uPGN5WZM2A0dsfEcTsSijKR+yFx7w28cBJY5HQkIfFW
15jbcplwWnuMoegCPd8vVwf3HcgEEaYSHldXEtpVm3imlDMTOpqjRCjXSOj2
4TI1M+c3EJFwSbbtBgmdn/E7HWucAaaX9mjc8SWhtBPvQtv2pAP7DtFd227T
34k+K7++NKbCiZeI6BFMQgmPSHX5esmQzu089f4+CT04WXXK4/kLWPZ4VDkT
QY/PEmnJ3U8C4/6P8VtiSMiJQb+rWz4JYvf3e1x6RkLeywsUZzoez2Y1e51E
QpeJgb2/FxJBV2yL3FgqCf2TC9/f7f8cQoMsNmTfkNAzpzMDhJwE6J662Wmf
TUJVbtya3E8SQdEqOSvpAwlJ37vTl3nxBXiV1t3t/0xCqE8M22smQ63i3BkJ
TEJJ+SmyZ+tTQOyx6LaTVSR0XY32IW89FS6uIb7YOhIqbmqoFDFOg88OzqOd
zSQkM89wue9rKnA1PSoR6qTr7bxkHOeWAie358cc6SGh5lvRSz37X0JGUr/r
owES+tuaqM/UmwirnGz7G4fp8cpvPPf58AxMrm2R5p4koUP4SnehViw87bX4
azxDQuOniCHEXTEwuc+3OXiBhELUysWz7KJB713yq8oVEprTersMPVFwX6T+
FtM/+n7Ka++3q0VB7+2544iFjOBn09eLX/8D1V+iGv6cZCQV3SC+p/g/8LUw
4CjiI6NvXusSVI8oaCh2/rEiREa2sn2qGWpPQEIhomC7KBkdm6iZeDH1DFwi
8iM8pcgo1vZq6ln9JCha6XfOlSGjscJvj7IUXwDPOTaDP4pk5Kx68U6u4ws4
3bBFVF2NjHiieLbJKbyATB3LPy5aZHRARDGc7XwSrD/3rc3QJaN3l7tffmhM
ADOOlBfju8moJuwQL+PdWHh+td5b3pCMpu7zeCT/ewzTPXNHHIzJKLjoedWc
zUPQ3yum/NKMjMz+rcZO/QiDh1kGTD+OkpH9v66vh5ZDoJ98oUfyBBlV2d0X
IjwNBbWAiJxTZ8iI95tmi051GPhP5N+Lsycjg6F+i9G8EGg6OmD/9TwZ+YR0
y/5suQtSRWw7SZfJqNgHLlxXCQVXOTWhY+5kFP/thZVN5SMoeWj5K+IGGXXl
CsSqn4+iv299K5p8yeiG5KkjXI6xYHc25RlPIBlFsH+ur3z9DLLr6q+ZhJAR
sc3HleaWAAza8wdDw8loZGs/n71HAhxOEJOtjiQjCu/30/9ePYMktj3rzE/I
qJZFLT/n2hOYdbvQYRBPRhn9Ox5QfR8D+haReesFGX24JzFO3B4OEXsK7hSn
kdG0Fndumcpd+PFm4PTaGzJK92vIvfkwADRI7Do73pPRl/6WFOMT/hDgr8Z7
4yMZuVwz3qL/zw9axyxH8grJ6NoeZKNedhNoR/yK5zAZueW5GLow+ID755Ro
jWoyWg4P207S9YFymYbLrvVkZPrMXzbI1w8ID+b3ZbbQ11sXDdjhGQj/Awfw
uTs=
        "]]}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}, 
     GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-10.701752291395596`, 2.791114290013987*^-6}, 
     PlotRange -> {{-10.701752291395596`, 7.195194394075615}, {
      2.791114290013987*^-6, 21.727759695722114`}}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> NCache[{{-9.210340371976182, 
         Log[300]}, {0., 21.727759695722114`}}, {{-9.210340371976182, 
       5.703782474656201}, {0., 21.727759695722114`}}], PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"X10\"", "\"Y10\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7444691003925743`*^9, 3.744470828149317*^9, 
  3.744481967442597*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"V", "=", 
  RowBox[{"Interpolation", "[", "VT", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"T", "=", 
  RowBox[{"Interpolation", "[", "TT", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"LogLinearPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"V", "[", "q", "]"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"T", "[", "q", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0.001", ",", "300"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<-V\>\"", ",", "\"\<-T\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.744468134247365*^9, 3.7444681435327263`*^9}, {
  3.7444692643123093`*^9, 3.7444692815627117`*^9}, {3.7444697021166477`*^9, 
  3.744469702255872*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{{}, {}, {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAYoMEKB6MGz8AAAAAAAAAANP3gQ8B
kBNAJT+eKQEDE8D8TvykkWIkQKx3fdmfNSHA8DnD+z5JLkD/+KBEQzokwO/W
X/YZ/zNAQAi9Vn4AJcB8xqKc40I5QCT3Eri1jSTA+YGrX7ssPkCqr1ENJ4gj
wIZ5PCjxv0FAbFi/TcUiIsBOlDCHFl1EQFkIzcd6qyDADpWH9ELNRkDofkOe
h58ewJnwwPgWcklAYpZPk2rPG8AcMl0L8ulLQO00FBsXWxnA3tWGBF9VTkBT
y8qglyEXwDVqScq5elBA3pWKVJvsFMB33ICZR7RRQHtb0gs0DRPAHnwpNCkI
U0D2N7YWajYRwOXMGMLTVVRAE/6l8g0zD8CokDnXAY1VQF4VmfrXjQzA0IHL
t4PeVkA2+SwPFScKwPTljh+JGVhAeuoH+mSFCMB+d8NS4m5ZQPnbU/F1cgfA
J7o+eQS+WkCQod9Fyb8GwMxv6yaq9ltAMTfmupwDBsDXUgmgo0ldQEeYjzF7
1ATA3qhYoCCGXkDPGuxj1mkDwASw7pNmvF9AvkvP3r3VAcBI8nopgIZgQGon
xWVYDwDADEaXzI4jYUCkEWvIxuz8v4MwbFXHzWFAhFd1ahyd+b+Jc+RX5HRi
QATrMkIwtva/DXD1HcMQY0B5U2Kpuzn0v0QDv8nLuWNAqB4v35PL8b/5TyE5
lldkQCoKv9pTs++/PvUmIkXyZECCMyMU4TDsvzUx5fAdmmVAQG1u4vjM6L+q
JjyDuDZmQAISn/ezKOa/0rJL+3zgZkDhn3PDo4fjv3j48zYDf2dAbKjISpBM
4b+ulj/sbRpoQA9q49rY9d6/l8tDhwLDaEDJ3OCD14zbv/654OVYYGlANmsC
c6V32L8XPzYq2QpqQOSiffrVhdW/wBwv6D2yakAMzDXL4EfTv+ezwGlkTmtA
Yvy87pQ+0b/B4QrRtPdrQGkIHcCFDs6/Gcnt+8aVbEBJQquYvnTKvwAJdKC9
MG1ASanxrnzvx7+a37Iq3thtQJtfRRALVcW/sm+KeMB1bkA9U2Fe9KHCv32W
GqzMH29AoLxGI6zyv7/YFU5ZvcZvQBXS6thEcLy/WScN5TcxcEBkmaegrQW6
vx+PTxCmhXBAV9c3tm5Vtr+kU14dddRwQGP6qw+kk7K/g2NJHdkpcUBsP+Bm
CMmtv6kfBlqvfXFA4Yb7GqnVqb+OOI945stxQOzpPwuU0Ka/zZz0ibIgckBh
7Gwr4Q+hv8tdJn3fb3JAr6C71PI6lr8ZE6v6/79yQIB+++RMSYa/fUrZ4A==

                   "]]}}}, {
               DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                  None}, PlotRange -> {{0.0001, 
                 300.00000000000074`}, {-10.50096388871691, 0.}}, 
                PlotRangeClipping -> True, PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.0001`", ",", "300.00000000000074`"}], "}"}], 
                    "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{{}, {}, {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAYoMEKB6MGz8AAAAAAAAAANP3gQ8B
kBNAJT+eKQEDE8D8TvykkWIkQKx3fdmfNSHA8DnD+z5JLkD/+KBEQzokwO/W
X/YZ/zNAQAi9Vn4AJcB8xqKc40I5QCT3Eri1jSTA+YGrX7ssPkCqr1ENJ4gj
wIZ5PCjxv0FAbFi/TcUiIsBOlDCHFl1EQFkIzcd6qyDADpWH9ELNRkDofkOe
h58ewJnwwPgWcklAYpZPk2rPG8AcMl0L8ulLQO00FBsXWxnA3tWGBF9VTkBT
y8qglyEXwDVqScq5elBA3pWKVJvsFMB33ICZR7RRQHtb0gs0DRPAHnwpNCkI
U0D2N7YWajYRwOXMGMLTVVRAE/6l8g0zD8CokDnXAY1VQF4VmfrXjQzA0IHL
t4PeVkA2+SwPFScKwPTljh+JGVhAeuoH+mSFCMB+d8NS4m5ZQPnbU/F1cgfA
J7o+eQS+WkCQod9Fyb8GwMxv6yaq9ltAMTfmupwDBsDXUgmgo0ldQEeYjzF7
1ATA3qhYoCCGXkDPGuxj1mkDwASw7pNmvF9AvkvP3r3VAcBI8nopgIZgQGon
xWVYDwDADEaXzI4jYUCkEWvIxuz8v4MwbFXHzWFAhFd1ahyd+b+Jc+RX5HRi
QATrMkIwtva/DXD1HcMQY0B5U2Kpuzn0v0QDv8nLuWNAqB4v35PL8b/5TyE5
lldkQCoKv9pTs++/PvUmIkXyZECCMyMU4TDsvzUx5fAdmmVAQG1u4vjM6L+q
JjyDuDZmQAISn/ezKOa/0rJL+3zgZkDhn3PDo4fjv3j48zYDf2dAbKjISpBM
4b+ulj/sbRpoQA9q49rY9d6/l8tDhwLDaEDJ3OCD14zbv/654OVYYGlANmsC
c6V32L8XPzYq2QpqQOSiffrVhdW/wBwv6D2yakAMzDXL4EfTv+ezwGlkTmtA
Yvy87pQ+0b/B4QrRtPdrQGkIHcCFDs6/Gcnt+8aVbEBJQquYvnTKvwAJdKC9
MG1ASanxrnzvx7+a37Iq3thtQJtfRRALVcW/sm+KeMB1bkA9U2Fe9KHCv32W
GqzMH29AoLxGI6zyv7/YFU5ZvcZvQBXS6thEcLy/WScN5TcxcEBkmaegrQW6
vx+PTxCmhXBAV9c3tm5Vtr+kU14dddRwQGP6qw+kk7K/g2NJHdkpcUBsP+Bm
CMmtv6kfBlqvfXFA4Yb7GqnVqb+OOI945stxQOzpPwuU0Ka/zZz0ibIgckBh
7Gwr4Q+hv8tdJn3fb3JAr6C71PI6lr8ZE6v6/79yQIB+++RMSYa/fUrZ4A==

                   "]]}}}, {
               DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                  None}, PlotRange -> {{0.0001, 
                 300.00000000000074`}, {-10.50096388871691, 0.}}, 
                PlotRangeClipping -> True, PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.0001`", ",", "300.00000000000074`"}], "}"}], 
                    "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("InterpolatingFunction[{{0.0001, 300.}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7444691043486032`*^9, {3.744469264911364*^9, 3.7444692823826017`*^9}, 
   3.74446970276854*^9, 3.744481967598958*^9}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{{}, {}, {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAYoMEKB6MGz8AAAAAAAAAANP3gQ8B
kBNAPB23vy2UQsD8TvykkWIkQDP1z8OYhEzA8DnD+z5JLkAddgwbKFFPwO/W
X/YZ/zNA/ziSjWBnT8B8xqKc40I5QOfhfedqN07A+YGrX7ssPkBYQ3YUXZ9M
wIZ5PCjxv0FA06AFhlu4SsBOlDCHFl1EQGJg0IaH2EjADpWH9ELNRkASNafQ
MCxHwJnwwPgWcklA9eZqGhV4RcAcMl0L8ulLQP05niL+/UPA3tWGBF9VTkAC
9Std9aZCwDVqScq5elBA1BgCRfBOQcB33ICZR7RRQC1QaVgSJ0DAHnwpNCkI
U0C5N7cvNQQ+wOXMGMLTVVRAG1Cs34fyO8CokDnXAY1VQIL731JJJDrA0IHL
t4PeVkBYasDFP084wPTljh+JGVhA9HYcKnumNsB+d8NS4m5ZQF72TTms4zTA
J7o+eQS+WkCirOUoxU4zwMxv6yaq9ltAZecSyJULMsDXUgmgo0ldQKoWzw1i
9DDA3qhYoCCGXkAt8O89BB4wwASw7pNmvF9ARNnErZLZLsBI8nopgIZgQDVM
wTTBgS3ADEaXzI4jYUCKm4BkEE0swIMwbFXHzWFA8AUg5P8WK8CJc+RX5HRi
QJHjS+lO3ynADXD1HcMQY0Cq71NyPMsowEQDv8nLuWNALKNS4IurJ8D5TyE5
lldkQDyR+CbUlybAPvUmIkXyZEBjYULz1p0lwDUx5fAdmmVAdlDJj/GbJMCq
JjyDuDZmQDfstQbjpiPA0rJL+3zgZkDk3NpISbIiwHj48zYDf2dAS91CJwje
IcCulj/sbRpoQBQEg8HxCyHAl8tDhwLDaEB9PDlTLi8gwP654OVYYGlAQsLK
aXrvHsAXPzYq2QpqQJ09Z7Blcx3AwBwv6D2yakC2NON9fPIbwOezwGlkTmtA
ablZzhavGsDB4QrRtPdrQJL6V0NTehnAGcnt+8aVbEAT5woGtGUYwAAJdKC9
MG1A5yVb4HRGF8Ca37Iq3thtQBbtvRS0KRbAsm+KeMB1bkA6GuTdm0cVwH2W
GqzMH29ADyq3cJ1fFMDYFU5ZvcZvQPa/SHxqaxPAWScN5TcxcECEhB8GDYYS
wB+PTxCmhXBAp9YCs9q4EcCkU14dddRwQNAjhUN1EBHAg2NJHdkpcUDArbSd
vWIQwKkfBlqvfXFAF5w5VJtBD8COOI945stxQHvvs0XT4Q3AzZz0ibIgckDG
0G+t77oMwMtdJn3fb3JADcn8EI7LC8AZE6v6/79yQKCaBdd75ArAp5vEYw==

                   "]]}}}, {
               DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                  None}, PlotRange -> {{0.0001, 
                 300.00000000000074`}, {-62.80763406410005, 0.}}, 
                PlotRangeClipping -> True, PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.0001`", ",", "300.00000000000074`"}], "}"}], 
                    "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{{}, {}, {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAYoMEKB6MGz8AAAAAAAAAANP3gQ8B
kBNAPB23vy2UQsD8TvykkWIkQDP1z8OYhEzA8DnD+z5JLkAddgwbKFFPwO/W
X/YZ/zNA/ziSjWBnT8B8xqKc40I5QOfhfedqN07A+YGrX7ssPkBYQ3YUXZ9M
wIZ5PCjxv0FA06AFhlu4SsBOlDCHFl1EQGJg0IaH2EjADpWH9ELNRkASNafQ
MCxHwJnwwPgWcklA9eZqGhV4RcAcMl0L8ulLQP05niL+/UPA3tWGBF9VTkAC
9Std9aZCwDVqScq5elBA1BgCRfBOQcB33ICZR7RRQC1QaVgSJ0DAHnwpNCkI
U0C5N7cvNQQ+wOXMGMLTVVRAG1Cs34fyO8CokDnXAY1VQIL731JJJDrA0IHL
t4PeVkBYasDFP084wPTljh+JGVhA9HYcKnumNsB+d8NS4m5ZQF72TTms4zTA
J7o+eQS+WkCirOUoxU4zwMxv6yaq9ltAZecSyJULMsDXUgmgo0ldQKoWzw1i
9DDA3qhYoCCGXkAt8O89BB4wwASw7pNmvF9ARNnErZLZLsBI8nopgIZgQDVM
wTTBgS3ADEaXzI4jYUCKm4BkEE0swIMwbFXHzWFA8AUg5P8WK8CJc+RX5HRi
QJHjS+lO3ynADXD1HcMQY0Cq71NyPMsowEQDv8nLuWNALKNS4IurJ8D5TyE5
lldkQDyR+CbUlybAPvUmIkXyZEBjYULz1p0lwDUx5fAdmmVAdlDJj/GbJMCq
JjyDuDZmQDfstQbjpiPA0rJL+3zgZkDk3NpISbIiwHj48zYDf2dAS91CJwje
IcCulj/sbRpoQBQEg8HxCyHAl8tDhwLDaEB9PDlTLi8gwP654OVYYGlAQsLK
aXrvHsAXPzYq2QpqQJ09Z7Blcx3AwBwv6D2yakC2NON9fPIbwOezwGlkTmtA
ablZzhavGsDB4QrRtPdrQJL6V0NTehnAGcnt+8aVbEAT5woGtGUYwAAJdKC9
MG1A5yVb4HRGF8Ca37Iq3thtQBbtvRS0KRbAsm+KeMB1bkA6GuTdm0cVwH2W
GqzMH29ADyq3cJ1fFMDYFU5ZvcZvQPa/SHxqaxPAWScN5TcxcECEhB8GDYYS
wB+PTxCmhXBAp9YCs9q4EcCkU14dddRwQNAjhUN1EBHAg2NJHdkpcUDArbSd
vWIQwKkfBlqvfXFAF5w5VJtBD8COOI945stxQHvvs0XT4Q3AzZz0ibIgckDG
0G+t77oMwMtdJn3fb3JADcn8EI7LC8AZE6v6/79yQKCaBdd75ArAp5vEYw==

                   "]]}}}, {
               DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                  None}, PlotRange -> {{0.0001, 
                 300.00000000000074`}, {-62.80763406410005, 0.}}, 
                PlotRangeClipping -> True, PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.0001`", ",", "300.00000000000074`"}], "}"}], 
                    "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("InterpolatingFunction[{{0.0001, 300.}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7444691043486032`*^9, {3.744469264911364*^9, 3.7444692823826017`*^9}, 
   3.74446970276854*^9, 3.744481967631249*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
/LNj2LOWR9ncqmvY5LnLgTu9xzCc1pxIl7yGRY3oWG/hG8eUQw3fW9xYxxZE
jol0UiewGHvm/bfHNrB3nuyud9UmMQZnupkpbnrELmtI/ab6D7s+lX75cDQT
6n9/xqX20j+sUVoxwLqICX1UlO2ssPiHOZ+mtJe0MaGbKsw+7z3+YU1S51+l
cpJQucn72fDP/7Awu1SbTFcSsvfhrrqpOoO5T9hYmtswo+7RWrMVlVnMjHQ/
J0KfBWUkHYuVUpnHuvbj977ZbkFGgXntRgeWMbNa2b7fOC9qTnXo7bi7jqUY
kDqLlAURZJfVn8ynQzkxgW/iY0XQE+2mjPYSOjTDp1sWXiiCDk/2e9l+okMP
1pjNfL6KoIz9LGoxbXSofeWyrOmqCAp5d+HT+iIdOvAyurjEYAeyzRguLT1O
j0ylxd8JbBFF21N4shVr6NEFP65xDgUx1HGW6tvSSI96Eg4z0J8RQ4F/jtrc
7qBHY05vqZPnxBCL1JU9ESP0qLfhyvHCG2JoNjElZZmNAQn71exefSOGvsQr
xX7UYUDZdCf8zgyKIcdoc/+jXQzo2OcePbKXOHpQ2Fd+/DcDMs/UZDULFEd2
3y79PT3KgKZ03fvyIsXRLXoNDZ1lBuTzhGR3Mlsc6ZvLMFkKMaK5F+2eMy3i
SGb/4uNwI0aUKUpvWCgsgQZLPa+tdTGiKZYPzdsSJdDPNvo3DP2MyHXjfYRm
pgTqnnxSyjLGiB4O07zt8iVQs9gdIYEVRpTLz+8TXiWByt10W/cLM6EplWA7
8wEJFK4lrHrNmAkV6GD17WKSSLsnU6aymwn93KonGRooiRSpMYJx/UxI7WmR
u2S4JJKy8WdwGWNCCMvmSoyVRGurD9qPrTAhv+yzZ5++k0QZ20665AqR0ITP
jeQ31ZKIdLnpa5whCe3VlO06Mi+JphMqP7iYkpDWzozliRVJ1DP2Pv6KJQmd
3pm9EExHRXlPwh8KOpDQV1djjTJ2KjKNuC7iH0pCzsEpstfEqai0a87mWTsJ
ZYiELA+rU1Ga+LCBSR8JKbP7FBRqU1GQVRdSGiIhVppy0SM9Krq9XMa/OE/M
N/37d90VKhIU8ii1FWBGmrX3xYptqYjJzDFFS4QZXZD38+e6T0VTadb+e6SY
0Y3rFRcuPqaiGoXzN4cOM6MjvTyHc59R0QNDoS1X9ZnRyALNJt2P8ItjX1C6
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
1xhTj7D6uyYK4rZg8DZTf4X9PwszRfE=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}, 
     GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-8.168908745491985, -0.06654254453146091}, 
     PlotRange -> {{-8.168908745491985, 
      6.964935941166049}, {-0.06654254453146091, 63.14113131979395}}, 
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"-V\"", "\"-T\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7444691043486032`*^9, {3.744469264911364*^9, 3.7444692823826017`*^9}, 
   3.74446970276854*^9, 3.744481967710256*^9}]
}, Open  ]]
}, Closed]]
},
WindowSize->{1164, 716},
WindowMargins->{{Automatic, 225}, {Automatic, 141}},
FrontEndVersion->"10.0 for Linux x86 (64-bit) (June 27, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 138, 3, 32, "Input"],
Cell[CellGroupData[{
Cell[721, 27, 2064, 32, 150, "Title"],
Cell[2788, 61, 1323, 28, 242, "Text"],
Cell[4114, 91, 636, 14, 128, "Text"],
Cell[4753, 107, 379, 7, 50, "Text"],
Cell[5135, 116, 306, 7, 99, "Input"],
Cell[CellGroupData[{
Cell[5466, 127, 618, 12, 81, "Subtitle"],
Cell[6087, 141, 294, 9, 31, "Text"],
Cell[CellGroupData[{
Cell[6406, 154, 363, 8, 77, "Input"],
Cell[6772, 164, 264, 5, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[7085, 175, 588, 12, 81, "Subtitle"],
Cell[7676, 189, 703, 16, 99, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[8416, 210, 2108, 33, 81, "Subtitle"],
Cell[10527, 245, 1187, 25, 31, "Text"],
Cell[CellGroupData[{
Cell[11739, 274, 852, 18, 45, "Subsection"],
Cell[12594, 294, 574, 10, 32, "Input"],
Cell[13171, 306, 442, 9, 32, "Input"],
Cell[13616, 317, 3067, 91, 231, "Input"],
Cell[CellGroupData[{
Cell[16708, 412, 5093, 156, 451, "Input"],
Cell[21804, 570, 10598, 213, 65, "Output"],
Cell[32405, 785, 10922, 219, 65, "Output"],
Cell[43330, 1006, 10962, 221, 65, "Output"],
Cell[54295, 1229, 11016, 221, 65, "Output"],
Cell[65314, 1452, 10964, 221, 65, "Output"],
Cell[76281, 1675, 10926, 219, 65, "Output"],
Cell[87210, 1896, 10964, 221, 65, "Output"],
Cell[98177, 2119, 11016, 221, 65, "Output"],
Cell[109196, 2342, 10920, 219, 65, "Output"],
Cell[120119, 2563, 10964, 221, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131120, 2789, 614, 14, 55, "Input"],
Cell[131737, 2805, 145, 2, 32, "Output"],
Cell[131885, 2809, 149, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[132083, 2817, 165, 2, 36, "Subsection"],
Cell[132251, 2821, 1450, 48, 192, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[133738, 2874, 329, 4, 37, "Subsection"],
Cell[134070, 2880, 466, 11, 35, "Text"],
Cell[CellGroupData[{
Cell[134561, 2895, 2103, 49, 180, "Input"],
Cell[136667, 2946, 507, 10, 70, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137211, 2961, 2094, 48, 159, "Input"],
Cell[139308, 3011, 501, 10, 70, "Print"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[139858, 3027, 536, 10, 38, "Subsection"],
Cell[CellGroupData[{
Cell[140419, 3041, 164, 3, 35, "Subsubsection"],
Cell[140586, 3046, 4218, 139, 268, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[144841, 3190, 161, 3, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[145027, 3197, 18595, 454, 2629, "Input"],
Cell[163625, 3653, 218, 3, 32, "Output"],
Cell[163846, 3658, 325, 7, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164208, 3670, 94, 1, 32, "Input"],
Cell[164305, 3673, 132, 2, 32, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[164498, 3682, 322, 4, 36, "Subsection"],
Cell[164823, 3688, 254, 6, 31, "Text"],
Cell[CellGroupData[{
Cell[165102, 3698, 1205, 33, 196, "Input"],
Cell[166310, 3733, 137, 2, 32, "Output"],
Cell[166450, 3737, 125, 2, 32, "Output"],
Cell[166578, 3741, 123, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[166738, 3748, 6490, 167, 737, "Input"],
Cell[173231, 3917, 166, 2, 32, "Output"],
Cell[173400, 3921, 273, 6, 32, "Output"]
}, Open  ]],
Cell[173688, 3930, 512, 7, 55, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[174237, 3942, 211, 4, 37, "Subsection"],
Cell[CellGroupData[{
Cell[174473, 3950, 3009, 74, 121, "Input"],
Cell[177485, 4026, 213, 4, 32, "Output"],
Cell[177701, 4032, 184, 2, 32, "Output"]
}, Closed]]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[177958, 4042, 88, 1, 93, "Title"],
Cell[CellGroupData[{
Cell[178071, 4047, 1103, 33, 121, "Input"],
Cell[179177, 4082, 74428, 1289, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[253642, 5376, 1363, 41, 143, "Input"],
Cell[255008, 5419, 139778, 2396, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[394823, 7820, 1453, 41, 165, "Input"],
Cell[396279, 7863, 52717, 920, 240, "Output"],
Cell[448999, 8785, 59030, 1024, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[508066, 9814, 693, 20, 77, "Input"],
Cell[508762, 9836, 49865, 874, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[558664, 10715, 834, 21, 77, "Input"],
Cell[559501, 10738, 10901, 216, 65, "Output"],
Cell[570405, 10956, 10901, 216, 65, "Output"],
Cell[581309, 11174, 44329, 782, 271, "Output"]
}, Open  ]]
}, Closed]]
}
]
*)

