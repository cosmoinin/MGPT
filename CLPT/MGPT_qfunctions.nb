(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    474703,       9100]
NotebookOptionsPosition[    470853,       8967]
NotebookOutlinePosition[    471188,       8982]
CellTagsIndexPosition[    471145,       8979]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"Quit", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.744753897342163*^9, 
  3.744753899795726*^9}},ExpressionUUID->"ed56af09-f167-4965-a298-\
c6516d5339e3"],

Cell[CellGroupData[{

Cell[TextData[{
 "MGPT_qfunctions  (August, 2018)\ncompute ",
 Cell[BoxData[
  FormBox["q", TraditionalForm]],ExpressionUUID->
  "e1d1b740-bd35-49aa-ad8c-b8d9aecca020"],
 " functions "
}], "Title",
 CellChangeTimes->{{3.5050628362232513`*^9, 3.50506284168414*^9}, {
   3.531497665636333*^9, 3.531497681794804*^9}, {3.647774345060751*^9, 
   3.6477743600976353`*^9}, {3.663000389912932*^9, 3.663000391911227*^9}, {
   3.693145084358066*^9, 3.693145092954609*^9}, {3.693735982220573*^9, 
   3.693735986713805*^9}, {3.701867239716071*^9, 3.701867260440569*^9}, {
   3.7024658034588537`*^9, 3.702465806288926*^9}, {3.703148633922871*^9, 
   3.703148634489955*^9}, {3.704646750509082*^9, 3.704646752163433*^9}, {
   3.704882793486555*^9, 3.704882796644773*^9}, 3.705138340743878*^9, {
   3.705138431793377*^9, 3.705138436599887*^9}, {3.7051755153389397`*^9, 
   3.7051755196762743`*^9}, {3.7051758146569433`*^9, 3.70517581861097*^9}, {
   3.705313384132386*^9, 3.705313389811788*^9}, {3.705485116052347*^9, 
   3.7054851303623123`*^9}, {3.705490566451975*^9, 3.7054905868487797`*^9}, {
   3.7062640289399567`*^9, 3.70626402997397*^9}, 3.7062874135121202`*^9, {
   3.710173838715599*^9, 3.710173857016191*^9}, {3.71119391888498*^9, 
   3.7111939193999863`*^9}, {3.724688768528491*^9, 3.724688774377046*^9}, {
   3.724782196974523*^9, 3.724782199814604*^9}, {3.725012962586294*^9, 
   3.7250129640783157`*^9}, {3.7251824070401897`*^9, 
   3.7251824081906567`*^9}, {3.725184126699469*^9, 3.7251841296006107`*^9}, {
   3.725185310672593*^9, 3.725185311842661*^9}, {3.7257890257045527`*^9, 
   3.725789039078113*^9}, {3.7263097613372717`*^9, 3.726309763894353*^9}, {
   3.7440327410423*^9, 3.744032759002574*^9}, {3.7444507475559998`*^9, 
   3.744450791716119*^9}, {3.7444529222815742`*^9, 3.744452923095623*^9}, {
   3.744453231902237*^9, 3.744453238836914*^9}, {3.7444682550938396`*^9, 
   3.744468273416957*^9}, {3.744471201113576*^9, 3.7444712028553677`*^9}, 
   3.744478413431212*^9, 
   3.7444821035249968`*^9},ExpressionUUID->"fa4d4052-7d34-4ef4-a2c2-\
1be7e39092be"],

Cell["\<\

Authors:

Mario Alberto Rodriguez-Meza (ININ, Mexico)
marioalberto.rodriguez@inin.gob.mx

Alejandro Aviles (Conacyt/ININ, Mexico)
alejandro.aviles.conacyt@inin.gob.mx, avilescervantes@gmail.com 


\
\>", "Text",
 CellChangeTimes->{{3.5057286061376343`*^9, 3.505728628000217*^9}, {
   3.506686870745358*^9, 3.506686885316695*^9}, {3.636286052227973*^9, 
   3.636286063745819*^9}, {3.646579894445087*^9, 3.646579895498218*^9}, {
   3.647084624808922*^9, 3.6470846405693207`*^9}, {3.647611882551482*^9, 
   3.647611886855419*^9}, {3.647620991221499*^9, 3.647620991322665*^9}, {
   3.6630003972950573`*^9, 3.663000407544524*^9}, {3.6933916766336718`*^9, 
   3.693391684895602*^9}, {3.7018672694481287`*^9, 3.701867282087358*^9}, {
   3.724602847159445*^9, 3.72460285507347*^9}, {3.724695359553027*^9, 
   3.724695360983019*^9}, {3.72478218521646*^9, 3.7247821853511963`*^9}, {
   3.725789495267005*^9, 3.725789530176879*^9}, {3.744032654648932*^9, 
   3.7440326608546257`*^9}, {3.74403270547289*^9, 3.744032733553393*^9}, {
   3.7444573418594627`*^9, 3.744457342912662*^9}, 3.744468284061948*^9, {
   3.744470893453539*^9, 3.744470994647352*^9}, {3.744471205866642*^9, 
   3.744471207238018*^9}, {3.744482028035802*^9, 3.744482047502104*^9}},
 FontSize->16,ExpressionUUID->"26b4455f-e05f-4844-81c3-bc68561abc0d"],

Cell["\<\
References: 
For CLPT:                arXiv:1209.0780  (But we use the expansion of \
arXiv:1506.05264 )
For CLPT in MG:    arXiv:1705.10719, arXiv: 1809.xxxxx

If you use this code, please cite the reference arXiv: 1809.xxxxx. You may \
also want to cite the other references listed above.
\
\>", "Text",
 CellChangeTimes->{{3.744451854910817*^9, 3.744451873581196*^9}, 
   3.744468293613262*^9, {3.744470997901712*^9, 3.744471019558445*^9}, {
   3.744471056700426*^9, 3.744471105908955*^9}, {3.7444712236025352`*^9, 
   3.744471404563533*^9}, 
   3.744481330922483*^9},ExpressionUUID->"868a5cf6-a4d0-4134-b07d-\
08e4f74713de"],

Cell["\<\
RUN:  shift-enter on the biggest right bracket \[Rule]
It runs in about 5-10 min\
\>", "Text",
 CellChangeTimes->{{3.744451683453739*^9, 3.7444517249311533`*^9}, {
  3.744471174654375*^9, 3.744471177815798*^9}, {3.7444821090053043`*^9, 
  3.744482119620695*^9}, {3.7446485608236217`*^9, 
  3.744648562404171*^9}},ExpressionUUID->"63852856-43c3-4889-a7ee-\
371aa2a7d270"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"INPUTFILE", "=", "\"\<kfunctions_nb.dat\>\""}], 
   "\[IndentingNewLine]", 
   RowBox[{"OUTFILE", "=", "\"\<qfunctions_nb.dat\>\""}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.744648526887494*^9, 3.7446485533955193`*^9}, {
   3.744752999633754*^9, 3.744753005126236*^9}, 3.7447539052993298`*^9, 
   3.744753977718196*^9, {3.7447562026673813`*^9, 3.744756204466742*^9}, {
   3.7460362423860893`*^9, 3.746036250979784*^9}, {3.746044647054826*^9, 
   3.7460446491108294`*^9}},
 ExpressionUUID -> "43e4d4d5-26b1-458c-8805-ea3dc2d50cdd"],

Cell[BoxData["\<\"kfunctionsN1_nb.dat\"\>"], "Output",
 CellChangeTimes->{3.746036252814926*^9}],

Cell[BoxData["\<\"qfunctionsN1_nb.dat\"\>"], "Output",
 CellChangeTimes->{3.746036252815936*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "\n1. Starting ",
 StyleBox["Mathematica",
  FontSlant->"Italic"]
}], "Subtitle",
 CellChangeTimes->{{3.506693699863208*^9, 3.506693714419594*^9}, {
   3.506694239233597*^9, 3.506694245811788*^9}, 3.6469482653506517`*^9, 
   3.693391932174884*^9, {3.7272635418586073`*^9, 3.727263557530658*^9}, {
   3.727263612299082*^9, 3.727263617969593*^9}, {3.744032532838442*^9, 
   3.74403253445984*^9}, {3.744038915050564*^9, 3.744038915754362*^9}, {
   3.7441275904862413`*^9, 3.7441275911982183`*^9}, {3.744451794177195*^9, 
   3.744451799025074*^9}},ExpressionUUID->"5722d23c-3157-4c00-b8ff-\
9d3116935029"],

Cell["Initializing...", "Text",
 CellChangeTimes->{{3.4456211229641733`*^9, 3.4456211474543247`*^9}, {
  3.7440325433007107`*^9, 3.7440325832374077`*^9}, {3.744755090905691*^9, 
  3.744755094108403*^9}},ExpressionUUID->"ef26b5e7-e60f-4f47-87d8-\
4d55d80391d3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], "\n", 
 RowBox[{"FileNames", "[", "]"}]}], "Input",
 CellChangeTimes->{
  3.50669368198448*^9, 3.744033256891781*^9, {3.744753911589108*^9, 
   3.744753911977108*^9}, {3.744753969493256*^9, 3.744753982840673*^9}},
 ExpressionUUID -> "99080ce5-960a-47c8-be3b-0880dae90a60"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"kfunctionsN1_nb.dat\"\>", ",", "\<\"MGPT_CLPT.nb\"\>", 
   ",", "\<\"MGPT_qfunctions.nb\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.744462722255426*^9, 3.744468308307767*^9, 
  3.744468453611348*^9, 3.744481347666196*^9, 3.744753024488139*^9, 
  3.7447538197927113`*^9, 3.744753875123172*^9, 3.744753994605227*^9, 
  3.744754235775277*^9, 3.7460362659587297`*^9},
 ExpressionUUID -> "95253f92-da60-42ef-af4b-3e714f82dfd2"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\

2. Definitions\
\>", "Subtitle",
 CellChangeTimes->{{3.506693699863208*^9, 3.506693714419594*^9}, {
   3.506694239233597*^9, 3.506694245811788*^9}, 3.6469482653506517`*^9, 
   3.693391932174884*^9, {3.7272635418586073`*^9, 3.727263557530658*^9}, {
   3.727263612299082*^9, 3.727263617969593*^9}, {3.744032532838442*^9, 
   3.74403253445984*^9}, {3.744038915050564*^9, 3.744038915754362*^9}, {
   3.7441275904862413`*^9, 3.7441275911982183`*^9}, {3.744451628567449*^9, 
   3.744451638205625*^9}, 
   3.74445179157203*^9},ExpressionUUID->"d34f82ea-747e-44fc-9b44-\
7558d7b01b5c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pi", "=", 
   RowBox[{"4.", " ", 
    RowBox[{"ArcTan", "[", "1", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pi2", "=", 
   RowBox[{"pi", "*", "pi"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"twopi2", "=", 
   RowBox[{"2.", " ", "pi2"}]}], " ", ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.731703411452982*^9, {3.731927643618544*^9, 3.731927654880117*^9}, {
   3.7319277718634663`*^9, 3.731927793150796*^9}, {3.731927931330085*^9, 
   3.731927969676676*^9}, {3.732045756320426*^9, 3.7320457607888927`*^9}, {
   3.74445310753871*^9, 3.744453111186718*^9}},
 ExpressionUUID -> "4740ee15-4dbb-46d5-ab70-9a9b6c5eb86b"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "\n3. ",
 Cell[BoxData[
  FormBox["q", TraditionalForm]],ExpressionUUID->
  "bfc3bbf7-2990-4427-9b71-15e352d86957"],
 " Functions"
}], "Subtitle",
 CellChangeTimes->{{3.5066863565337048`*^9, 3.506686367684224*^9}, {
   3.506686613966511*^9, 3.506686622692828*^9}, {3.506694266561841*^9, 
   3.506694266695063*^9}, {3.531178815607143*^9, 3.5311788217708273`*^9}, {
   3.531497687011557*^9, 3.531497687778651*^9}, {3.642179479612159*^9, 
   3.642179480092396*^9}, {3.647774532301639*^9, 3.647774535061157*^9}, {
   3.693145116618022*^9, 3.693145116994025*^9}, 3.6933919067536697`*^9, {
   3.693391939325037*^9, 3.6933919485322*^9}, {3.7018673551434383`*^9, 
   3.701867360340748*^9}, {3.702464770521936*^9, 3.702464774128324*^9}, {
   3.703160918641246*^9, 3.70316091921454*^9}, {3.704282117232828*^9, 
   3.7042821203909883`*^9}, {3.7051398579700937`*^9, 3.7051398604013577`*^9}, 
   3.705175929006454*^9, 3.70522789957376*^9, {3.706265525893284*^9, 
   3.706265527587747*^9}, {3.706286563200179*^9, 3.706286564906068*^9}, {
   3.711195898843171*^9, 3.711195908954505*^9}, {3.7246924669451942`*^9, 
   3.7246924745430202`*^9}, {3.725789123301918*^9, 3.725789127332152*^9}, {
   3.725789212601597*^9, 3.725789238651923*^9}, {3.725803865649664*^9, 
   3.725803872614802*^9}, {3.72632131744506*^9, 3.7263213540175056`*^9}, {
   3.7265715411104527`*^9, 3.726571556388267*^9}, {3.727178889772348*^9, 
   3.7271788966050863`*^9}, {3.7276029948487883`*^9, 3.727603013967856*^9}, {
   3.727872503246994*^9, 3.727872525867734*^9}, {3.727872710023662*^9, 
   3.727872715766749*^9}, {3.728055032309638*^9, 3.728055040852248*^9}, {
   3.728055093796369*^9, 3.728055103138357*^9}, {3.728136469784626*^9, 
   3.728136471063732*^9}, {3.74403406544145*^9, 3.744034141807972*^9}, {
   3.744038948677055*^9, 3.744038949227332*^9}, {3.744112064001295*^9, 
   3.744112064114431*^9}, {3.744112358945138*^9, 3.744112359137405*^9}, {
   3.744127571590302*^9, 3.744127602094096*^9}, {3.744315452632174*^9, 
   3.744315457734589*^9}, 3.744467683332059*^9, 
   3.744755073498396*^9},ExpressionUUID->"fa02b21b-dd17-4486-94d3-\
5a0edd824904"],

Cell[TextData[{
 "Dependencies: sections 1 and 2 and ",
 Cell[BoxData[
  FormBox["Q", TraditionalForm]],ExpressionUUID->
  "72a26458-2888-4d86-a391-bf46ba540ccb"],
 " and ",
 Cell[BoxData[
  FormBox["R", TraditionalForm]],ExpressionUUID->
  "949e44eb-97ca-4bc7-af50-76aaf6fb4bf0"],
 " ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],ExpressionUUID->
  "d57d2bbe-109a-4b21-aba7-3706d75c97b9"],
 "-functions and power spectrum in: \[OpenCurlyDoubleQuote]kfunctions\
\[CloseCurlyDoubleQuote] data file."
}], "Text",
 CellChangeTimes->{{3.744038879277132*^9, 3.744038900282072*^9}, {
  3.744038956698884*^9, 3.744038960611829*^9}, {3.7440389940770693`*^9, 
  3.744038996437027*^9}, {3.744039814149437*^9, 3.744039823260783*^9}, {
  3.744127278585693*^9, 3.744127301496006*^9}, {3.7444508263913097`*^9, 
  3.744450845343046*^9}, {3.744451642693466*^9, 3.744451645765633*^9}, {
  3.7444519573328667`*^9, 3.744452012929335*^9}, {3.7444521440143948`*^9, 
  3.744452153325451*^9}, {3.7444531517225313`*^9, 3.744453177324583*^9}, {
  3.744453212447104*^9, 3.7444532155189257`*^9}, {3.74447995975351*^9, 
  3.744479965623229*^9}},ExpressionUUID->"99dcf024-bed8-4f65-a1b2-\
7c4de5454416"],

Cell[CellGroupData[{

Cell[TextData[{
 "Importing tables (PSL(k), ",
 Cell[BoxData[
  FormBox["Q", TraditionalForm]],ExpressionUUID->
  "e0748c29-dfa1-4577-a7ed-5a7298a0d07f"],
 "(k) and ",
 Cell[BoxData[
  FormBox["R", TraditionalForm]],ExpressionUUID->
  "0c2a17ab-97f0-4a3b-bfca-3373e9fdcf42"],
 "(k) functions)"
}], "Subsection",
 CellChangeTimes->{{3.726324211483178*^9, 3.726324215250126*^9}, {
   3.72674953849334*^9, 3.726749546964682*^9}, {3.726930062878861*^9, 
   3.726930072943866*^9}, {3.727442646302916*^9, 3.7274426496492*^9}, {
   3.727694241026639*^9, 3.727694244364502*^9}, 3.728136618323822*^9, {
   3.744034202517852*^9, 3.744034262491262*^9}, {3.744452191057961*^9, 
   3.744452218296372*^9}, {3.7444691626336946`*^9, 3.74446917608624*^9}, {
   3.744469952376752*^9, 
   3.744469957560199*^9}},ExpressionUUID->"e9905fc3-0f0d-4677-b97e-\
c2cec57b17e0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"QsRsTable", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"INPUTFILE", ",", "\"\<Data\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.744315609102438*^9, 3.744315613468101*^9}, {
   3.7443157563159227`*^9, 3.744315771673698*^9}, {3.744315806272093*^9, 
   3.7443158202968407`*^9}, {3.7443159639142303`*^9, 3.744315964814439*^9}, 
   3.744317949278723*^9, {3.744452352074634*^9, 3.744452359753055*^9}, {
   3.744479976884205*^9, 3.744479979040367*^9}, 3.744648622823636*^9},
 ExpressionUUID -> "7ad74938-327c-4abf-8b27-c39ad701cdc0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"QsRsTableRed", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{"QsRsTable", ",", "2"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.744316122531418*^9, 3.744316187900872*^9}, {
   3.744316288842785*^9, 3.744316289777276*^9}, {3.744316328369667*^9, 
   3.744316339648484*^9}, {3.744316547320757*^9, 3.744316571732181*^9}, 
   3.7443179563345957`*^9},
 ExpressionUUID -> "28b6fd73-f877-465b-a008-cf239d5c0c4a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"colk", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "QsRsTableRed", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"{", "1", "}"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"colPSL", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "QsRsTableRed", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"{", "18", "}"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";", 
  RowBox[{"colQ1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "QsRsTableRed", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"{", "2", "}"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"colQI", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "QsRsTableRed", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"{", "12", "}"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colQ2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "QsRsTableRed", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"{", "3", "}"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colQ5", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "QsRsTableRed", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"{", "5", "}"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colQ8", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "QsRsTableRed", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"{", "7", "}"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colR1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "QsRsTableRed", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"{", "13", "}"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colR2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "QsRsTableRed", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"{", "14", "}"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colRI", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "QsRsTableRed", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"{", "16", "}"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colR1plus2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "QsRsTableRed", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"{", "15", "}"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7443166181715803`*^9, 3.7443166279099083`*^9}, {
  3.7443166588607187`*^9, 3.744316673123776*^9}, {3.744316967510559*^9, 
  3.744317089005022*^9}, {3.744317171131432*^9, 3.744317332240417*^9}},
 ExpressionUUID -> "8a28f2f4-dd64-45ef-96db-ac0b1a9d099d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PSLT", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"colk", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"colPSL", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "colk", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"PSL", "=", 
  RowBox[{"Interpolation", "[", "PSLT", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"Q1T", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"colk", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"colQ1", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "colk", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Q1", "=", 
   RowBox[{"Interpolation", "[", "Q1T", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"QIT", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"colk", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"colQI", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "colk", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"QI", "=", 
   RowBox[{"Interpolation", "[", "QIT", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Q2T", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"colk", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"colQ2", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "colk", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Q2", "=", 
   RowBox[{"Interpolation", "[", "Q2T", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Q5T", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"colk", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"colQ5", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "colk", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Q5", "=", 
   RowBox[{"Interpolation", "[", "Q5T", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Q8T", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"colk", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"colQ8", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "colk", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Q8", "=", 
   RowBox[{"Interpolation", "[", "Q8T", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"R1T", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"colk", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"colR1", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "colk", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"R1", "=", 
   RowBox[{"Interpolation", "[", "R1T", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"R2T", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"colk", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"colR2", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "colk", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"R2", "=", 
   RowBox[{"Interpolation", "[", "R2T", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"RIT", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"colk", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"colRI", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "colk", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"RI", "=", 
   RowBox[{"Interpolation", "[", "RIT", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"R1plus2T", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"colk", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"colR1plus2", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "colk", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"R1plus2", "=", 
   RowBox[{"Interpolation", "[", "R1plus2T", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.744317363024898*^9, 3.7443175840288687`*^9}, {
   3.744317715882512*^9, 3.7443177274578876`*^9}, 3.744317969027018*^9, {
   3.7443181311017523`*^9, 3.744318133572275*^9}, {3.744318179515374*^9, 
   3.744318203019052*^9}, {3.744318248780199*^9, 3.744318337384712*^9}, {
   3.7444568484407053`*^9, 3.744456852374008*^9}, {3.744754663669915*^9, 
   3.7447546722896*^9}},
 ExpressionUUID -> "3c4d670e-3554-4ee3-9bfb-59b1fb7444f0"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAAi8nnPMifQkBulOiB5UZ+P0Ban4O/
f0RAro4Lkj8Bdz9CPXisEvRGQCLoufUhAXE/dGHdEmedSUD9GTinmV1pP7Vv
cPV1GUxA1hBtPzzOYz+7L6aUAYlOQIX8bCBHuF8/eRi0OMeWUEAybxAru2hZ
PxwOLOVq0lFAZJXzF2n6VD9XJGowjyhTQPkl+gWoSlE/dZP52XF4VECD3P+c
xvhMP5r3n8GxsVVAE2hlpeLOSD9XfAxIcgVXQO+YCb7hKkU/HPaPDJBCWEDk
SYMIj2ZCP3mQ2W8umllALD+gcjDePz+5g3Qxi+taQDy9Q5AK3js/AWwmMUUm
XECyfj91bbs4P+F0ns9/e11AH4RqgALbNT/Jci2sF7peQBjNs9OvkTM/k8kN
523yX0BVx1idj6IxP3sgWmCiomBANtanW82kLz+w1jhsvEBhQOPqu6PstCw/
MZ16xxbsYUCIvla0/u0pPyQQ5VFQlGJAdK98fd2MJz+b/Vp7ODFjQAxCU/jy
lyU/Xvsz9GDbY0B8bS4NO7cjP6VzGAw4emRAkRmBwbIoIj9dmCVT7hVlQEmU
PW7hyiA/Yc2V6eS+ZUCB5+y9FO4eP+l8ER+KXGZAJO5RI3a0HD+9PPCjbwdn
QOKd1hLjiBo/FXfaxwOnZ0BXW5KZ77QYP95d7Rp3Q2hAAZeTEwIUFz/zVGO9
Ku1oQK1yK0qBeRU/jMbk/oyLaUCqaUX5rhwUP3FIyY8vN2pAZk+cUFfEEj/H
dtZPsd9qQPExDlEokBE/oR/vruF8a0BANXwUyogQP8fYal1SJ2xA+hqDyusE
Dz9xDPKqccZsQOTMXkjYQg0/jOyhJ3BibUBETujwtqoLP/PctPOuC25AVHwh
hvkRCj/eR9NenKluQH8pswT3sAg/FcNUGcpUb0CIzgIY9U4HP77q/gLX/G9A
YiCwDScNBj91RtpFyUxwQIfbOQdJ9gQ/sZ/mMcehcEAbijhpvNwDPy+2eG0c
8XBAlgicvernAj/TVLzQEUdxQLQxCP6t8AE/sEmUy3abcUBgPQHLWQ4BP8/7
8RUz6nFAmSYtPu5IAD8UNgGIjz9yQGaPtD02Af8+my2WSUOPckBNKWw8iaL9
PhFoJjTs33JAtxaRpVlU/D5+Z3qR
                   "]]}}}, {
               DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                  None}, PlotRange -> {{0.000010964781961431852`, 
                 301.9951720402019}, {0., 0.007391830934044481}}, 
                PlotRangeClipping -> True, PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "0.000010964781961431852`", ",", "301.9951720402019`"}], 
                    "}"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAAi8nnPMifQkBulOiB5UZ+P0Ban4O/
f0RAro4Lkj8Bdz9CPXisEvRGQCLoufUhAXE/dGHdEmedSUD9GTinmV1pP7Vv
cPV1GUxA1hBtPzzOYz+7L6aUAYlOQIX8bCBHuF8/eRi0OMeWUEAybxAru2hZ
PxwOLOVq0lFAZJXzF2n6VD9XJGowjyhTQPkl+gWoSlE/dZP52XF4VECD3P+c
xvhMP5r3n8GxsVVAE2hlpeLOSD9XfAxIcgVXQO+YCb7hKkU/HPaPDJBCWEDk
SYMIj2ZCP3mQ2W8umllALD+gcjDePz+5g3Qxi+taQDy9Q5AK3js/AWwmMUUm
XECyfj91bbs4P+F0ns9/e11AH4RqgALbNT/Jci2sF7peQBjNs9OvkTM/k8kN
523yX0BVx1idj6IxP3sgWmCiomBANtanW82kLz+w1jhsvEBhQOPqu6PstCw/
MZ16xxbsYUCIvla0/u0pPyQQ5VFQlGJAdK98fd2MJz+b/Vp7ODFjQAxCU/jy
lyU/Xvsz9GDbY0B8bS4NO7cjP6VzGAw4emRAkRmBwbIoIj9dmCVT7hVlQEmU
PW7hyiA/Yc2V6eS+ZUCB5+y9FO4eP+l8ER+KXGZAJO5RI3a0HD+9PPCjbwdn
QOKd1hLjiBo/FXfaxwOnZ0BXW5KZ77QYP95d7Rp3Q2hAAZeTEwIUFz/zVGO9
Ku1oQK1yK0qBeRU/jMbk/oyLaUCqaUX5rhwUP3FIyY8vN2pAZk+cUFfEEj/H
dtZPsd9qQPExDlEokBE/oR/vruF8a0BANXwUyogQP8fYal1SJ2xA+hqDyusE
Dz9xDPKqccZsQOTMXkjYQg0/jOyhJ3BibUBETujwtqoLP/PctPOuC25AVHwh
hvkRCj/eR9NenKluQH8pswT3sAg/FcNUGcpUb0CIzgIY9U4HP77q/gLX/G9A
YiCwDScNBj91RtpFyUxwQIfbOQdJ9gQ/sZ/mMcehcEAbijhpvNwDPy+2eG0c
8XBAlgicvernAj/TVLzQEUdxQLQxCP6t8AE/sEmUy3abcUBgPQHLWQ4BP8/7
8RUz6nFAmSYtPu5IAD8UNgGIjz9yQGaPtD02Af8+my2WSUOPckBNKWw8iaL9
PhFoJjTs33JAtxaRpVlU/D5+Z3qR
                   "]]}}}, {
               DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                  None}, PlotRange -> {{0.000010964781961431852`, 
                 301.9951720402019}, {0., 0.007391830934044481}}, 
                PlotRangeClipping -> True, PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "0.000010964781961431852`", ",", "301.9951720402019`"}], 
                    "}"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "InterpolatingFunction[{{0.0000109648, 301.995}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7444627232222643`*^9, 3.744468308555002*^9, 
  3.7444684546071157`*^9, 3.744481348786997*^9, 3.74475302534089*^9, 
  3.744753875823618*^9, 3.7447539959166317`*^9, 3.744754236902663*^9, 
  3.7447550417707872`*^9, 3.74603628493216*^9},
 ExpressionUUID -> "84ffc42f-64b8-404a-b4a9-e3fe2cd99303"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"kmaxQR", "=", 
  RowBox[{"Max", "[", 
   RowBox[{"QsRsTableRed", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"kminQR", "=", 
  RowBox[{"Min", "[", 
   RowBox[{"QsRsTableRed", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.744317363024898*^9, 3.7443175840288687`*^9}, {
   3.744317715882512*^9, 3.7443177274578876`*^9}, 3.744317969027018*^9, {
   3.7443181311017523`*^9, 3.744318133572275*^9}, 3.744318179515374*^9, {
   3.744754713374839*^9, 3.744754715813829*^9}, {3.746036273247066*^9, 
   3.746036275764967*^9}},
 ExpressionUUID -> "978dc4c4-0e36-47a8-8c71-c0d705642b41"],

Cell[BoxData["301.9951720402019`"], "Output",
 CellChangeTimes->{3.744462723692952*^9, 3.744468308831585*^9, 
  3.7444684550532703`*^9, 3.744481349214129*^9, 3.744753025932005*^9, 
  3.744753876370511*^9, 3.7447539965747147`*^9, 3.744754237586911*^9, 
  3.746036287504189*^9},
 ExpressionUUID -> "0b462a6a-c8a2-45e5-990d-88a2ffb6c22c"],

Cell[BoxData["0.000010964781961431852`"], "Output",
 CellChangeTimes->{3.744462723692952*^9, 3.744468308831585*^9, 
  3.7444684550532703`*^9, 3.744481349214129*^9, 3.744753025932005*^9, 
  3.744753876370511*^9, 3.7447539965747147`*^9, 3.744754237586911*^9, 
  3.746036287505331*^9},
 ExpressionUUID -> "0b462a6a-c8a2-45e5-990d-88a2ffb6c22c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Bessel functions", "Subsection",
 CellChangeTimes->{{3.731703373869669*^9, 
  3.7317033766407623`*^9}},ExpressionUUID->"90f3b071-e3db-413e-a7e4-\
e8489caf4ba5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"j0", "[", "x_", "]"}], ":=", 
  FractionBox[
   RowBox[{"Sin", "[", "x", "]"}], "x"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j1", "[", "x_", "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{"Sin", "[", "x", "]"}], 
    RowBox[{"x", "^", "2"}]], "-", 
   FractionBox[
    RowBox[{"Cos", "[", "x", "]"}], "x"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j2", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox["3", 
       RowBox[{"x", "^", "2"}]], "-", "1"}], ")"}], 
    FractionBox[
     RowBox[{"Sin", "[", "x", "]"}], "x"]}], "-", 
   FractionBox[
    RowBox[{"3", " ", 
     RowBox[{"Cos", "[", "x", "]"}]}], 
    RowBox[{"x", "^", "2"}]]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j3", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox["15", 
       RowBox[{"x", "^", "3"}]], "-", 
      FractionBox["6", "x"]}], ")"}], 
    FractionBox[
     RowBox[{"Sin", "[", "x", "]"}], "x"]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox["15", 
       RowBox[{"x", "^", "2"}]], "-", "1"}], ")"}], 
    FractionBox[
     RowBox[{"Cos", "[", "x", "]"}], 
     "x"]}]}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.73153421631081*^9, 3.731534218847816*^9}, {
  3.731534272032099*^9, 3.731534545098504*^9}},
 ExpressionUUID -> "8223dd7d-7038-4e35-b15d-327c2db59346"]
}, Open  ]],

Cell[CellGroupData[{

Cell[" Create tables of k and q points", "Subsection",
 CellChangeTimes->{{3.731703387773542*^9, 3.731703390788002*^9}, {
  3.7317034667810373`*^9, 3.7317034777446623`*^9}, {3.744469149023135*^9, 
  3.744469152883708*^9}, {3.7444708602838383`*^9, 
  3.744470865293599*^9}},ExpressionUUID->"1417643a-1bc4-4c85-8ad2-\
b84f3ee03d36"],

Cell[TextData[{
 "kT is used in all q functions except in ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Chi]", "L"], TraditionalForm]],ExpressionUUID->
  "228a2a22-2d2e-4b79-8313-91c9450a29b4"],
 " (linear correlation function) and its derivatives"
}], "Text",
 CellChangeTimes->{{3.7317035021177683`*^9, 3.731703529206036*^9}, {
  3.744037357251812*^9, 3.74403737120758*^9}, {3.744453025518811*^9, 
  3.7444530304689503`*^9}, {3.744754303683715*^9, 
  3.7447543100541067`*^9}},ExpressionUUID->"39cd8834-e8ea-4a65-9b03-\
e819181486d6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Nkpoints", "=", "1200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"kmin", "=", "kminQR"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"kmax", "=", "20"}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kmax", "=", "kmaxQR"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dk", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Log10", "[", "kmax", "]"}], "-", 
      RowBox[{"Log10", "[", "kmin", "]"}]}], ")"}], "/", 
    RowBox[{"(", "Nkpoints", ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kT", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     SuperscriptBox["10", 
      RowBox[{
       RowBox[{"Log10", "[", "kmin", "]"}], "+", 
       RowBox[{"ii", "*", "dk"}]}]], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "0", ",", "Nkpoints"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sizekT", "=", 
   RowBox[{
    RowBox[{"Dimensions", "[", "kT", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<kT2 : sizekT=\>\"", ",", "sizekT", ",", "\"\<, kmin=\>\"", ",", 
   RowBox[{"Min", "[", "kT", "]"}], ",", "\"\<, k2max=\>\"", ",", 
   RowBox[{"Max", "[", "kT", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.731534863442751*^9, 3.731534897779778*^9}, {
   3.731535107842719*^9, 3.7315351079728937`*^9}, {3.731535520401441*^9, 
   3.731535527685329*^9}, {3.731535621372406*^9, 3.731535633004611*^9}, {
   3.7315761299891567`*^9, 3.731576190863078*^9}, {3.73192705846504*^9, 
   3.731927062622786*^9}, {3.7319274510610313`*^9, 3.731927627967805*^9}, {
   3.731927823077669*^9, 3.7319278279745827`*^9}, {3.732021742977648*^9, 
   3.7320217590460043`*^9}, {3.732021993556409*^9, 3.732022007238514*^9}, {
   3.732022283729018*^9, 3.7320222838280907`*^9}, 3.7320227888572063`*^9, {
   3.732031865499926*^9, 3.732031870642115*^9}, {3.732272714632001*^9, 
   3.732272734156783*^9}, 3.7440206790100718`*^9, 3.744754047293043*^9, {
   3.744754164710886*^9, 3.744754180009673*^9}},
 ExpressionUUID -> "18ece467-e3ba-4f7e-b5ee-53d032610d46"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"kT2 : sizekT=\"\>", "\[InvisibleSpace]", "1201", 
   "\[InvisibleSpace]", "\<\", kmin=\"\>", "\[InvisibleSpace]", 
   "0.000010964781961431852`", "\[InvisibleSpace]", "\<\", k2max=\"\>", 
   "\[InvisibleSpace]", "301.9951720402019`"}],
  SequenceForm[
  "kT2 : sizekT=", 1201, ", kmin=", 0.000010964781961431852`, ", k2max=", 
   301.9951720402019],
  Editable->False]], "Print",
 CellChangeTimes->{3.744462723794423*^9, 3.744468308851663*^9, 
  3.744468455077286*^9, 3.7444813493053083`*^9, 3.7447530260280523`*^9, 
  3.744753876395706*^9, 3.7447539966306133`*^9, 3.74475423762776*^9, 
  3.746036303093049*^9},
 ExpressionUUID -> "19757c38-0b14-4d07-b22e-22ce09be89fc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"qmin", "=", "0.0001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qmax", "=", 
   RowBox[{"Min", "[", 
    RowBox[{"300", ",", 
     RowBox[{"1", "/", "kminQR"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nqpoints", "=", "1200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Log10", "[", "qmax", "]"}], "-", 
      RowBox[{"Log10", "[", "qmin", "]"}]}], ")"}], "/", 
    RowBox[{"(", "Nqpoints", ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qT", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     SuperscriptBox["10", 
      RowBox[{
       RowBox[{"Log10", "[", "qmin", "]"}], "+", 
       RowBox[{"ii", "*", "d"}]}]], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "0", ",", "Nqpoints"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sizeqT", "=", 
   RowBox[{
    RowBox[{"Dimensions", "[", "qT", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<qT : sizeqT=\>\"", ",", "sizeqT", ",", "\"\<, qmin=\>\"", ",", 
   RowBox[{"Min", "[", "qT", "]"}], ",", "\"\<, qmax=\>\"", ",", 
   RowBox[{"Max", "[", "qT", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.731534863442751*^9, 3.731534897779778*^9}, {
   3.731535107842719*^9, 3.7315351079728937`*^9}, {3.731535520401441*^9, 
   3.731535527685329*^9}, {3.731535621372406*^9, 3.731535633004611*^9}, {
   3.7315761299891567`*^9, 3.731576190863078*^9}, {3.73192705846504*^9, 
   3.731927062622786*^9}, {3.7319274510610313`*^9, 3.731927627967805*^9}, {
   3.731927823077669*^9, 3.7319278279745827`*^9}, {3.732021742977648*^9, 
   3.7320217590460043`*^9}, {3.732021993556409*^9, 3.732022007238514*^9}, {
   3.732022283729018*^9, 3.7320222838280907`*^9}, 3.7320227888572063`*^9, {
   3.732031865499926*^9, 3.732031870642115*^9}, {3.732272714632001*^9, 
   3.732272734156783*^9}, {3.7440206790100718`*^9, 3.744020680419265*^9}},
 ExpressionUUID -> "43456817-722b-49a6-a221-c69c1d8ee289"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"qT : sizeqT=\"\>", "\[InvisibleSpace]", "1201", 
   "\[InvisibleSpace]", "\<\", qmin=\"\>", "\[InvisibleSpace]", "0.0001`", 
   "\[InvisibleSpace]", "\<\", qmax=\"\>", "\[InvisibleSpace]", 
   "300.00000000000074`"}],
  SequenceForm[
  "qT : sizeqT=", 1201, ", qmin=", 0.0001, ", qmax=", 300.00000000000074`],
  Editable->False]], "Print",
 CellChangeTimes->{3.7444627238129272`*^9, 3.744468308862381*^9, 
  3.744468455089674*^9, 3.744481349318006*^9, 3.744753026354377*^9, 
  3.744753876740506*^9, 3.7447539966707783`*^9, 3.744754237656323*^9, 
  3.746036314841563*^9},
 ExpressionUUID -> "880b319f-e9aa-4de7-be17-2e625dae1fcd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox["q", TraditionalForm]],ExpressionUUID->
  "42019721-758e-4fa9-a844-e3aa4e501cbf"],
 " functions (except linear correlation function and its derivatives)"
}], "Subsection",
 CellChangeTimes->{{3.731927386527287*^9, 3.7319274000845947`*^9}, {
  3.744037439343425*^9, 3.744037471683899*^9}, {3.744467750542161*^9, 
  3.744467757343707*^9}, {3.744469939296172*^9, 3.744469948874527*^9}, {
  3.744470850397292*^9, 
  3.7444708541341257`*^9}},ExpressionUUID->"202840c4-8c5f-4abe-882e-\
890881e64074"],

Cell[CellGroupData[{

Cell["Define kernels", "Subsubsection",
 CellChangeTimes->{{3.73192873206299*^9, 
  3.731928747346799*^9}},ExpressionUUID->"19d61210-c723-4701-8220-\
4fd5b4547e58"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tildeV", "[", "k_", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{"3.", "/", "35."}], ")"}]}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"QI", "[", "k", "]"}], "-", 
     RowBox[{"3.", 
      RowBox[{"Q2", "[", "k", "]"}]}], "+", 
     RowBox[{"2.", " ", 
      RowBox[{"RI", "[", "k", "]"}]}], "-", 
     RowBox[{"6.", 
      RowBox[{"R2", "[", "k", "]"}]}]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tildeT", "[", "k_", "]"}], ":=", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{"9.", "/", "14."}], ")"}]}], "  ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"QI", "[", "k", "]"}], "+", 
     RowBox[{"2.", 
      RowBox[{"Q2", "[", "k", "]"}]}], "+", 
     RowBox[{"2.", " ", 
      RowBox[{"RI", "[", "k", "]"}]}], "+", 
     RowBox[{"4.", 
      RowBox[{"R2", "[", "k", "]"}]}]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xL", "[", 
   RowBox[{"k_", ",", "q_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"PSL", "[", "k", "]"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"1.", "/", "3."}], "-", 
     FractionBox[
      RowBox[{"j1", "[", 
       RowBox[{"k", " ", "q"}], "]"}], 
      RowBox[{"k", " ", "q"}]]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xloop", "[", 
   RowBox[{"k_", ",", "q_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"9.", "/", "98."}], 
      RowBox[{"Q1", "[", "k", "]"}]}], "+", 
     RowBox[{
      RowBox[{"10.", "/", "21."}], " ", 
      RowBox[{"R1", "[", "k", "]"}]}]}], ")"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"1.", "/", "3."}], "-", 
     FractionBox[
      RowBox[{"j1", "[", 
       RowBox[{"k", " ", "q"}], "]"}], 
      RowBox[{"k", " ", "q"}]]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yL", "[", 
   RowBox[{"k_", ",", "q_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"PSL", "[", "k", "]"}], " ", 
   RowBox[{"j2", "[", 
    RowBox[{"k", " ", "q"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yloop", "[", 
   RowBox[{"k_", ",", "q_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"9.", "/", "98."}], 
      RowBox[{"Q1", "[", "k", "]"}]}], "+", 
     RowBox[{
      RowBox[{"10.", "/", "21."}], " ", 
      RowBox[{"R1", "[", "k", "]"}]}]}], ")"}], 
   RowBox[{"j2", "[", 
    RowBox[{"k", " ", "q"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x10", "[", 
   RowBox[{"k_", ",", "q_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"1.", "/", "14."}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2.", 
      RowBox[{"RI", "[", "k", "]"}]}], "-", 
     RowBox[{"2.", 
      RowBox[{"R2", "[", "k", "]"}]}], "+", 
     RowBox[{"3.", 
      RowBox[{"RI", "[", "k", "]"}], " ", 
      RowBox[{"j0", "[", 
       RowBox[{"k", " ", "q"}], "]"}]}], "-", 
     RowBox[{"3", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"RI", "[", "k", "]"}], "+", 
        RowBox[{"2.", 
         RowBox[{"R2", "[", "k", "]"}]}], "+", 
        RowBox[{"2.", 
         RowBox[{"R1plus2", "[", "k", "]"}]}], "+", 
        RowBox[{"2.", 
         RowBox[{"Q5", "[", "k", "]"}]}]}], ")"}], 
      FractionBox[
       RowBox[{"j1", "[", 
        RowBox[{"k", " ", "q"}], "]"}], 
       RowBox[{"k", " ", "q"}]]}]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y10", "[", 
   RowBox[{"k_", ",", "q_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "3."}], "/", "14."}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"RI", "[", "k", "]"}], "+", 
     RowBox[{"2.", 
      RowBox[{"R2", "[", "k", "]"}]}], "+", 
     RowBox[{"2.", 
      RowBox[{"R1plus2", "[", "k", "]"}]}], "+", 
     RowBox[{"2.", 
      RowBox[{"Q5", "[", "k", "]"}]}]}], ")"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"j0", "[", 
      RowBox[{"k", " ", "q"}], "]"}], "-", 
     RowBox[{"3", 
      FractionBox[
       RowBox[{"j1", "[", 
        RowBox[{"k", " ", "q"}], "]"}], 
       RowBox[{"k", " ", "q"}]]}]}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.731701163610958*^9, 3.731701164333043*^9}, {
  3.731927899666473*^9, 3.73192791585*^9}, {3.731928267798871*^9, 
  3.731928322592428*^9}},
 ExpressionUUID -> "121bd9e6-a3e0-407d-ab5d-999276497e06"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Integrate:", "Subsubsection",
 CellChangeTimes->{{3.731928765531499*^9, 
  3.731928774678957*^9}},ExpressionUUID->"53f32edc-f513-4dfc-aba8-\
a62a4de16fbd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"U10LT", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"U10loopT", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"U11T", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"U20T", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XLT", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XloopT", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YLT", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YloopT", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"X10T", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Y10T", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"VT", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TT", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kmin", "=", 
     RowBox[{"kT", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"ta", "=", 
        RowBox[{"AbsoluteTime", "[", "]"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"qi", "=", 
        RowBox[{"qT", "[", 
         RowBox[{"[", "qoutin", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"U10Lp", "=", "0"}], "  ", ";", 
       RowBox[{"U10loopp", "=", "0"}], "  ", ";", 
       RowBox[{"U11p", "=", "0"}], "  ", ";", 
       RowBox[{"U20p", "=", "0"}], "  ", ";", "\[IndentingNewLine]", 
       RowBox[{"U10LA", "=", 
        RowBox[{
         RowBox[{"-", " ", "kmin"}], "*", 
         RowBox[{"(", 
          RowBox[{"PSL", "[", "kmin", "]"}], ")"}], 
         RowBox[{"j1", "[", 
          RowBox[{"kmin", " ", "qi"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"U10loopA", "=", 
        RowBox[{
         RowBox[{"-", " ", "kmin"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"5.", "/", "21."}], 
           RowBox[{"R1", "[", "kmin", "]"}]}], ")"}], 
         RowBox[{"j1", "[", 
          RowBox[{"kmin", " ", "qi"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"U11A", "=", 
        RowBox[{
         RowBox[{"-", " ", "kmin"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6.", "/", "7."}], 
           RowBox[{"R1plus2", "[", "kmin", "]"}]}], ")"}], 
         RowBox[{"j1", "[", 
          RowBox[{"kmin", " ", "qi"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"U20A", "=", 
        RowBox[{
         RowBox[{"-", " ", "kmin"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"3.", "/", "7."}], 
           RowBox[{"Q8", "[", "kmin", "]"}]}], ")"}], 
         RowBox[{"j1", "[", 
          RowBox[{"kmin", " ", "qi"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"XLp", "=", "0"}], "  ", ";", 
       RowBox[{"Xloopp", "=", "0"}], " ", ";", 
       RowBox[{"YLp", "=", "0"}], "  ", ";", 
       RowBox[{"Yloopp", "=", "0"}], "  ", ";", 
       RowBox[{"X10p", "=", "0"}], "  ", ";", 
       RowBox[{"Y10p", "=", "0"}], "  ", ";", "\[IndentingNewLine]", 
       RowBox[{"XLA", "=", 
        RowBox[{"xL", "[", 
         RowBox[{"kmin", ",", "qi"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"XloopA", "=", 
        RowBox[{"xloop", "[", 
         RowBox[{"kmin", ",", "qi"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"YLA", "=", 
        RowBox[{"yL", "[", 
         RowBox[{"kmin", ",", "qi"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"YloopA", "=", 
        RowBox[{"yloop", "[", 
         RowBox[{"kmin", ",", "qi"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"X10A", "=", 
        RowBox[{"x10", "[", 
         RowBox[{"kmin", ",", "qi"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Y10A", "=", 
        RowBox[{"y10", "[", 
         RowBox[{"kmin", ",", "qi"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"preVp", "=", "0"}], "  ", ";", 
       RowBox[{"Tp", "=", "0"}], "  ", ";", "\[IndentingNewLine]", 
       RowBox[{"preVA", "=", 
        RowBox[{
         RowBox[{"tildeV", "[", "kmin", "]"}], 
         RowBox[{
          RowBox[{"j1", "[", 
           RowBox[{"kmin", " ", "qi"}], "]"}], "/", "kmin"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"TA", "=", " ", 
        RowBox[{
         RowBox[{"tildeT", "[", "kmin", "]"}], 
         RowBox[{
          RowBox[{"j3", "[", 
           RowBox[{"kmin", " ", "qi"}], "]"}], "/", "kmin"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"kk", "=", 
           RowBox[{"kT", "[", 
            RowBox[{"[", "kii", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"deltak", "=", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"kT", "[", 
              RowBox[{"[", "kii", "]"}], "]"}], "-", 
             RowBox[{"kT", "[", 
              RowBox[{"[", 
               RowBox[{"kii", "-", "1"}], "]"}], "]"}]}], ")"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"U10LB", "=", 
           RowBox[{
            RowBox[{"-", " ", "kk"}], "*", 
            RowBox[{"(", 
             RowBox[{"PSL", "[", "kk", "]"}], ")"}], 
            RowBox[{"j1", "[", 
             RowBox[{"kk", " ", "qi"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"U10loopB", "=", 
           RowBox[{
            RowBox[{"-", " ", "kk"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"5.", "/", "21."}], 
              RowBox[{"R1", "[", "kk", "]"}]}], ")"}], 
            RowBox[{"j1", "[", 
             RowBox[{"kk", " ", "qi"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"U11B", "=", 
           RowBox[{
            RowBox[{"-", " ", "kk"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"6.", "/", "7."}], 
              RowBox[{"R1plus2", "[", "kk", "]"}]}], ")"}], 
            RowBox[{"j1", "[", 
             RowBox[{"kk", " ", "qi"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"U20B", "=", 
           RowBox[{
            RowBox[{"-", " ", "kk"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"3.", "/", "7."}], 
              RowBox[{"Q8", "[", "kk", "]"}]}], ")"}], 
            RowBox[{"j1", "[", 
             RowBox[{"kk", " ", "qi"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"U10Lp", "=", 
           RowBox[{"U10Lp", "+", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"U10LA", "+", "U10LB"}], ")"}], "/", "2"}], "*", 
             "deltak"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"U10LA", "=", "U10LB"}], ";", "\[IndentingNewLine]", 
          RowBox[{"U10loopp", "=", 
           RowBox[{"U10loopp", "+", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"U10loopA", "+", "U10loopB"}], ")"}], "/", "2"}], "*", 
             "deltak"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"U10loopA", "=", "U10loopB"}], ";", "\[IndentingNewLine]", 
          RowBox[{"U11p", "=", 
           RowBox[{"U11p", "+", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"U11A", "+", "U11B"}], ")"}], "/", "2"}], "*", 
             "deltak"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"U11A", "=", "U11B"}], ";", "\[IndentingNewLine]", 
          RowBox[{"U20p", "=", 
           RowBox[{"U20p", "+", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"U20A", "+", "U20B"}], ")"}], "/", "2"}], "*", 
             "deltak"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"U20A", "=", "U20B"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"XLB", "=", 
           RowBox[{"xL", "[", 
            RowBox[{"kk", ",", "qi"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"XloopB", "=", 
           RowBox[{"xloop", "[", 
            RowBox[{"kk", ",", "qi"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"YLB", "=", 
           RowBox[{"yL", "[", 
            RowBox[{"kk", ",", "qi"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"YloopB", "=", 
           RowBox[{"yloop", "[", 
            RowBox[{"kk", ",", "qi"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"X10B", "=", 
           RowBox[{"x10", "[", 
            RowBox[{"kk", ",", "qi"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Y10B", "=", 
           RowBox[{"y10", "[", 
            RowBox[{"kk", ",", "qi"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"XLp", "=", 
           RowBox[{"XLp", "+", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"XLA", "+", "XLB"}], ")"}], "/", "2"}], "*", 
             "deltak"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"XLA", "=", "XLB"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Xloopp", "=", 
           RowBox[{"Xloopp", "+", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"XloopA", "+", "XloopB"}], ")"}], "/", "2"}], "*", 
             "deltak"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"XloopA", "=", "XloopB"}], ";", "\[IndentingNewLine]", 
          RowBox[{"YLp", "=", 
           RowBox[{"YLp", "+", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"YLA", "+", "YLB"}], ")"}], "/", "2"}], "*", 
             "deltak"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"YLA", "=", "YLB"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Yloopp", "=", 
           RowBox[{"Yloopp", "+", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"YloopA", "+", "YloopB"}], ")"}], "/", "2"}], "*", 
             "deltak"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"YloopA", "=", "YloopB"}], ";", "\[IndentingNewLine]", 
          RowBox[{"X10p", "=", 
           RowBox[{"X10p", "+", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"X10A", "+", "X10B"}], ")"}], "/", "2"}], "*", 
             "deltak"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"X10A", "=", "X10B"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Y10p", "=", 
           RowBox[{"Y10p", "+", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Y10A", "+", "Y10B"}], ")"}], "/", "2"}], "*", 
             "deltak"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Y10A", "=", "Y10B"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"preVB", "=", 
           RowBox[{
            RowBox[{"tildeV", "[", "kk", "]"}], 
            RowBox[{
             RowBox[{"j1", "[", 
              RowBox[{"kk", " ", "qi"}], "]"}], "/", "kk"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"TB", "=", 
           RowBox[{
            RowBox[{"tildeT", "[", "kk", "]"}], 
            RowBox[{
             RowBox[{"j3", "[", 
              RowBox[{"kk", " ", "qi"}], "]"}], "/", "kk"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Tp", "=", 
           RowBox[{"Tp", "+", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"TA", "+", "TB"}], ")"}], "/", "2"}], "*", 
             "deltak"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"TA", "=", "TB"}], ";", "\[IndentingNewLine]", 
          RowBox[{"preVp", "=", 
           RowBox[{"preVp", "+", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"preVA", "+", "preVB"}], ")"}], "/", "2"}], "*", 
             "deltak"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"preVA", "=", "preVB"}], ";"}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"kii", ",", "2", ",", "sizekT"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"U10Lp", "=", 
        RowBox[{"U10Lp", "/", "twopi2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"U10loopp", "=", 
        RowBox[{"U10loopp", "/", "twopi2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"U11p", "=", 
        RowBox[{"U11p", "/", "twopi2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"U20p", "=", 
        RowBox[{"U20p", "/", "twopi2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"U10LT", "  ", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"U10LT", ",", "   ", 
          RowBox[{"{", 
           RowBox[{"qi", ",", "U10Lp"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"U10loopT", "  ", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"U10loopT", ",", "   ", 
          RowBox[{"{", 
           RowBox[{"qi", ",", "U10loopp"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"U11T", "  ", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"U11T", ",", "   ", 
          RowBox[{"{", 
           RowBox[{"qi", ",", "U11p"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"U20T", "  ", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"U20T", ",", "   ", 
          RowBox[{"{", 
           RowBox[{"qi", ",", "U20p"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"XLp", "=", 
        RowBox[{"XLp", "/", "pi2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"YLp", "=", 
        RowBox[{"YLp", "/", "pi2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Xloopp", "=", 
        RowBox[{"Xloopp", "/", "pi2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Yloopp", "=", 
        RowBox[{"Yloopp", "/", "pi2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"X10p", "=", 
        RowBox[{"X10p", "/", "pi2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Y10p", "=", 
        RowBox[{"Y10p", "/", "pi2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"XLT", "  ", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"XLT", ",", "   ", 
          RowBox[{"{", 
           RowBox[{"qi", ",", "XLp"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"XloopT", "  ", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"XloopT", ",", "   ", 
          RowBox[{"{", 
           RowBox[{"qi", ",", "Xloopp"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"YLT", "  ", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"YLT", ",", "   ", 
          RowBox[{"{", 
           RowBox[{"qi", ",", "YLp"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"YloopT", "  ", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"YloopT", ",", "   ", 
          RowBox[{"{", 
           RowBox[{"qi", ",", "Yloopp"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"X10T", "  ", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"X10T", ",", "   ", 
          RowBox[{"{", 
           RowBox[{"qi", ",", "X10p"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Y10T", "  ", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"Y10T", ",", "   ", 
          RowBox[{"{", 
           RowBox[{"qi", ",", "Y10p"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Vp", "=", 
        RowBox[{
         RowBox[{"preVp", "/", "pi2"}], "-", 
         RowBox[{
          RowBox[{"1", "/", "5."}], " ", 
          RowBox[{"Tp", "/", "pi2"}]}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Tp", "=", 
        RowBox[{"Tp", "/", "pi2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"qi", "<", "0.05"}], ",", 
         RowBox[{"Vp", "=", "0"}], ",", 
         RowBox[{"Vp", "=", "Vp"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"qi", "<", "0.05"}], ",", 
         RowBox[{"Tp", "=", "0"}], ",", 
         RowBox[{"Tp", "=", "Tp"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"VT", "  ", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"VT", ",", "   ", 
          RowBox[{"{", 
           RowBox[{"qi", ",", "Vp"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"TT", "  ", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"TT", ",", "   ", 
          RowBox[{"{", 
           RowBox[{"qi", ",", "Tp"}], "}"}]}], "]"}]}], ";"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{
         "qoutin", ",", "\"\<: q=\>\"", ",", "qi", ",", " ", 
          "\"\<:    U  = \>\"", ",", "U10p", ",", " ", "\"\<,     time= \>\"",
           ",", 
          RowBox[{
           RowBox[{"AbsoluteTime", "[", "]"}], "-", "ta"}]}], "]"}], ";"}], 
       "*)"}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"qoutin", ",", "1", ",", "sizeqT"}], "}"}]}], "]"}], "//", 
    "AbsoluteTiming"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7319279989146233`*^9, 3.731928104139935*^9}, {
   3.731928134293325*^9, 3.73192825076374*^9}, {3.73192833651369*^9, 
   3.7319283983731413`*^9}, {3.731928429823647*^9, 3.731928430204953*^9}, {
   3.73192846383047*^9, 3.73192867555795*^9}, 3.731928791386606*^9, {
   3.731929544254753*^9, 3.7319295459211073`*^9}, 3.731929727793606*^9, {
   3.744020925099435*^9, 3.744020938923373*^9}, {3.744021117559992*^9, 
   3.7440211196557426`*^9}, {3.7444677041555758`*^9, 
   3.7444677285245934`*^9}, {3.7444679475723248`*^9, 3.744468039435051*^9}, 
   3.744469376451172*^9, {3.744469737326007*^9, 3.744469826124918*^9}, {
   3.744470386199065*^9, 3.744470391181775*^9}, 3.7447562301151257`*^9, {
   3.745230884842825*^9, 3.745230886287678*^9}},
 ExpressionUUID -> "3ee14f6e-1b8b-4633-84f9-c46dde5bf2e6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "333.25868200000002161687007173895835876465`8.54338138568083", ",", 
   "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.744462723871805*^9, 3.7444683088832912`*^9, 
  3.744468455117586*^9, 3.744469386341633*^9, 3.74446985827218*^9, 
  3.7444703919898987`*^9, 3.744481349354225*^9, 3.744753026465119*^9, 
  3.7447538775691*^9, 3.744753996715952*^9, 3.7447545182911167`*^9, 
  3.746036667429529*^9},
 ExpressionUUID -> "0b272980-fa66-43dc-8af2-2586ed0c4063"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Linear Correlation Function and its derivatives", "Subsection",
 CellChangeTimes->{{3.7319300034030333`*^9, 3.731930027376251*^9}, {
   3.744037483447528*^9, 3.744037484561626*^9}, {3.744469144487576*^9, 
   3.7444691448295317`*^9}, 
   3.7444699297668037`*^9},ExpressionUUID->"fd73ec98-19b5-4720-8249-\
a497db88a067"],

Cell["\<\
This is the Fourier Transform of PS. It should be computed with much more k \
points to avoid aliasing\
\>", "Text",
 CellChangeTimes->{{3.7319302155695953`*^9, 
  3.731930267973612*^9}},ExpressionUUID->"9a4dbb3f-90aa-4cc4-9475-\
e83258705b26"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Nkpoints2", "=", "12000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k2min", "=", "kminQR"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k2max", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dk", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Log10", "[", "k2max", "]"}], "-", 
      RowBox[{"Log10", "[", "k2min", "]"}]}], ")"}], "/", 
    RowBox[{"(", "Nkpoints2", ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kT2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     SuperscriptBox["10", 
      RowBox[{
       RowBox[{"Log10", "[", "k2min", "]"}], "+", 
       RowBox[{"ii", "*", "dk"}]}]], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "0", ",", "Nkpoints2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Max", "[", "%", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Min", "[", "%%", "]"}], "\[IndentingNewLine]", 
 RowBox[{"sizekT2", "=", 
  RowBox[{
   RowBox[{"Dimensions", "[", "kT2", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.731930058591652*^9, 3.731930074420397*^9}, {
  3.7447541977376633`*^9, 3.7447541998535147`*^9}},
 ExpressionUUID -> "8cb4c646-a762-4438-9a2e-dc264920319c"],

Cell[BoxData["20.000000000000004`"], "Output",
 CellChangeTimes->{3.7444630161568317`*^9, 3.744468729568728*^9, 
  3.744481650515201*^9, 3.744754518382634*^9, 3.746036667558606*^9},
 ExpressionUUID -> "98ff15a2-0293-4b89-9354-3146b11b591f"],

Cell[BoxData["0.000010964781961431852`"], "Output",
 CellChangeTimes->{3.7444630161568317`*^9, 3.744468729568728*^9, 
  3.744481650515201*^9, 3.744754518382634*^9, 3.746036667560236*^9},
 ExpressionUUID -> "98ff15a2-0293-4b89-9354-3146b11b591f"],

Cell[BoxData["12001"], "Output",
 CellChangeTimes->{3.7444630161568317`*^9, 3.744468729568728*^9, 
  3.744481650515201*^9, 3.744754518382634*^9, 3.746036667561458*^9},
 ExpressionUUID -> "98ff15a2-0293-4b89-9354-3146b11b591f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xiLT", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LapxiLT", "=", 
    RowBox[{"{", "}"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Laplacian", " ", "of", " ", "xi_L"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nabla4xiLT", "=", 
    RowBox[{"{", "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"nabla4", " ", "xi_L"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"kmin", "=", 
  RowBox[{"kT2", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ta", "=", 
      RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"qi", "=", 
      RowBox[{"qT", "[", 
       RowBox[{"[", "qoutin", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xip", "=", "0"}], "  ", ";", "\[IndentingNewLine]", 
     RowBox[{"xiA", "=", " ", 
      RowBox[{
       RowBox[{"kmin", " ", "^", "2"}], 
       RowBox[{"PSL", "[", "kmin", "]"}], 
       RowBox[{"j0", "[", 
        RowBox[{"kmin", " ", "qi"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Lapxip", "=", "0"}], "  ", ";", "\[IndentingNewLine]", 
     RowBox[{"LapxiA", "=", " ", 
      RowBox[{
       RowBox[{"kmin", " ", "^", "4"}], 
       RowBox[{"PSL", "[", "kmin", "]"}], 
       RowBox[{"j0", "[", 
        RowBox[{"kmin", " ", "qi"}], "]"}], 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         RowBox[{
          RowBox[{"(", "kmin", ")"}], "^", "2"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nabla4xip", "=", "0"}], "  ", ";", "\[IndentingNewLine]", 
     RowBox[{"nabla4xiA", "=", " ", 
      RowBox[{
       RowBox[{"kmin", " ", "^", "6"}], 
       RowBox[{"PSL", "[", "kmin", "]"}], 
       RowBox[{"j0", "[", 
        RowBox[{"kmin", " ", "qi"}], "]"}], 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "*", "kmin"}], ")"}], "^", "2"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"kk", "=", 
         RowBox[{"kT2", "[", 
          RowBox[{"[", "kii", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"xiB", "=", " ", 
         RowBox[{
          RowBox[{"kk", " ", "^", "2"}], 
          RowBox[{"PSL", "[", "kk", "]"}], 
          RowBox[{"j0", "[", 
           RowBox[{"kk", " ", "qi"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"LapxiB", "=", " ", 
         RowBox[{
          RowBox[{"kk", "^", "2"}], "*", "xiB", " ", "*", " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            RowBox[{
             RowBox[{"(", "kk", " ", ")"}], "^", "2"}]}], "]"}]}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"with", " ", "antialising", " ", "exponential"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"nabla4xiB", "=", " ", 
         RowBox[{
          RowBox[{"kk", "^", "4"}], "*", "xiB", " ", "*", " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "*", "kk"}], " ", ")"}], "^", "2"}]}], "]"}]}]}], 
        ";", 
        RowBox[{"(*", " ", 
         RowBox[{"with", " ", "antialising", " ", "exponential"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"deltak", "=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"kT2", "[", 
            RowBox[{"[", "kii", "]"}], "]"}], "-", 
           RowBox[{"kT2", "[", 
            RowBox[{"[", 
             RowBox[{"kii", "-", "1"}], "]"}], "]"}]}], ")"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"xip", "=", 
         RowBox[{"xip", "+", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"xiA", "+", "xiB"}], ")"}], "/", "2"}], "*", 
           "deltak"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"xiA", "=", "xiB"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Lapxip", "=", 
         RowBox[{"Lapxip", "+", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"LapxiA", "+", "LapxiB"}], ")"}], "/", "2"}], "*", 
           "deltak"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"LapxiA", "=", "LapxiB"}], ";", "\[IndentingNewLine]", 
        RowBox[{"nabla4xip", "=", 
         RowBox[{"nabla4xip", "+", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"nabla4xiA", "+", "nabla4xiB"}], ")"}], "/", "2"}], "*", 
           "deltak"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"nabla4xiA", "=", "nabla4xiB"}], ";"}], "\[IndentingNewLine]",
        ",", 
       RowBox[{"{", 
        RowBox[{"kii", ",", "2", ",", "sizekT2"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xip", "=", 
      RowBox[{"xip", "/", "twopi2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Lapxip", "=", 
      RowBox[{
       RowBox[{"-", " ", "Lapxip"}], "/", "twopi2"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nabla4xip", "=", 
      RowBox[{"nabla4xip", "/", "twopi2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xiLT", "  ", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"xiLT", ",", "   ", 
        RowBox[{"{", 
         RowBox[{"qi", ",", "xip"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"LapxiLT", "  ", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"LapxiLT", ",", "   ", 
        RowBox[{"{", 
         RowBox[{"qi", ",", "Lapxip"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nabla4xiLT", "  ", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"nabla4xiLT", ",", "   ", 
        RowBox[{"{", 
         RowBox[{"qi", ",", "nabla4xip"}], "}"}]}], "]"}]}], ";"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"qoutin", ",", "1", ",", "sizeqT"}], "}"}]}], "]"}], "//", 
  "AbsoluteTiming"}]}], "Input",
 CellChangeTimes->{{3.7319301466561213`*^9, 3.731930189791163*^9}, {
   3.735229513902605*^9, 3.7352295161786337`*^9}, {3.7352295483739243`*^9, 
   3.735229650204205*^9}, {3.738399391584723*^9, 3.738399432708582*^9}, 
   3.742819144309723*^9, 3.7440218716943207`*^9, {3.744466471282648*^9, 
   3.7444665482555532`*^9}, {3.744466626764433*^9, 3.744466761298883*^9}, {
   3.7444671259891644`*^9, 3.744467155188302*^9}},
 ExpressionUUID -> "31c55317-6dcb-42ba-bb54-1767d775f0bf"],

Cell[BoxData["0.000010964781961431852`"], "Output",
 CellChangeTimes->{3.74446301618076*^9, 3.744466780593371*^9, 
  3.744467160514702*^9, 3.744468729583164*^9, 3.744481650531324*^9, 
  3.7447545183909817`*^9, 3.7460366676755238`*^9},
 ExpressionUUID -> "894877ae-e488-4cf5-b5e1-7a12cc03c755"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "285.77003700000000208092387765645980834961`8.476616604327535", ",", 
   "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.74446301618076*^9, 3.744466780593371*^9, 
  3.744467160514702*^9, 3.744468729583164*^9, 3.744481650531324*^9, 
  3.7447545183909817`*^9, 3.7460369534517317`*^9},
 ExpressionUUID -> "894877ae-e488-4cf5-b5e1-7a12cc03c755"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.731930127253392*^9, 3.731930170398913*^9}, {
   3.735229668586486*^9, 3.735229692204973*^9}, {3.73839943788476*^9, 
   3.738399440878607*^9}, 3.738399509057129*^9, {3.742819152965506*^9, 
   3.742819161305848*^9}, {3.744467058217449*^9, 3.7444670880134773`*^9}, {
   3.744467522386451*^9, 3.744467591350197*^9}, {3.744467868094944*^9, 
   3.7444678773040133`*^9}, 
   3.74446791170886*^9},ExpressionUUID->"e751588c-fb81-46b2-9720-\
cf8384d4ea40"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Export files", "Subsection",
 CellChangeTimes->{{3.731929994437415*^9, 3.731929995371888*^9}, {
  3.744036943088751*^9, 
  3.7440369441591177`*^9}},ExpressionUUID->"a6b179f1-fc03-43ab-a0d2-\
8cc173fef5e1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"qFunctionsT", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"XLT", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"XLT", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"YLT", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"XloopT", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"YloopT", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"VT", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"TT", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"X10T", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"Y10T", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"U10LT", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"U10loopT", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"U11T", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"U20T", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"xiLT", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"LapxiLT", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"nabla4xiLT", "[", 
        RowBox[{"[", 
         RowBox[{"ii", ",", "2"}], "]"}], "]"}]}], " ", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", "1", ",", 
       RowBox[{
        RowBox[{"Dimensions", "[", "XLT", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "%", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"OUTFILE", ",", "qFunctionsT"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7319296733763847`*^9, 3.7319296738886833`*^9}, 
   3.731930289171385*^9, {3.731932941036771*^9, 3.731932946584622*^9}, 
   3.731933305113331*^9, {3.732031992661022*^9, 3.732032017799909*^9}, {
   3.732273456953*^9, 3.7322734792875223`*^9}, 3.738399521468976*^9, {
   3.7428106038927383`*^9, 3.742810604114196*^9}, 3.742814336441926*^9, {
   3.742823430630231*^9, 3.742823437172027*^9}, {3.7440371017663383`*^9, 
   3.744037121605955*^9}, {3.744452453945314*^9, 3.744452461684424*^9}, {
   3.744468156064022*^9, 3.744468160735849*^9}, {3.7444684157991343`*^9, 
   3.7444684204222527`*^9}, {3.744469728966367*^9, 3.744469729624956*^9}, 
   3.744470727408719*^9, {3.7446486432611732`*^9, 3.744648650386142*^9}},
 ExpressionUUID -> "f032b466-ffcf-49d1-aca8-c2d5a09c82b0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1201", ",", "16"}], "}"}]], "Output",
 CellChangeTimes->{3.744463223231838*^9, 3.74446898619487*^9, 
  3.7444697180535793`*^9, 3.7444707302957067`*^9, 3.744481925113556*^9, 
  3.744754783512541*^9, 3.746036953612618*^9},
 ExpressionUUID -> "102338ba-19bb-4b14-abef-8bef3c4e4814"],

Cell[BoxData["\<\"qfunctionsN1_nb.dat\"\>"], "Output",
 CellChangeTimes->{3.744463223231838*^9, 3.74446898619487*^9, 
  3.7444697180535793`*^9, 3.7444707302957067`*^9, 3.744481925113556*^9, 
  3.744754783512541*^9, 3.7460369538348637`*^9},
 ExpressionUUID -> "102338ba-19bb-4b14-abef-8bef3c4e4814"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["PLOTS", "Title",
 CellChangeTimes->{{3.744467842323317*^9, 
  3.744467844581039*^9}},ExpressionUUID->"189e05a1-bf3d-42e1-92be-\
6e4a791d4817"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xiL", "=", 
   RowBox[{"Interpolation", "[", "xiLT", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LapxiL", "=", 
   RowBox[{"Interpolation", "[", "LapxiLT", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nabla4xiL", "=", 
   RowBox[{"Interpolation", "[", "nabla4xiLT", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"r", "^", "2"}], 
      RowBox[{"xiL", "[", "r", "]"}]}], ",", 
     RowBox[{"100", 
      RowBox[{"r", "^", "2"}], 
      RowBox[{"LapxiL", "[", "r", "]"}]}], ",", 
     RowBox[{"1000", 
      RowBox[{"r", "^", "2"}], 
      RowBox[{"nabla4xiL", "[", "r", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "50", ",", "130"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<q^2 xiL \>\"", ",", "\"\<100 q^2 Laplacian xiL\>\"", ",", 
      "\"\<1000 * q^2 nabla4 xiL\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.744469060458036*^9, 3.744469074625444*^9}},
 ExpressionUUID -> "8f5e5cc0-a963-41e4-be77-e9dc9766906b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
JCvfbk8Z/Ue4+JlOjlqwZOX/ALHFESg=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVl3k8VO8Xx+1biCKyxKAQickSJvMpkuzNMMMwYwnRIlEqaZE1kbVClhZ7
ypZQyi1t30q7lLSSimhDttHv/v6Zeb1f997nOedzPuc891ICtzOChQQEBAbI
n///xys3yAgIrMeCaxurF84qIo37RUpHeD2WbfTJtp1URO5ZNQkHsfVgFh/d
u2VUEaWGyUKZ0uvxLm5tctOgIm7B96/GwvU4ds2pyqhbEWJhYh/p1PXgWuon
v61VREor59LBoPWw73CafOxPrs8R9vl3bz1a/oy1mN9WQFZ7/sOBs46Q3Tf/
bteh+XCbyMjihjvhTuPn5yqO84DDDbv27XDCk1cHtweunQdj6S7v/J1O0Mq2
zzqPeZinqaLVFeME22yz4jUW8/ByXWmDc7ITjJpH/RJ15oF7suW59Wkn8KaU
WsP+yWOL+UdFlWdO8LWyD3dolkfyTmrBSzNnVPEvZfQul4fI/IFFKy2dsWl3
3cZYA3kcqs8/l09zxopQxYsauvKIGRG44GvrjHIVs+KIRfIID33c/sndGSO8
7Y3WMvLw8N36eWSLM0bDmuIjh+RAsSs3Fj/rjM++fcG8ajlcna9y10LWBVvb
7s0RosohyUT1iJ+8C+amOvhcNJIDw03NKVnBBUd+By7lGshhMHXR45cqLugy
2Jh6V0cOykLa3bt0XfC6Zc3+ViU5RP80+NIIF6gyngnNn5kLaucqceMoF5gn
m9RY5c1FZVLAOr1XLhC2H4uSeyULgdY/VTlvXPArL27V2aeyYA8lSv9754In
7yP7VzyQhZh79dOuzy5ov95hxboui+CFf3zi/7hgXg9zfk6pLLRqEiLeybpi
XX+cR2eELAqfVuTnrnWFrOSrYW9xWYwKW838c3DFpO97nBOQhZP5Q94WZ1e8
YX3Y+mVSBlMFP7XXMF3x7XVBst93GXgHWV784e+K4MAndpJPZbDg7/2bjrGu
sBkyWrEgXwZZaiNDAo2u8K/+twdaMhj/d4zte9kV9+NpZsUqMvDtW97R3OoK
mbTLyb/myUCvekdBOOGKol1LI/cIy+C6xZhDb6crZopXDgn3S2OQMVPW/NUV
BySEM8bOSmPNESn/8EVuUJH5vm1CURqjY0tevDnihvEVPzdp9Uih0ktxPz/N
DbT+x15bnkiBe1V4iUamGz6P1RjW3ZHCnUMfdgeecEPao9woo0YpnJxToPrt
rBvO0dzsRNKkYEWR2Th+1Q3uVKW3jFVSiHP+80tuxA3Ld8Tn7z4tCfPajwXU
X26wihGitp6QxKD8E1uPUTfo93Z189MkweiuOX5yyg02H511svZKYp5Jo1qG
sDvu98o3f2ZIov/qVkJRzh0120YCD4pJIvnpe3FtfXck/DKzfBklAb30kpqu
pe7QCheRW7pZAvcc/DakGLojKdrOKdlfAhLEu4Lh5e4I+ng6iucigZSLb5e1
mLtj1D7aOF5XAqlH3zBd7NwRfD7owYu34khb212y288dmourLkt4iMNQ8KTd
0gB3dPIJtYdO4njYxvrWG+iOgaMuzwpsxSFj+pK6JoSMx0bIgLNCHMe0um5L
b3PH9Tnr0vzniyPj37OhMzHuaNdzC7zaJYbs1kcWD4+7o4vqXR68UQw9pmbT
ASfdYX70ySERrhgodaeu/81zR19MzZNqlhjqykPXaheS+Z80Ycg4iuFxjhAz
5qw72R9PA5aYiEE63Dxcr9Yd+x5T/isQEEOSVnFpwj137LgQKX/ynChijm6T
XzXtjtzFB17eGRaBxsFP0rW8DUh8xRXnxApjjUiMyvH7G2D4fPpN3KQgVkfd
eLpmOQOKLQ3b70UKYI3qF6+/xgwElzRoy20VgF2H9IfzVAYSDve0cYIF4DDf
a0TBnAF2b/GJSbYA3BtHpL7QGBi1SzTfuEoA/n9U7Y46MqAc+0xGXlIAh6Ki
Lz8PZsDwaOj7zY7/6IdVC1elbGJgvJWissfmHz2h48YtWhgDc4pPvDpJ/UdP
mS/zvGwrA83J8gUqqv/omY3nfuyOYmCj7rZn84dn6SV/nuipxTGweUTIUvX4
LP30qfHaJ4cZ0H8v2ZyYOks/a6tmkZjAwM9frCmJQ7P08pxNa0eSGegvrQrx
2TJLv7hiNoA4xkBmwR++le0s/XqUwamgQgYkRm/Y0Cf49HU7Xy2RL2ZAi1ji
lvGDT3+yM7HhWgkDVtwv0fwBPv3Trvf/LTjHwLZvKwvNXvLpontyJu5VMTCt
G6862sSnH9uDhF3nGXj4MjDC5CKfvmDv8FytCwzsvaRsm1nOp+vFrNPdV8dA
5RCx5tJJPt05dtpzWTMD2QpVH87u49O7Yis/vm5hYMjtMXtyJ5/O2++5LekK
AwcNfyvuCufTIw7UJry/xsBj26AN7wL49MkDvnJp7QwYUdNvPfTh0w8flCxc
eYMBx/Uhmz958um5hzY2Zt1iYPV17VWJjny6epwc3eYOA1IFdoHz1/Lp5XHX
7g/eZaD1yrHq+3Q+veWw0ifbBwyU/ArIu2zGp79JeCA3/pTUa1KrNEubTw9K
3FN49jkDTTO5p6I1+PTviYv13LoYoPrGl6Wo8umzSQfpla8YuKBjNmKmwKcn
Jxs+8OhhICk+zPCZHJ8ul/KaJdjLQIXjzL4iGT49PyXp04W3DFAsN3HzpPh0
rSMrwjnvGUjdu2NDhziffv7Ih0mxjwzkGcTnUUX5dNPU9MTGT2S9VD4WTgjx
6ddSreT9+xngavhO/RDg0+2PfimUHmBgw9CiEeV/M/THR3P1Wr8w0GCxoymK
P0P3Slt9KfgbA086m9MFZmboH9NG6POGGOg6uvNS+9QMfXP6qQfXvzMwf7P9
pvrJGfqfdAf2lhEGIg996+uamKHHHhv7pPSTgWtzLEKXkSyacTb81i8GRKIW
U1v+ztCPZbhNRfxh4JfzvYPRJCtlziSqjzGgF+yeEUry6cwq+fvjDJy5Mafk
GMl6Wayi6AkGZiuCh7+SXJ8lrK89RfbT2YGW3eT6Vtl1lx5PM5CRbAprMp6b
2VzE8snnY+bdXEHG65Qj9VDvH9lv4/77A6Zn6C9ymtldAkxseKRef4vMj5sb
1BcnxMQ+i6BC7uwMfSBXfruRCBMj97ceMCT12n78+lSPKBNH0tJPmJB6Thzf
kpQszoTMT0udbSKkX1ntxkqSTLTm2OxtFOPTvRfMf1MuxQTr0vQJfUk+PfVl
SKK5NBPFW43qH8/h06+cuLL8jgwTFw2qp8tk+fRBlmyP51wm3rZ4VdfI8+kq
SoEJn+WY2Gxh9auP9Me+k5KvRRSYWLpHTPkz6Z8aNjc+V5GJxvAA/1rSX71K
9ct0lJh4cOex/HnSf7Q8r8O2KkzYXrgWZ2HIp2/1qjF8rsrE1QH/qnvGfHqR
skB3oDoTSTHvuktJ/87mVRgc1mRC0ViwlQs+3ch7ukteiwkL07elovZ8ut9C
t0NntJmw5u8n3jvx6UT++AtiCXl9gYrGUi8+Pa5g7YF/hkwMpt08pRDFpzdw
8vUyjJi4i1w9pxhyHqgMP1tkzIR+oMe8xjg+fc2pXF2bFUxcviObtSCLTxcp
7HsSa8mE0JiynX4D6V9fi33S1kws+K/rxpcrfHqw2tHFhTQmspI333zZwaff
KaTGXKUzkZcx0LuWnC/JRXHaU2uZsCt0CQnm8+lSJRrRuxlMdJxo6Mv0mKVb
+UVpinswsfzE1HpH/1n6Zo279094MrE18W8odess/UFJuMZlLybCeg5wjiXM
0tNOX7s3ymNiY5GxcdflWfrcsz6qkVvI6y9PDHVo/6Mnff97XHsbE6tUWuK2
r/hHnzHPlesKZ6KMbpzAsP1H//rgoejKSCbcU7uo7Rv/0W+OrfrJ38Mk3w/2
TJhV/KPvXK95+0gSE4WTT4vYagIYzGmjW6cwkd5s3jSyWAAB77yufD/CxDOn
985nlwvANSqr1i2dCTle63I/WwHoFgkVKOYyMddcSdeEPH96fvaHnznDhI7H
7YnPN8jzxjruG+McEyE7g0zlOwVwJ1E9SKSMiZPDt6J9XgmgUYXlvamSiXnO
0htdfwggze6u7bJaJjw/lxg0LxIEPa9KubWNiYNVRo3v4wVRSg+/+aSbCfaJ
+40/woRwc329T/BrJn7b+Sgd3yOED8zR0ckeJkwLE+X8koWgGhqjq/2OCe6h
mt8BZULIzkxK29XPhHGM3T2DPiEc+ljMUvnFhLT1QOe8EGEUD338cfE3E3ze
pYDFu4XRNqZzxHaUCfumfO+AFGH8lTx/detfMr//ei+yzgsjnNqs2c5nYmZb
SQr9jzB84x8PbpTyQH1ji6PbURHEpM9LmJjjge6mET31EhHknfRUT5fxwJuc
8sCFjSJ4fv6N22U5D9xIUDEsfiMCxxdfLkkoeaCJPefLsJEoVi4WOHhB2wN7
9+yrCX4vCsW7xvP/0jzw8+5ddnGIOPb4tMVesPFAMKOnWDxeHL0/1g1shAcu
S9c8rSsRR6myXyv5RofGSiHqrdfioG5O96t29MB+odGwv+4ScJcZPM/18sCu
sPGQNidJXDqzS1GB44EK6T6+yVZJKJsLHrzv44G8nN8nvpPvg+95ygwLPw8U
D9ruoj6WRHid/YRciAcO7qbvlmZLIY15zu5WlAfue2CQtXMOfn4xuhizywO0
oJXxrvlz4BF7RclktwfiDOIeZV2fA9Wyp4NFMR7k90HZcr6kNKrH/2XujvNA
e/ED+ahSadzL9327NMMDQe8PtVp/lYHIB8XorGoPZFe2utxnyeHHQ71+eo0H
7ryRPfp3mxx6Wq0ZIxc8INNGj3RPlENtToCRU70Hjghq0pMuyYGz7sKASIsH
rl0J+SChKI/ai3bsPbc98KTFSfncO3lw9ket9PvgAVbhr9+HT8zH2s1J5TKf
yGS6WO9vN86HMTtfoa3PA7YnyzRoT+dD1KT9p/IXD3RGZGt1SCugrl+q6tmw
Bx48Uvpkk6QAUeezC+2nPbBOpuCHVLwi6lSeThku8MQcf+37/aVKWHM3Nfm6
kifCDoxZhN1RwosoOwX3hZ5YLTUkteirEiYeNi+LUvOEyNeETFVDZaw+WOzf
quWJ0B+bChc3K+NZ35Y7a5d7Yuez3EDGy4UYrRHL5jl4ovKTamfFSjVY0mn6
mTGeKPmSss7ujibmRdsk2cZ6wjRzX830O00M1qBvfL8nsvLWDD34q4kClbVF
3DhPLPzU639Zn4KpMRd5gxRPzK4Tlqs9RsGVGr/J28c9oe93gC7L1QJNJf6/
6TpPTF/yTquYowOM/Re26Qu5ntiIaGSJLoihyM/8r57o/u/Pp49XdEH/pBqQ
O+gJo8AZxV0vdWHzeJvXjWFPFCd9S30jowdalfw61VFPRIhtfDkUqwdLrrfO
YwEWGv6FRF320Qf19td35iosqG7BqvvKBmi4msXpVGVh4y8/q12mBjBpsHq5
UZ2Fp+2O35XdDWBcktaZqcnCXsuoNIdkAxjtNW4bXMKClrdAnPWYAZYu25Nf
vIIF973JkssfG0L7uLiHmAsLfo12+S92G2Fpv8WLXFcWBnb7bjbKMoLxilAP
bXcWVHatcNxRbYRVT+95gMlCdE2KSl2vEdgyqZ4x3izYlaxdJozlOJoozR4J
ZqHfZlN3h4Axsl/QumM3sVDxc8Y1X9oYedrb2HPCWMg+QIj5KRuj7EYnW28r
ma+YgeaV5cZo5x/zCoxk4cOEuUcF1xh/dslzXh5g4VrEDuWBJmNM3VrdE3SI
hbisjlM5hDEEFCI5f+LIeDOmtZY9MIZMwzOOXCILf+9uoGt/MIbuSI6P41EW
hr8sbVGQNIFPyALu9ZMsLFkvmfKCZYLAJvu3zvksaG9+5ajjb4JQkd3cNwUs
ZKloSvuGmWDX2W7uRBELtiHbEg7vM0HGuzwetZSML4qnXlpsgg6Wqn95HQs2
jj7zBT6YQM44t47VwIJn+uZc1lcT+ErKCIpfYuFqgu3w0Z8mGL06e2ZTMwvc
tMnOLAEqllA+9eldJ+8fYXQLaFAROcUxfd3OQsZZKtNiCRXtz58nHLlB1r+Z
O7R6GRVeSbcXD95igaorHTloRUXqUOWm8w9YWNNraxbnQcXLW5QWn04WchJZ
ekc4VGgXF0hIP2ahVyBn7hZ/Ktrc06q2PmPhyrnpkqtbqJBYKjql9oIFiSNH
r+rvoMJT+IBjZxcLC+uk6yKiqRhp2j607DULCYup4imHqLDK+Gr9rocFsXS9
N+xEKpJDA9KO9bLwy/fS5n9HqNBUZS778Z4Fvktz0YtsKraOPthf8pGF93rh
9YInqWjttHvk1seC6AvLANFTVDAOmW+vG2Ah+I/CTjJnFHvXtvt/ZUFffIO9
YjkVQ1Q9OflBFo4vms6OqKJipfQZ/xtDZDyBTPkzNVQkfF5Yv2OYBfa+3XvK
a6l4cj1bUOsHC0uPBh481ECFet4cxrOfLAzpDvcaNVFx2ZH/mzrKwvJDJ6LF
r1AhpBNt2zfGgkN0q4ZJGxVu/JGcnL8sPA9MmFx2nYrCl5v6bSdZCL2rdYXf
TsXX2g+mo1Ms7I8uUjp9gwrTI96JpTMsHEzvuavQQUVc4LMuj1kW/oUXHfK5
RcUja6clogJsfGhL+ht1mwoVxVvRTYJsxDAUPnHvUBEyQrsbLMxGh82ZMeW7
VDTebVJaIMpG0vXgL6UkC5wxCr0jxsZe891bBe9R4RxT0RItwcYKs6LtaiTn
MTUldaXYeOaa2DVG3v/ZMN+7ew4b2r0SkiUkU8XmVSfLsJHsUvdGieQD71On
LOayMar4e5E/uf/9FmGnr3JsrK6klu4m41PKjj2VN4+N0J23aDwy/qAtY0MO
Cmw87P/SOp/Mr84unDapyMYBnwffT5L5z6h/SatSYiN2+dHyQVIfh79+b70X
sjFRZdIyh9Qv98mrZVKqbJwWbv49dZWKj1UbDlxRY+NtgKBuSysVL9bsGHZZ
xMbOwRNt4c1U3HuT6ftRgw2rIM/IyUvkfjJPrCS02Ug131OaSta3tPxH1Skd
NjJbHz/PJOufR5+7cPkSNt4cMD+ymfTHoR2ufz312fj+5NDQSdJPO6XCQ74t
ZePo9m+OQ8VUhJ5L74o1ZGNdxJbj8qT/3LseNp5bzobfPCP3l6RfNS2dIn6Z
sVE19Z8yjfS7wrPN7xMs2JhdH5OutY/sly2prsqWbBi03LjUs4uKn4X/GdJp
bFgPde5v30z2q4DDt7Q1bGwb7KliMahoyN/kpWnHhqN36cY7TlSUU5PvNq5l
Y7G8dK7YWiqOBd0p63Fggxiob/1rTgXvnl2gnhsbC6YM2vKUyf4ICHp61Z2N
wFfqj5PlqLCfiocbg41f9x/80ZGgwsiwY1G0JxvPV8tzzo6bYDZj9ZsOHzYe
PXics+GpCX7rBTiyuWwsdFk5ePiuCQZuHGod5LFxIvq1Tfw1Ezz6035SPpB8
3lHy9c9KExSxbTz8QtmI+uJ77OB+E2T+5Hb8DmMjY15hjl6kCRKO7KcmbWFj
zzQSToeYYOvVNrkL4Wx8XP5wEd/VBDQN686pnWwkzr8xHapugt4BC/sTcaSe
ZvJxkvXGWCB1OtEpno18SeUHoWeM4b5M4rZAIhuNexnrjmUZ41bUK9stKWy4
LFLsNNhhjPMCe1cjg43JVxce1S0zRozKFdpgIRt2yzIOHLBYjkurtGJLikk/
/ZlwTpBbjhH/1Ksep9lY9WTe6QXfjBBYwbFqP8dGnizd81OeEdabTlvkVpP1
MtqarflnGZRdaStsWtg4VmUteSzbEIwdpZF/Wtn4FkF7cyTIEGm50g2VV9lw
mpXwUjY3hMCbXuP57aS/Ns1+Huk2wJdN+42+3ib7V3F8e/oCA1yOu66f/Zz0
a1qm+uBBfXg2QXNghA1P8zVz60WWYIGJcVDOTzaedib7595fjJc1GpX4Tfaz
i6GGWuZieJXOLj81xsYD9vkdqiqL4Ut+n7jPsKFQ6MYb0tdB4I6VflckvfBJ
fKFDgKUWIpYZFx/T8UK2XPfeRPL952iZhpoFxwv+azoLN7JEUHTw4g23615Y
r37x3USVCuG8Nn1UkPDCiND+XGFnVWJKaqvupRteuPzVPHJiWJVgndBPV77t
hVQR5Q15JurE3AulXh8feMFbmy4X3axBxPUU/Ih87YW2yNvHmny1iGCzZPUT
o144YPpcHw66hMJ0sLvDuBfy9Nkbbh/XJW4SdvFTf71wbmR7lWafLrHIWegb
b9oLd34c0GTt1yO6A/df0hXyxguhBfFnavWJ9ZlRTq1zvTH5r8+1T8qQWDbk
t7d3qTd4h1MlRNYbE4cjPt/fYegN4QzTiJowY+LV2GY1cSNvLEpsUDRPNSYS
BKLbTUy8IR1eJ/r9vjHRo5gmmmzhjUCN/r4eRxMiBS1ZJnbe6PphdSTZjkr0
HZerTuJ6o63j9Jtl6qbEStUT06p+3hAye/phl6Upcey0qku9vzdqx63WnfA0
JazOL/n5ZqM3WKmuCn7ppkQmQTM32eyNd0Ff6ySmTQmbodCbb6K9MVF8RyW0
04zIx40e40xvKARPaKS6WRDRix4ZX8/yhv0nE+W2YAuCMdOT5JTjjYucPVM3
9lkQ0i2j1JAT3iiNDx1xqLAgDizXO3qq0Bsma+Sr6TMWRNCiDGuxKm9EairN
1hWtJDBzKiun2htrGC635epXEuo9lV80a0h9vA+Yr7m1knh5/GaOdS2ph7FD
4sLBlcR6mfGhiCZvFE67dh9fYUkYzfgWvrnhDbbiCrfca5aEVE/Y79AOb9SY
Vifc7bQkvjRHO4zf8gZjX5Lh/beWxOmozFG5e97YrFpweRXfkpg/1OFs/8gb
EeFyQ72WVsTPe0/OPn9M6rdj/2CqgxXxsPzthP9Tb7R7TGpJsK2IpMC/pfte
eIMpV6sVEWVFTLxeyq/r8UbyzusnxqqsiBfNFkybXm9kb1iZp9ZsRdQft6t6
8NYbW3vMC+bdsiI2b+B5DnzwhuOt1vgtb62It/eyLqh+8Ua3FkP/iYw1cbN5
gpv0h8xHARd4wdZEv4ZrgtmYN9ZKaTQ7RVgT4innqvvHvXF866202RhrwtnL
9e+aKW/IRxbtacqwJronzmX+E+DgwXZt/02XrYkp/8nLF4U4mCNX3xXXbk2o
/ef6livCwVnDX08D7lkTgfmT+m3iHBwP96RFvrYmvlu6deyR5eDtBvvB5xPW
hOzZ0m+6chz063woXyhAI0ykpuZ2y3NwuJFWriNOI6J7Sn3NFDmwPi65lqdA
I/LXTB3uX8CBwypBw3gVGtFW7VaVo8xBTJ47d5smjRDcNzX2S5WDvOcmYtkG
NEKnz03tjDoHg+N59Q+NaYS9U9kadw0O3HyF5naa0Yg0VfeMi1oclFvvc9Cg
04iL8WVNXB0OtObP895hSyOeDk29kV7CwciP1oQj62jEgrYyvS36HLwewUlp
NxqxUmfaVcWAgwYpTuNuBo3wSXPf9Z8hB7t0JzyqPGnEgdGyU3uMOHBa8fPE
GS8acdp3+oauMQcWCcty/X1oRMct968vTTjQ663fNMClEQOG5bJJKzgQ2Hbc
cIU/jZA4Pm1qZsZBVa/YrH0gjTDgu/v0m3PI93Onv5QgGuEaXB6Xs5KDc87X
V9wKphERndMVa6w42C/47NGyTTQix2zDo1/WHASJze3nhdKIy0Xlo6dXccA5
rJDBDqMRr0RnVNzpHNzVyxtS2kwjprdtWP0PHGSvClE8TfKil+WbLq7hwDA/
QO8nybCZSefakfrWxJNnPY0ILN9wSdqeg9TE3r1fyeuJshU9V9dxsPVZ9s9M
kiujZwS2rOcgcqCPECT5/rsNuipOHNRe0xa3Jvf/bl/h8p8zB0qC197TyPjm
1s5E7XEl/SNlskmcjJ+qxCjQdSfr9U3pSgGZn8fBCuLlBg5WBmuOjW8k/fFl
ZiCRSeYvLGemRuqT78aQMfPkQG5OxwkpUr+25ooV/SxS/2RDi5ukvu80+N45
XhwkuLBW2JL6C6YwDq3hcGAvEFCZTtZH52dF+S8fDs7PT2g8Q9YvjGD8cfPj
INR3o6AuWW/Tr64rP/lzoFDONux2ohGzc5327wzkwGW0m+vlQCOy/WzF84NJ
/276bPoINMI3me5ssImDbp9nUh00GrGk1jrrWigHEX5tSkEracSV2RWqn7aQ
/qkasZ+/nEYkLDH237mNg4daYQWLl5L1dTUsE9vOgd3ba7OSi2nEpyKd5QaR
HIiOhDWtJ/0vtUrRduceMp+uBYLVQjTiRZB8ilgMBzyNQQHGjDVRnCbTmbeP
g9xC9tHOMWuC2ivKvnbg//0zPkv/ak1w9o1vFkvkgH5a7bTSA2tC59zv2rwk
khO6qQEd1sTI/ZHRpSkcPM/8/eTgVWvisMqXA25HOQh/3vGLdt6aON/anZ2X
xYHjTV/1thRrIvrj8+6lORxoLnsb0HjQmoDkE7VruaS/T2ZbxkVbEy+87pV/
PMnBPIMzoWc2WhMzf1uuLC3mQMOnzGzSmpw35gWf2qo5yNq3bQv1sxWxgHdC
162GAz6/nlH92or4kJi99eMFDpLWL/493WlF7OxKHRet5+BzxPUlyy5bEYU7
90m5NXMwVSst2ZlgRQw3+FI/dnBQto5SJa9qRcwGnVl3/DYH3NT053OkrQhZ
pQHf9Xc5MF7aPdI7Q877fduT6+9zsEyua4HoO0si3PZwb9xTcv3VETK7ii2J
kecVSVrvORD+J6s7X5nk0d89G6dI/x0McnD5aUHMllv8VJrhYIKrX9DYa0HI
eseKPuRzsOiVkM7UPQvC6JqosamgD5ZTBBT0z1gQ4YnKiSISPrAxft+zwN2C
GFG0WV6m6AOLws+0ykpz4of5kfgBYx/c/yD2sNnejCiv3Nm8n+qDLQv2a7uZ
mBE8Ff8hBVOSla6ceaZqRjzkmzNtLXyQ2nJ1rPinKVF9q1/r9CofHDJMWMnM
NyVCGLjp7ehDfu+6bPX9soJ4t+2vQOdGH3QwFqYe2U0lOkuDDzSe8IHMwxtq
JcNGRKip8qm4KR+kxXNT7F5qEd9Tnp+jzvhgZ0G6be5ZLWLH22M1fXwyfin/
/t/hWkRMkuj1tYK+2Lfuz9l34lrE0Ve/P0hK+EJndXxjrBWFuBjbuSRb0Rcm
PS/ydthrEKO3DjecNfaF1Y30r1BcSMR5Dv/XEeKL9XofngpclSJqwtx+sUN9
MWuh0PpyvhTxan+98vcwX9yZfWyhv02SMC7ftUlhmy9ODL+7uo4iQXwY54sE
R/li+WTlRp1MUcImTxZih3zRlMPJy8oQIGZ6ll92yPdFiORjl+uPhtr1fmS9
7S0g9/vvR6RSzLd2D+FRkR2FvjiV++XGad0v7TUGLcz8El9sVKlLWH/kU7tP
LH59K/MFg1ORYv7oWfsV9Q2GRxt88b3+xbhw/xP6bv/Is50PfPG739uyyHyM
/nVWrSC+0xc5h5UvhDLG6Zyiu1mWj33xw3GX+4Etf+k2PWpxZc988XBH7bhO
/iRdzOOu3/7Xvqj16xa53Men565TU1/2xRdPmMf9PqsIo97ozsk0IS4O9AV7
7BiQglZnRMYaES50vx5ebMKdg9wtqskTolzs9XW+Tns+B3sqI6KDJLmI27pW
xuKaNKCl6kmT42KJfljW5RRZPFKMmPddnYspRebewVk5DM0sTHey5MJZ1KUK
yxTQ/8fpyKQVF7/Nc+MX+yqgd3B/YgWNi1PSa2iXUhXw6NXH/cLgYv+igleP
BxTQcKkq/Ko9F1k/2+uFTyliz1ZLdwMPLkJ3N/Xv/7MAOzZucX7tyYVCt1KL
vLoSNnOKHJLZZD6hqU0b7JXg4yC4uo/DxcAZz9svTyrBRuc/k1MBXGgdyOFO
mitDpNdr/pztXEiF3xq9EbwQ/Gepc1sjuGicMXdemroQ4/+1zdkUycU9hZVm
qy8uxJdmTZGOXVzcjyjw3je2EPdzvo7GxHLJ78uJ1YsPqSDTac/LwSNcZCo8
6u5LVIXa1ZP590tJ/frea3AY6mjbEXHJp5yLN3Z/X3/YrA5fvfWPv1eQ69Wz
f+rGq6Po+JTI3PNcNLhPMica1LEoghvBrOdCw3f+cNXcRdBYrL2u9xoXse1z
czOvLQLxZjpgWzsX21d3+dKfLYJ/9ovYWYKLtZG/VBoHFuH0v8QGzVtcpCfn
nB2U1YBmz1f14Ptc/KxOUDrrqwGtjIujwy+5CNI3erFzWAM31ybPPfiKC8uP
YawTsxoInPFbKtfDxdA4+w4hrolzYfL+1LdcVDxWWeyjrAkdu50Povu4aF7d
esN9pSaWTFqe/feDi4ufx+fGRGniTu28a5m/uIgmAnjhMZoICRnqpvzhQu17
xMj6OE1UPC+UsRvnQj3EfmvzMU3oXfy3J2WGfD45QC6iUhP6G2+7yUvykDpz
r2NvtybkSgesbknxsNzs0Pawt5oY7xdfsluah2jpZR9s+jRxM8RxpncuD5dz
9F6fGtEEZ/PjysoFJPdm12iLUIDzP3N8lHmQyTUSWidJwZLv8gdlVXhoMPlY
t0GWgj/bPDx3qvOgq5T8WV2ZgrQdrwWhw4P2u6C1J5dSENkw9f33Yh5+T2TN
TBlR4PVH9VWZLg9rnSIq1q2gQGcX7+IcAx6uMvZVFFpTcG1PH6fbhIed9sqC
1k4UlLaK2Keu4EHuUIjod1cKUqcWm6wy44Hy8VBxMoMCVmyo+LmVPJwOPhlw
0JuCkYPDjeF0Ht4G7PgdHULBC0K2hLKah09jGRsPh1FwRdA49cUaHhy71OVj
tlKQHB/pb2XPw6nmXcdsIynQTP4rLebCg1GtkOOJ/RSI3VOeaHHlYTZwzlza
IQq+S1j1bXHnQSf8P8fHhyloSY1tfcok9a0yLLyeTMGGY4IhRRweaBk+nzoy
KVj5WGuDuy8Piv9tz3uVTcEiOTuaMI8HPUtWw5tcCgazkuaFBfBQ/N3pyIU8
Cp48q+CrbuShs51zOLaAgsvz//v6KIgHp2ErtlUhBYePz2k3DSX3+6okE19C
QehLw+ovYTwIpmUslT1DgauS6/GCLaR+1o8KU85SoJqfuUVgOw9WNph0KqNA
qKee1RjBQ/B4mObxcgq+qjxfHRLJg3/KugWPKii4VKio/HAXDz5WTV/nVlOw
pugtJXA3Dz9uGX4WP0/B46Iyg4k9PNjfG1r2m2Tf4m1mx2J4ED4p1/uohsyn
2IyuE8tDuuttieILFOwp4Ttc2c9DzSt6p99FUs/TtxnuB3lQH76xRqGWAsoZ
z5DYwzy4nltU7llHwcUz6hHzEsj77zXf+UQy7eznvZWJPDw63MUPrKfg/tkL
8TbJPCyqGA16SbLXuV3pL1J4yPxUpLiqgYKBc6tObk7lweRqsP5JkqNKRc8I
pPFwPet7az/JAmWd1SfSeaCfe/dhcSMFx8qOXzLMIPWXGm3mkKxWzr1+M5PU
6+ZPr3iSq8oX3/PKJvuprPRtCcnmFcNPR3JIv0UO+dWRfKui6U3CcR66HtRM
XiKZUbn/s8pJHrwse29dIPlD5dofdXk8dCzd+6aA5PAqmUn7Ah6aJo6xY0me
ruoSenuKh60DpkwGySnVRdJRReTz2se+qpG84HzwAskSst8e/mfSS8Zfen6Z
ZslpUr8fWuszSabWjOmbnSX9mvLBwZJkoubaigfneJiX4unUTerjciFxVUAZ
Dwuff9i8meTQi4ob0it5mF/VtOQkqe/4xbcc7WoeJB/+K9ElOb62LKj1PA82
Vm3pF8j6yNVtC3e7QPZTY9KsHsnFdWZ7Pl/koUhISLCArKdhPT9uXx1Zr6nu
cwIkX6m/fVS+gYfyfa1jvmT9uxo8S1Y1kde7Ej+Ok34JbFSven6Zh4rasTxT
kn82fm4Ia+GBsWCfVSjpN+mmXXeOXyX9ZLFod30l6b/m48PDN3i4ubt5d2cp
2R/N3L/xHWS/zuZotp2jgNuyWFDlNg8FfsNLz5B+39PapGB/j4fxP+6nXU9T
UHu1y7r4EanXR4GmladIP7UVrTV9QvafQotcbz7pp7Zgt/tPyfkSuHBdNNl/
A9fGAsdfkPNIbeJQxnHSD4RiqusbHnqnEl+yMigwXhic19vLg7R9pvTVdAp5
blwq3/yOB1NH55EFaWR9dZgdSR95ePPd7kdTClmPlMyZ61/IfGYK4rLjKAje
MGf78lEebB2qnjzbQUFMNWf/tTEe/KJUK1u2k34Urj7q9JeHh3XDSie3kfOl
yaFy0xQ5rw/fmVlFzi8plaSPJQJ++N7iFGfmT/bLJwEPORk/xF5kif11puCm
tXtgsawfqoQTJnY7UtCdWxJhKOeHrumpsN/rSP+vs0l3mO+HeQu5E8/XUMA8
v+/OoYV+kPxOFXZaScFE1PjKX4vJ9fLH+uZpUbBa9Lv6Mxs/SM97sMvnlyYK
v8bPxMEPZ+Z27O8dJs+TB6pvTNb4QXFsZR57UBM12U55WWv9YD6js4ZGni8L
NM/P2+Dsh29BNio3Xmhi0Gqz+BNvP+gtWrTrzmVNZEd8/dm50w9PL/u9bdmt
if43/R3/VfshJPJH9O13Ghg4oH3Dt8YPUzbJG3xfauArJfD6jwt+cFWVeP+9
UwPfN71vUaz3A5FtRp1u08Don9cXApr9UDygcqKzQAMi0o9PTnb4wep4ib27
pwZ0aK1b9N/6YZ16soXJ3UWgPrpz5Ja4PyQEDjs0n1LHR4Hs3WUS/jCykTvz
NFMdmSu4wUmS/vBQ9XvXl6iO4bw/cJjjjxflL/p/bFdH5UbNiQey/uhefHR5
ma061Cf3hjxX9CfnHnvx/m9qkNBZZvtJ2x/aFfO3dRqqoZk1Ydyh4w+TyeTK
ck01hBzpWFS62B8rvhdl7VZQQ8eI91Swrj8Gp4vPCsyo4kBrUv23pf4Q/zZm
VX9fFaOuHzR+mfjDTno3NS9EFefizss8o/ojxq2t4re3KhiXoqcbVpD7xfqW
rXVRRe1Cme6dZv4YH1q9o2uFKjb3Wx6bWOmPOjHKsyIBVSgrica+tvRHjW+G
3PU/Kri7/knYFSt/BPwwXNc9oAKd2pC1sTR/fE/ndo0+VMHzjyYruKv80Stp
tn6yXQWHFfiaNjb+aCm9NTzeoALjdfdkNej+OKpPfzpcpoL3e3Nm/pEsKvZO
8F2eCv4HCp3PoQ==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwUV3k8lN8XtpNdtizZSakslZDc802LLWaYMWbMUBRSiYhSihQiS0gRyppQ
qSQk885gRCSlFFpE1kj2rL/399d8zmfuPec5z/Oc+96r7nHK8SgPFxeXIx8X
1/9/I9c9FePisobn6Vd19KQ56DpjUFiL1xpOvVCdKZtuQKm5ykJWAtbgpxHy
KepTA8rfHM2TJGoNry4SpXXvNKB6oM+pKlgDbfCc4JONDajl6o1pS2VruB8U
+X2reAPqaOb89Va1BmpEQynvVD36RTL8/VjbGmQ3FW4sf1WPBI4J9CIja+Cb
G22zoNQj8Ue7vnnusAZmbOPpyxb1SG7KvzvaxBrWA0deXace6YR1f2yzsAZX
ba2ggNk6dOBGWbO7rTX4S/h1nbhTh2KqaOWXjljDu7rGrz/n2ChpJfFJnrc1
/NMId6T9YqPblg2PGn2tYSyyXH/bBzYqatV/IBFgDQR17myhMjZq6uXLvhtm
Dd5afokWfmz0XsfsTl24NWw9zUp85cZGXcdP3R6MtIYeTfP+TAc2Gpn5kqwf
aw1Oz2rmzxuxkbDw42hmGs5PeEjDiyUWWuvQf6Uv3Rp4f0q675hgIcVUhcuC
WdaQ9rJEfW0/C21SuXLBIc8azqyGXR1qYSEjz6pzgYU4n4YZnb0sFjIrGg++
9cAaKnUiyk1fsJCtETXg+2NrkLwdxyObx0KkkAQ/3mfWUBf+oPRJOgvRa+qO
b6jA+8nr/FSSxEIn9m/1OlVjDYnXoyMqLrFQUJynZwrTGu4s7RttCGGhC+9u
H3rBtoaR8/H3DfxZ6DqN13X1tTWs7VP+KevBQmrlTfNeLdbw9wyzTcCVhcrF
ktLetllDxOqM1yESC1l5O283/mANCt0Tf9TtWagHU36f9ckaCqq6nthYsZC/
Yt8p/i5r6LD8PPllDwvxBT0QO/nVGog1gvNvd7PQ7dZTJR0/rGE8J5x/oykL
bd5gbG3ebw1fiU5ug9tZCAtfGsgbtIbuBzF71xji/Xaxr4iMWoNPsfq/+C0s
NLTtmkbguDXMrJOvCdqE9xPvgHX9tYZ1GtSWmg0sJDko67ZnxhpqF996H9Vm
oXzoWXwwbw30aOc3JzVZyCQjN11qyRo0p+uMPqqzUOuUz85zq7jeh3s/Z6ix
kMdB/Y8/eGzginnv+deqLDRbOHPaSsAGNo+0L1LxOJarRrJsjQ2ormnUPYDH
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

        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {60., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{50, 130}, {-28.418094665667553`, 25.605207726341877`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"q^2 xiL \"", "\"100 q^2 Laplacian xiL\"", 
       "\"1000 * q^2 nabla4 xiL\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7444690529979477`*^9, 3.744469075491288*^9}, 
   3.744481966627812*^9, 3.744754909739046*^9, 3.746037004045432*^9},
 ExpressionUUID -> "436da09f-98ab-4fb9-a5e1-a536a1a6e1e3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"UL", "=", 
   RowBox[{"Interpolation", "[", "U10LT", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Uloop", "=", 
   RowBox[{"Interpolation", "[", "U10loopT", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U11", "=", 
   RowBox[{"Interpolation", "[", "U11T", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U20", "=", 
   RowBox[{"Interpolation", "[", "U20T", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"LogLinearPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"UL", "[", "q", "]"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"Uloop", "[", "q", "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"UL", "[", "q", "]"}]}], "-", 
      RowBox[{"Uloop", "[", "q", "]"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"U11", "[", "q", "]"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"U20", "[", "q", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0.0001", ",", "300"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<-UL\>\"", ",", "\"\<-Uloop\>\"", ",", "\"\<-U\>\"", ",", 
      "\"\<-U11\>\"", ",", "\"\<-U20\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.744469084287368*^9, 3.744469087062736*^9}},
 ExpressionUUID -> "28239e01-5cc1-4e18-bc2e-da365002043b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
PIQIe4Newv8AJ1z0JQ==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
4qYKpjdKP9z8TFc=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVl3k8VN8bx+1knRkzY99FkqWUpOWckCRkX0uWSikqW74lW0JKIfsSoajs
Ugj3WEKyL0V2ImTfl/C7v39mXu/XvTPn3nOe5/N8PmJ2tw2v0tHQ0LzHP/7/
XdDqnZ9/UxzFf5UlFKI4kBdvIW15Qxyx7gxqTg/Egewrh5PoHMSRQQxhRWs7
DmSuTwYb2Ymj6p0EayfVePBK1MRmxVwc5dQTaRw+xYOQO7JcxzTFUQWb0YRa
UQKwJ3TfQqLi6AYjeX9HSxKw+VUwcl1YHElHBlW2LCYB6/RQc6KgOLq5wOiw
QnkFLFXUNex4xFGlX11i2cVXQN8mR4CBUxy9vDjKCKdfgRN5AQ1nt8TQ1u42
Z9qeFEDWP7ivpUsMMbI60lqdfg08ElYUznSIoTnam7L6Zq/Bz/GSo19axdDX
Os0ztk6vQfxDtbMZ38XQmfCyHz/jXgOxD0bXfCrx37faW/MvvwbyTB7pCtli
iDPiLjMlJxWcKysVDQsQQ+7qqdlTKungPbPPPiZ/MTSvNKb41jAdsBupK3r5
iKFjth/v+N9KB62T38H1+2Kowj6jMSklHZjy9FvDO2Io6prfiyusb8AVl93E
eSsxdPMLodbs9xvgvU+Dz0BJDG0sBtxjL8wAUz5hSouK+PpxE6FKLRnA9Gef
7kt5McQnP0Xy+psB5ALd/btkxJBDayqzi2Qm6Bt9+9dCVAzFkua3V2IygWry
ngo7DjHUMpXY6Pf4HVijtNi5/RFFj/ZHPmh98AHYOQk8pIyJouT4+in3xA+g
ucYh5tOIKAp0ZxNSK/8A3rrSNK73i6KC/Dr/C7sfgGnbwSMPO0URq+lVB/XH
WeDjs0jmwEpRRC+GZotjs8EdesusmARR1CKz5XBwMBdYjOrlaMSJokG0vSNF
lwfUqtXzFqJF0YY/YaSBnAcoj+Q+no8QRbESvzqNVPNAKR1t2W6wKBLPCzjk
FJgHGOgyvzt4iCLMgPZip3g+iKVZnTpqIIrsVHPYFZwKgN/Q1PRvPXy9QE+V
NP8C4IgGZ8N1RNGJ5DYLxdgCcNL32+Lfs6KI2KSwEFVdAEZ2EzeTT4milPLN
N+ECheDArjorywFRpJt99dDV1kKAtsNluplE0ec5I3NjvSLAeflOuSGDKNKc
qnU5eaMIWCE9gyZaUfR++omfVkAR+MvIsxiwIYJSxVmkv5YWAVMCa7jFmAi6
zDCifUnmEziwd76ZrlwEefZy3lHg+Ay69cq0TW6JoIEdB/f4+WLgSvzPRdtB
BJEkpBj4CCWAs/NIPLATQTdrN89hCiVA3SJ3UsZcBD0NT6x6dLsE5NinBu+o
i6DpAYO/C/MlIMAzuDZDQAQ9e5THGLZVChRTjdU2G4TRQ6koBq2D5WDQS+zF
mVphdLD2XtcHo3Lw3Gy2N6xSGHm886SoeJSDafZgd+liYZTaKJrS8KUcZN77
kmn8RhjFzzXy9mtVAFFdca5cH2F0NfkCacQRA4T1uV77w8LId19t89gfBLD2
sn25CsLomQk1rHkLAefsJ+6b+4VR3feNwmauStBoJ8EVLoY/T29CGEWlEgQ3
mapVcAqj+VWaFPSkEtCklWfyTgqhBG9KZPrBKrCg+9S9KUkIhf8+aeEcWQ2u
y8qOF8YKIZ3plJ4b2dVgiOW7afxLIVSX/E7ocW01aK5mVXF4IoSievPCBDaq
QdaxkE0adyGUb3o5tPFyDbi294nPYR0hpOkk8stO6Sv49S/wScKmIDI2Y1wI
Wa4FBr+kNv1WBFEwTY9AK7EO1H+udbw+L4i8Mdmbqgp14LMLk86RcUGkK6l1
0MexDkROPOZsaRNEl1ksHjaP1AG9zoCXdO8EUctDj/7sX/Wg6oN/0g0zQVT/
z6Hr20QDOBzv2u9gKIh2PPNu3GX9Dt4GXxG6piuIRA9+aVI78B08vaqZZKcu
iA6lDLXa3/kOjEVYk6wUBFG1d7Jd+uZ3MBYRnqjLLIgmznk66/I0AZb7KQkH
PwsgyX7zsyUuLeD+9fBehQIBZJPG/Jc2vgVMm/oLyGcLoKEPC/IPKltAm9KV
hP1pAoiROgB9WVpB/Ix0gsQLAcSpEnxF3qIVyNrmxlMcBJA0N99Brd1WoKdV
EbdBFUBn+3zea19uB5162I4uSQCZGzxnf+fWDqxMkH0qhwDiYOPaFAlpB9ft
quTOMwggPp6pUbOiduDvVVuZuMCPKs3M5xfZO0BRXvMkaORHP8PDDsyiDiDI
N3gs0I8frR2IS0UnukCqyNCrX178yFeauHzNpAvISA3TK3jyo8g3Lg4yzl1A
WWm06aczP3olWiFHn9IF9HX/2Mpc5EeWwrMRHIw/QIDf3JNGZX5k5Zv/N7bz
B/g7udtDmuZDDKP9xddDuoHqUocd3R8+xIxE9h591w2C/2X8XRjmQ25v261l
67uBFJf+dutPPnTdd3H8MVMPsDmcIvqimg/N5tewsDzuAT+8oQNbAh9q6rXa
vvbkF6jk9lum1+ZDJuz8sg15fYAgZPJwSYMP7QvLs83s7APWUjJMo4AP/Xt6
m61gvQ/8U2njqTrCh+YdGty1TvcDZWux475ifGhwxfhXYGc/yMqs9Pu3zotS
/82Pu9IPgpiTdFwrGbyop6bC8VDVENi0Hi9TTeNFZA+Cb3rXELjo2+Do+4oX
qebTyx+YHALi1RG1bFG8yMN3/Y0XYRjkaEl4i/vzovXFWk1Jm2FQa6Qxc+Ei
L/LNHb6SQj8CVm8Efn9PwNfLP9LQbzUKLJ46/jfPxos+iQRIyLqMgrIsPWll
Zl6Um+uVGxY8CvznqI8qt3mQfqBQYXrRKOB0z1DtnuJBuzWvChYJv8Fe3/p3
jF950Jlszk6Vxt/AOJo12OY/HuSmLPdox2QcFNQDxgo3HpRc5NW84TwOCFtu
/gJ3eBD34/EOzuBx0Hh50OvHNfw64DAPLB0H6jIf7+oY86CdHvsL2aJ/wKGy
S1YqCjzIe5RK+LvwBxBG8uQJY1TUsqSunZo5CZzJ4x+chqjIq8aybq0GLzVN
AZnvvVS080hJ4cbwJAj+8FgisJ2KBB8K7CTzT4FdN0vefxgVdTo1a11+PgVm
mRnoJuKpKHLa/uXBB39Bo5xZF6ZPRVm2S9OPHGfAot1lj+LzVHSIWGu6P3QG
8MY68ORrUhFhJfjpUu4MuELnaZF6gor85JgCZ1dmwPaP2P6AfVT0/Fj7v6BH
s0De99fYORoq8qFnjDF4MwfC2i+tduRSkJtbdd8n2gVgfO8KzwQnBYUprjqV
Ri6B5zVe/cqsFJRNjr22lbkEvhGj0h4zUhD7TRaW8+VL4FTWVwWJf2RUrG7A
Qx1fAtLDUlrWk2REK8rOZamyDDa1Jz07q8nIOeGydejgMkgRdv6FPMno4+7r
BFmVVTDz9V5S3Ag3yncnC3JwbIDo2vO85CQS+qfwiKX7wS6IlA5uo8SSkA7y
sy+O3AXhwTUhPC9JSLTcKjU0exc80z65zf+EhH7MvDhAGdwF/s3yI2LuJDRb
4OFUK0oDb/8gZinoklCtv4fVkB8N1Br/Cc5vE1FpW5O8yElaqHmWvKGzTkRH
0ncE3LVooXqmfoHeEhHFeegVVRjRwlOO3yQNJ4nIf0GVfMCRFh6eLd1j0UVE
hwyTvt6IpoViq0kd17KJSGNhQUBjmhZuMl5x8L9ERJ4PGV7uf0YH2X3yzvwy
J6LHSk+frUTSQeH1fxKHjInod/qB6bwkOnh6KmpoWJuIDIRbvNZz6GBwc53F
aRUicgyosq1vpYM8MbI6NNxE5Dd6It+SSA/3ETz3m3MSkXqtfZw4Hz1UfVLD
kreHiChbN370iNJD6weXvl6mIaLZEpmjVEV6+Pbyi1PYDAE55DWL1+rSw8P7
lhS96wnowkTPP/pAeqj5GnD9qCYgysIrSuUzemjO/2xGDiOgq7znqp1e0kMv
9r3v+4sIyOJSqmR0Cj2snjeVOJlGQInvHxjvLaWHhiWllH8PCUgqynbOZIoe
3tb23/xPiYD4YcaCFGSA2rWv/92SJyB9T9q8wDMMUFKtcueyDAGNdf6b7dFm
gN3HaOg1RQhoT9Za8EUTBghlvNlIbAR00Vz9Q/8NBihKWFYx/sqF0g+GSxwO
Z4D2T0e9PkpwocGDasFf+xgg7yNxv3g+LhRkiDb9hxlg433bx75cXOj6eXF3
jXEGeNhxMFRnixPZ9m9PdM0xQIZzva9+t3OiqCZ3D3V6RviWqQOR/TlR7ALN
q0ZZRmi5Q/y6eY8TGW9yyxMPMkLOVf1vQ06cqC9oZtVOmRF6jDW3ZVlwoj8p
+64onmaEZ2saRjQOcqKY37y2vmaMcMKvisF9iAPpBnpnmwcxwq/vxIyYf3Ig
aux+lROhjDC1zfd1XBMHiueiEzv4khFaiYFTFaUcSPHM44oLyYywGX25xxzF
gaanGuyuFjPCwt2PU3HnOBDzz4qjrLOM0PthRmtFATsKeaGTMnKNCVq9YRIx
eMeOavZmDW06M0GVpqtOo8nsiKX8po7YPSa4ICjJyhKK33/5TXV0EBO8Upai
buDAjq61U/oo75jgua24T6MC7EhJQY86MsMEpSQ2GDxI7Gjxfo1x/CoTpDtv
bsSyhx1NJdaQzXaZYFk8df7AKhvSfX9NppfADOVVX8p4tLKh2lb2xnUlZshm
t3iPpY4NKdhvaqATzHDiiUFtfDkbYrd6BgPPMMPXPVz22Hs2JDXFnMRqxgy9
aW/nG7xmQyFhdQ/rLjNDS5nm3dEYNpQX19fsc50ZHjWQ0/N4zobuhw/0HbrL
DMn/PUtkecyG+oOSugb/Y4Y2nT+F5NdY0P00dtla6z1QPPvD2ePuTGj9Abvr
6iU2yBT2dMNSmAEdY9r7zVOMA+75OR3JHkWLhq25qqyWOKGV/sc7r512MNHQ
5nBBTQJs3eFu4bTawdTaHzbSnyNAjWxXOS+tHazqBI/VwnkClGdVmjKV2MH+
XJjtGjYgQLqafHv2nm1soU33O6M1AWYezTW9p7GNLW/pywp5EOCq8PsTugL/
sMfv1eXpUwkwfCaZZaN+A7tGq9zOv06AUhnnV9s/bmBjZsUm65sEWGazNpqV
soEN77wf+75NgBMdepiN5wbGlTtUYUBPhLB0271eegOLLNhjN8RBhLOBVqMx
gevY2BLl0pw4EeqI8lQoa6xhn56W76HRIcKRnqoPBMU1bNX8pKKvHhF6vnSO
mxJYw6SUnCcZDYgwjanW7dXSKsb2VLtK1JQIN6fdZJnSVrFDymUC0IYI35W0
x3bRrmKWoeUL0y5EyGT03NUNW8Y+V10YvRVDhDO37q+8zVrGFmukT9+JI8LO
wGv3euKWMVqZk7L3E4gwtfTUg1Nuyxg7g/6zhGQiPCk+588is4zts9Fpmcog
QreFCxGJEUvYK3v6/Tqf8ed9QcyvubqI7bdkdd/qJMJv77YPrRkuYvXmynbV
P4gwr3ryowxcxMTXo2rDu4nQe62y+Dn/IrZUKFB0uI8I+S67IPOWBUyKp33r
7CgR6st3tEyrLGBLPa4KwfNEiDVGzpLZ57FVy9SB6T0k+Hw0btdhbg67fzwm
IpKNBF/JsYq/rZ3DNFU+oYMcJFheOXVN3H0Ouxl9Dl0gkOC/yQ/z/O2zGO1s
94w3lQTvq8ozsD+bwUK+mj8OFSfBkIBXUtr2M1hOfjzbpgQJxjdzngtWncES
Ch5MOO4lwRK7uVCGyWnsAq/wVeN9JLgeksezfWYaG305FLEpR4IevYdkZ3en
MDOt/yyjVUgwcG+a7oGfU9gPISnOgWMkGH2b+45jzhT25Xx+u/BxEiyiX/44
fnEKi7c6Hv3kJAkuyxadGiyZxGJXxeduqpGgi9dRw1bXCYyzOiL06XkS9K/N
cOM8P4FV37U0eq9DghEE3hgd8QmMRoqJplaXBPPT13vrW/9gDJ2rIVMXSHC+
seRqpdwfLLg/rnPBiASdhU78V/BnDLNLDh6KtSJBk7nD1FxsDLudOn/R5yIJ
nqiUK/wQM4ap+bloXL1EgqxXRWbSz45hFoZP+yUvk2BGFp1tTMZvrPHXuzwb
O3z/vbe2X/r8xsLojyTL2ePvr78cH2b2G5tfcn6wgbPG8ljnE+bf2K+FU3NP
rpLg0PFvWl4Oo9gAz6DyjeskWMdRNeYJRjGPRndHoRskmDNY6u/OM4qd/NV0
oxXnh4+yypzrRrD35S/MFG+SIP/3F4q20iOYp9KF2jwnEqRNCm66tDuMSc7y
HNR1JsEJZz9Hy5/D2G+BDd0JnD+RXNONgoYxm4rnbyh3SNDI0pRX888Qdqh9
nfWoCwmqHrhQpIYNYXb93/nLcBbfOWsIYoawc/0qzqdc8f17feyZytkhrMDy
tauyGwnydhyjMdUbxCjln1223Elw3ENW9cLOANbdZCt13YMEP/ILuWnlDGAk
6+L5FpwN7GgmVDkHMAU3ce2X9/D6WqhtEWnuw8Tv1MRueZKgeVTxHj7vPuyk
Y0Wi7n8kKHXsvTpJvg+zilD9EI9ztW/oZ4bnvZiOffjqgfv4eUv6LGyf7MWE
Ow3rXXC2qb8juzbzC6vVGOH5hPM/LuPkSd1fGLrw9abSAxJsKDzTM7LdgxVP
Pee4iXOc2VHuvuwebFJ4wToZ5+tb+3S7LvVgF18ujLbhrJzMH9TM0YMxqGmO
0HmRIIM6e2VdeTcW9FG3VRHn9vHtTeTUjV0XCqO3xDklZO5wqVA3puOoFO2D
8235YefCpp+Y8gO5g6k4+xt1bnA++ol9yb4gjHCO9KwLcFT5iYlKYw96cX6b
VMpVO/MDayEomizjXFKVHS+WhvOX8gDWhyTY+Cdl70PzH1iqpHSPEM4D7JF5
3Rw/MGYPYocczvMHg44fru7Cil/aTqviTG92v/aFZxc2u8lw9wzOVC8ng79y
XdhNk0efdHHe99qmT3O0E6NGOhob4axaa+SQGtuJOXNI8pjirPtXc3FbtxPj
NK37a4KzDUH1oQV9J9Z6rmDcEGeXI3IsRcUdWDO1aUEH5wBL0ZcE5w6MfZlG
QQPnGB9u4VsSHZjudf1qFZzfpzO9q+tux4beBZFkcS77tqEk8bwds/4s9JYf
5+bZ6Qpv9XYslbfiIDPOw9xD536tt2EGfpn/zeP7sazS0Xkkpw2Lqf848wNn
Juvay+H2bdjpS7cmSnGWzcxy12puxd4abYg+wPlUUzJN+qNWbGtmctYUZ/3F
iKe7Kq1YIG3oDwWcpzwX1ZzOtmB0QuNl3fh5c1V3m0sWNGMsGNNkJs6HOTDn
XsFm7J9t82cPnH1eP40/t9iI9WjRTbDinP73bh7NpUZMfGqiqAWvt29HzGs/
133H9LtGRcNx5m6QXNyb1ICNH04q58BZhczG0s/cgKHMKJpveD1fsl4QinT5
hunzqRf44pyxWH6OTqseSw1zDh3F+6HxRPrlkoI6TPUWO4zAeSEwxP2OUB3m
Xy3yHeB8XMDs9cDiVwxp7Ba+wPupRX1+vTSpGjOfqWJjx/ttOfQHpwtLNfae
5s6XdLw/+brLJGVcqzAdQj6LCs72t57ox2hVYge73MrM8H6elTmj/2e8HBNR
zN9zH+9/lQqil0lZGaY9lb6wcRevX8OBjOrwL9iEsPgrT5ypD+7tJp8owQoa
BeeccD0Bje9yzCM+Yq6lAUOKuN7EkY62vNArxPoKQwxDcX1aMq+Zq2UtwA6R
f4xM3sLr63u5rSNTLubt0n4+CtczwR3paxIT6Rip25a9EtfD1hC1jHCbVCxU
puoVPc5MCqWtu/nJ2HWCwauTDiTYZSvZVfwyCvs5nE3KwfVU9N6zwWwXE8yA
u3jZGddj5Y2wnRrMCTjsWCVF2OLnx6Z6XOW5H6DLOqNdaIPvZ/shPvuxCODF
VrS8Yo3Xp7JC8HpYGlASu+h7Ap8HgdezQfV4Ifgqs4f7CD4vDoiLijzbXwQe
mDlu7jfE+783YsfY+RMQtG8IETAgQeELnuXjK8Vgj87MzzE9Evx8RP04K2MF
aFVW3jXQJkE3v1sJmcQacL3IjxwKSfDswF620MIacOtSV+d5gOv58cH7d02+
gudHno7TnyJBtGxgqRpXC0ITVg9cwucj+/WjfI2i38DtktNrQ0dI8I0eXcyc
QjPQvl8+Zbgf7//M4itcdc3grSy91gw+j1Xpbx9SsG4BAeb7ScHS+Dzonbl2
VLMVTL6VVi6XxOdJmCXdPbc2QPXleTIqTIKZG0rHVls7wEt/bb/HJBLc/j7+
dvlJNwhYfMb4co0IxTcqQwO6usErW+HgwRUi1JJKciOL9YCIt+qnpJeJMMLX
SO1wcQ8Is83rSsT9yb4jqN91/BcguWXeo5skQsNXceQltX5AJxwwtIr7HWMV
qcr17SHQbunyjrmYCLnOsqnSSQwDxeoS1+oiImwwmS9g0xoGv0cy1/wLifC0
a2m6cMQw6JvmSODOJUL5HL1gDakRwLOUYx7ylghZJO9dCNMbBY9dXtzZjCTC
cq76funkMdDGuHiQ1Rn3i8LZpgdrxoCxp2nNm5tEeFguokV1cgw4Hh+tUb5B
hO+1L1bqKo2DT6aH3h+6QoSxj+fTXevGQUvm1dtBFkTossV7C5v7A4qOkuui
1IlQ6s+NTVM4Bd6Mzd+k4yHC5MFPxkHXp0C7t4vBZ24i5O2mz/0cNgUE8s6z
3yUQIdu3JHve4SkwbKGgScdKhPPv2xp7/P6CB7yimS9xf/zF+VjyxeppUPY0
fcR7lAD1V1k07DTnQCs4qrT1gQDL6TprlaUWgf1fJcdqRdyfC5deXlVZBG7a
h2hE5QgwUjVlvej8IrB2uFHtIUOAt1xu7T9ydxGI25V8YBQnQP4RhudKZYvg
ZdbOIg83AXpUHjFRNFwCBJVsNf0xLqjoGzMq470MArhsut9c5YJp25Y0Qj9W
AdZzZf89XU6orTh4bXBqC6Se6y65l8YGTTPeWFcY08Dsz1xJhxtZIPGYke3e
TDr4pIK54CJihFnXfO5vyjFCdPDLxg1IB6VCktnKg5lhnv7xe9FT28D33KnC
GQorLPQWdDxEWgNXnhoXKMewQ3OytkbBxjxQ/6j47EUKO2zcevkz8vc8EO9n
vzbxjh26vLGm9W2ZB0PyX/niy9jhLYX0jLm0eXCx/Yjf9jA7DL094+R5dh4Y
8/Ho1xzggHoeD9gXdebAmYyeGYMqDth3+ViAS+U0kKq2lnGa4YS81SFT7bIT
wG088suLNU6YePXZlXDGCVC957tuAS0XPE7QJ2/3/wE2+kdd1ihccP/5zeNT
wX9AjqsTA78oFwwwC1HzufQHbEenRZ/YzwWf685fTzr0B8T3c33xO8UFx9E5
gYCRccC1jnSiX3DBt9fOjq83jgGvaGLxIC8BCml2fh19OQokMg/QLggRYIiT
QPaOyyhoKDmrTSdBgOqJj9VzDEYBX//DPkn8nEuUrc0GyKPgk8QUjeNpAlxS
iD0t8nIEzOdVnVu+QYAKW1jWk/+GwdXvrr0sXwiQecB2f6j0IFiv8d6txgjw
rodf8sjEAHhW8UTCp4YA7Z3GtjRyBkBBfvLNlSYCrDPw46zVGABnPrx/kddO
gB/16JV2eAZAd3pR4c2fBGjbrchInO4HOzHft4aHCFB2oTYgI7AfRF+REPzC
RIQT9tHWv7d7Qe12+0UnQzw3xdNTbLu7gcVav+8+MyIMl+RMSinoBtPzE+mj
VkRIknzDeCGoG/hMLdW/wnNacpXunRSzbkD6vTNtcZUIjy9R+/WkuoF1w/6H
mp5EGLUv4eiu+U+wGu2fJPKKCAO+pN8qHesCT8JCK3+lEvE58lWBsaILCIbE
jkXhuSywOEIuLrILqD3MkWPPx6/Lv5b+CrtAl0eJQR2uM3KGXoVuQl3g+p0a
d/9SInQ8OfW0cKsTPLf/Vb5eTYRXs27ZtWd1ArFLY8OF9UR465LFcVafTvDR
dJ7xdhMRWiy1KD+60Al+nWPSG/t/rvPIi1Kf6QBO6kSXlF4itOk46Xi8tAPQ
nBSMthoiwrH7H8PkgnCdVZYupY4RcZ9VdczVpANIKR4aaMN1sjmW44+GVAeo
4J0+5D6L50wtgD3aagemtG+DeJeIUNJGh4H5ZzuYnbzc9wXXZR/nVc+BknYQ
2M538PI/Isw5tbN26lU7+ONGGzDNSYKhaVYertztwPfSl+4X3CS4Bo2VExfb
AK+mu5wSLwkGJfrKPOxoA3nyCv4/BPG5YBFAufO5DWjxTP74T4wEX5jPXvBO
aANDu6myQlIkSJr84f3iYRvwnLjoi/C5s9h15eO5i20gs6RVhvkw7jt5arr8
iG0ApoZ4v8dzX/zRG/QsE62gO0SjQxfPdTne9aVL5a3gjuuO9MJpEty4+31W
P7IVsFws9orUxH16+pBr0a1WkKLh0nYUz3m/7jms051rBSpyB6R68RzX/u0d
N9eBVtBKGb/vbYznLpEnEbe5W8H1neQWMQvcF3FY+s7vtACaPxaSX/Hc5l4b
qV8+0AJiW7j/u477AodPMwfuYy1AsbipiQ33ER+IcabRUS2gPiVIPBf3Ib3h
6dVOV1uAjPpt9xPeJCjpHjhZNdwMqmRlGgb9cV+478jv01gzsCSPCj8KIkHH
zTSaB/HNYPFfoqvUMxKkcd8n4ereDELGTOu/hZGgRH2ekYJ+MxBvJgg5RZGg
5qSC/4RUMyj91HCXEE+CJyPYlg8vNQHD5IDawlckaPbVc22ouAlMBZ0SMEsj
wd+zGrx+D5uA/53125sZJLjz4UC8rGYT4LcoqEnKwnNWaExaEXcTKDh9i+90
PglaxDfpeUw2Au39Us6/i0iQeftOnlpjIxghDVUFlZLg2FZ2r9PHRnB/K45H
FsN9WvlhN+VXjXi/Gd1qribB2r1xicuBjeB9I0fl3Xo8VzK/ca1wagQHTLPY
M0jckFLoP7I//hv4d/zlyVwebph/u+UMdu0baBS77/xZkBvuEb0US1b7BhKZ
bZMxMW5YLVP4LBv3LbdmzrbWSXHD8Zp5JoO1enCiQ562VZYbvv0ylPatvh6w
l1AOdStyQ54XFydgTD3oe/XPbugIN3RsyL16yr4efAgYfTmhyg2306J1BhXr
wX3Hhpp5wA0ntW4GkPfUA239/JV1DW5YEPyZ4cJYHeBXjpWi1eaGhjJesRVf
6sCUgI/ZngvccNj1p91/j+pAKe21YKIxN7zVn5Uqo14HQv7olPBZcMPlrKBi
ra1aYNmkNCVmzQ3r1go2GHJqwf5CfoH99twwfk+NJad1LZAmPJHJLuSGC6wP
P4awVYPVlduWRcXcsP6NvKhOexWo7TV9Wl7ODZ8//3L24IsqEF15suxrFTdk
vsB/UkmtClzLkJxpquOGU++ZW8BiJVAOZRP+0cgNdwoG9gylVQIm10W9gTZu
6Mc7Yn3IshL8MO/xGf/BDYGftUkvfyV4ewrlzfbi1yUlUmgmEfCQzBheHeKG
8h6yn05hCGiyPiftjnFDt+LhfulXCIx1WblxzXPDMXu90pfmCEg6rR1VZCDD
CLtXPYVXMSDecFWz0JgMTzHZbEc8LwEDMScMr1qQYfN6SWafRgmIu8ptzWNN
huYg7tiR7WJgrDR145sdGXbKtflcqSsGBNpK9wcOZBjISg798K4YNDbH+Mnd
IsOVs/K2x0OKQVCic+jgHTIUVzoIbS4UAzXHM3Hh7mQIOpa1tHY+g52jgm/U
75OhzXXTnoa0z6CUcSlvxZsMTx4oau3W+QzcO76VZTwiw+iE/9SKFz6Baed7
nWyhZEibY8T/W/gTyDyhN1QeToYWXBM2DrlF4Arr3unb0WSoXin8e1qzCIh2
b62JJZDh+RuFLGtTH0Hvm3b6zmQyZNWRq29J/giiXd9xBaaToX9aQeO5+x+B
4WlfAZV3ZFjoItbAf+0j4OQyk57KJsPaIJ3/tvU/goY+OaXEAjL8+IDRt0js
Iwh8zwD0PpOhifJqb+J0ITjt2atNU0aGx//KlPh+KgT/zhSYFiAy7Ks2uuz9
qBAUcz+xu/KVDEP+9LxoNCkEbsOXnakNZHjs9y8XFtVCoJCrfL++mQzLf++Z
CJUqBFNeHIH3O8jwwaGQ3i6OQvBW+3f4gW4y3KIVt+PvKwB2vF+SBvrI8O1P
qz3TCQVAaDz8XdgwGbpFv43g1y0A3YXXi9TG8edNv9VnO5cPIv1A5fIUGer0
ycF9T/OB/gVq09s5Mkyx73rdtTcfsAnNdJsvk2Grx8H52zV5oHaq+jfrBhny
v5ZUrr2ZB/yL4+fLtvH7pUqzhyXzwKnAu/+c6SiQluvICkt/Ltg00mIRY6ZA
ul0af63oXPBJTITcwUaBGT37RRyf5IK7cysijwkUaLx5ZOza41xwoLxR9iiF
Ai+UMUwcscoFEyFpRyf5KHCR26b8+1YOSDe/r54gTIFGa0pxnjE5wEbK4IKu
BL4eg5E6t2UOEFyWttqVpkDS9XYv6cM54GflzrX8AxToP9j8T4eQAyJedLnY
H6TAJdPzJoSf2UDvUpY3RZkCj8hsMrRFZgNW2UchdaoUOH2FsWpLJxt8XbeI
/g9QoJXOqW4n2mzgW6uYKqtBgZ8G6/3+vs4CJyKZc/q1KHBL/YDJfkoWWLcd
KHmhS4HrApTUm/YfQKFC0dfThhT4WKTs/pGM98B5+2nbkikFurxci+1bfAf2
f7frf2NFgQUMmb+P678D47HHJs1sKJBNr2wluSUTvL5GWNlzlQL5QowfKT/N
BBcP/6Epu0GBhla+9mn2mYCXroLd2ZkCh3K89BMuZILOlkheUVcKvPPTJT5R
PROEJd2UbL9HgRv6goa9iplA56aaYoAXBSr4GF71+ZsBmI/xnVD2o8DnK3PH
TCIygHkqJLsFUmDu9KKU8rkMkMl2fTr/KQX6tDM+XbmYAdbdXtTMhVHgXP7z
ux/cM4DWwKdEuWgKvFylvacUvz/27IDbzQQKzIzouKg2/RZM5DHqvkuhwC8r
WFxl0Fugwi+3988b/P8DsDTbQ29B8CPjbckPFNhjxDFYV/8GdE8/6LLLo0BG
+/JcdZE3YJ9pWnZKEQX+/nnTNNE6HXhiDY8HSimwcCLx1MmsNPBt3+IlQUSB
eyxZg7aF0gB/BJ+y5VcK7GpzsgafUoHjFuSMbaDAlccerOwJqaD0yvXxrhYK
DDrlzhiamApYm19UcHdRIKel9I+52FRgefRztMEvvP4OifGoBqaC9ykDzi8G
KXDhoXUHySEVbO5hOtv0Gz9P4o7WrFwq0HaVE2GbokC/H+8Km/69BvF9xmta
cxR4CVc+aeZUMHXGqyVwmQI15AU2a/anAtXctIyaDQoc2RLp/yObCp7yfveh
26XArPeza/Gjr0Gf36IZZKDCW8ceE/Y8eA0O/OVT9N5DhYqq28FPGV4DL+PT
LGWcVLjQA7MjfFNAY/n1oQ1uKvyyl649qz8ZCEqHFR/lo8K+ph7p1x9egVth
n8PchalQ4pd80YtnSaBsY+B6oQQVnmBcPpURnQjY7ZlOL+yjwpDTNgtF0wng
YqMcn4I8FT7o0iFLTiWArCMmC7eUqPDQ36bndVcSwb9XXt/eq1BhVLBV7tz3
RKDLkv564iQVxj9yizELSwSv7n7/T0qdiuuHEWvLoUQw+2vR4IoWvn56berp
hQRwSoN/f6ouFaq9u3hJtSUBPM8+TTdkSIWvP73zf9mZAAaoN34JmVOhVeve
k+FsiUDeN6zA6hIVCrKNSBgqJgLvyc8hcXZU6FFbNmC4kwCaDQftfjpQYcsN
kz37/BOAcBnTcYoTFXYFKT5RyY0HznvluY1cqNCtqkcn4mkcqHhu8jfsHhW6
FqqKPD0Xi+cxr+pmLyo8leulzs8UA2xs0xPY/anQTOD3sv/fKJDX8N1VO4gK
/Vec3ledigI0h5fOBz+jQpPdR2nK9FFAP4lfsjacCslP6Rot+aJACpPaP/oY
KmzQfONHCIwC87dvdJ5OpEK2KHYqzWwUgD1hWT6vqfBGMWvR56ooEKZWHFD+
lgpphl39As9HgaEPgxe3PlAh4fVjBU/2KKBIYT5yLJ+K928hmWoUBXy95Tnu
faJCJsvRztS0KND2x2Ts4xcqFL+pHhMUHwXEDR6WLyIqXImdOLliGwVcStOj
FGupcOKqxZkSQhSokmh0cv5OhQ7F+9MHPkYCUujSmaxWKuTIdzs6fDES/A8b
iRP4
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
hVIqfdyHAVmul6PRWVb8MkDLQ8ePAZX/TRyQ8GDFKjbh7A7+zHz6nBCaOcmK
VzYf3BhwlgHTM+97PhxixeyOEdgvgAGUkC3ZT/az4h05277anWPAvitCmvZ6
rFhmL/f8fCAz/zwR01vXs+L9azIfSoIYEBY/XiGsyIrLJna/dQxmQHl60973
Aqw4VdrKpOQ8Azpl9AVyyaz4spOc9JEQBkzcf9gZtsiC6WdMtrKEMmDd0zAH
3d8sWPrSoUK3Cwww0h5ToX5jwX9IDxrULjLAvtxu7L92Fuze2W66yOTQHY1l
9e9Y8IzBQtGXSwy49UY3JLuKBac6OKfVhzGgbO+DnaGlLLhp1WSpNpwBbc1U
rsOPWbBZeI5IRwQDuD+PpPDdZMGhL6u+iV9hgNn18w+Tr7FgMc0s0+1RDEja
yfVCIoIFX3UtNnWLZoBUgeLndd4smBrSK9AWy/THofjPMxcWHH62UpfrGgMe
iqB53WMsWJ7liDO6zgDN8KPiu41Z8MrXwW934xjgp/tXtRmx4NOayUY18Qx4
+V/A1oO6LDhyx3HfzwkMWM5i29+jwYL7X6t2fE9kANgk2jkoMseb2CU/JjHz
yyt75q84C7YXfKn5PJkBjbgg1JvCgk8+E7sUnsIAgXNbb8xysOCe3Gsm+jcZ
YKXecOfCCglLWeZNfWZyat+hp+RpElZQETCzT2XA15sD1deGSTgszyO9g8ly
+30/0H6S8PS4xj7NNGZ+SWu96Z9JOPBPyv0AJuc9vz4h10rCOtyj158wedRD
giWvjoTvzzw61MrkTXJ5VK3XJFwrJ3PkF5PPfdqs8KKYhK+YB24eZ3LF1dpN
O/JI+OeFw42TTF5Dlrvq7pLw540X0f/HjWZ+HNx/k4S3oBWV/5gc8+SMc8c1
Ev6vQkfiL5NbTi6etY1g2r+u+f3/TBOOudIXRMKC15q2/389mybhVDdvEpYz
WuVmvcWA25fu5465kPChTLYf0kzu09n4MuAYCY9W7Anbw2Sl4ep3y1YkLFvF
5xvCZPd7pl8uG5PwScLfu5rJT617/vIACav1KpgJpDNgivvUQqIuCXPXT15y
Z7IeMcMtvp6EnV+26rQxGatS1VUkmPM3ZmuVZjCA3Ht321MKCReKanWr3WaA
cYqG6WZOEn5xtEM9h8mSyWdfBS2tEZ8/aRPCmUx9WInvifq7RvjFUN0imLz+
VP5Syqc1Iifvy8IvJr/oqJe6/2aNUKO8ldlyhwFoR/+O4mdrhNboP4sLTG54
tHKCyFwjWD+nPXzKZEuaeFhL7BrBGXJ1fROTe0J1sr+eWyOiuFa2tjHZ+Y/5
myGnNcIso/9ONZNHLU8PzFmsEX0sNdk3mXyuMorMYbBG7PYWnLZhMkklR1lI
fY1wvbZxnoXJsYlVexTE1ojILn7RDKZ/tOUvbhvY1wjVxLEaeSbfdp2OMZha
JYLPWCrdZu5XqV3wiWnvKuHu8h54mKybu2fk1KtV4s+BhM+fmfEjKI78gbmr
RMZls7XtTN4XckHzSvIqIU/dWZPLzIedRZlPtucqEckaUR7PzHfbKv2DgN0q
sXFeykn0/+en0H996L5VQm9tduox8zy/svt4bWjzKsGSWTi5j8maPNrDNoqr
RJth4MNp5n24X560r46ySqgyBF2eMFnMbSp34+oKYRwO4+5MviFsxX7vvxUi
ZbOM9wYms9YVO/F1rxBvhmQ9F5n3LdCP+ia4foX4ePyOw1smj8j5yv0pXSFc
Cz8G3WCy/Ye2i9bZK8SZ3JFhMyZ/urDhe03cCnE6+eRDdiabaCRs0wpdIX59
sjnxjHmfq3vG0zPdV4gSKTP6PiZrx5rPcx9eIVKX5eRbmPc/T++ZTaDRClF0
hQQGTJb+LfD818YVwrxnUv0WUy+SUrzoVrIrxIvLOt1fmXrCuavVl+BbIch3
Fd7yMDl0cn2bxuIyQf9RXKrI1J/Jezc0M/4sE4y24/NqTH1yNRu9zvlpmdAZ
HZVWvMEA8/wC4/5ny0TOHSJ18iqz/tny5ZnfWSYE1NYf+r/+6XOd4ai6ukzs
ySLsnsYw67uLem2ayzJx6J2O0Dmmfs7KPNl+QHKZuHe31i2IqbenW7hvV3At
E0l8C60pTD3uC3FfUJldIvL/O17wmqnXTV/WvWBtXyKWf9NuiTH1HEXHCPlU
LxEOzeYd+5h6X7b5r9/3/CVihTPp9VlmfbiT9EirPGqJeCDG6/iUWU9oOznj
lM8uEVvcngq8YNabqHHXkSSHJcJ/LWgsj1mPlu7Um5DMl4jOKD1GDLNe+Zgy
HntuXyJex3pesmTWs8HFK5xfVZcI9SJ1LTZmvTv6eNBln+gSEW7j25PFrI9G
HA8VFKcWiapY66j7vszzVUYOT+hdJAp3F/8QZNZbTSfn3pXmReLk19yN/l4M
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

        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
2pZeJpSzLpuqjPHjSzXHL5T2MUHFU+WaQj8/FlEvNi8ZYMIozXuC8pkfr5QJ
EHqHmeB7gF7+O50f/3HPGxz/w4TO+2///Ujmx6X66W9PTTHBYNxKozeWH9dN
dIX3zjCBdDPnTkMgPy7x2fJVZpEJtz6ZOOSZc+Zr2V4/w8eCv9JTyVkm/Dhy
wqXXhswC83P3Gh/t4Mc33t5RdRNmgRz/zy2xmvxY/FbQYIEoCzJ3XRP25OXH
kqJ9G/sYLCjFpfkb3vDh5HwduTvbWKBMPfdD4xkffqRNCqUCC8JPU+VWpfJh
L0Jo6bWdLNi/fOqqeBQfnh6Zz7M1ZkHH1sWjM2f4sJ6TFDw5ygL9yLQb4xZ8
2K7w9LGWEyx42GFcOnSID+8jKG3/e5IFZ/0S1dv1+XCBueHfBVsWTL7RWyoQ
58PtVv49Mq4sOMLbrZ0ryIcXCk4qPHVnQeGRq2cziXy4JaRHRNmLBYFTzZ/v
jvHi08eu36r3ZcH3nRdJMf28+FMrZWjFnwWGt5mbI77y4mStm2rSl1hAXu+e
6lfJi9dzMSdIwSxwDpZqdy/mxQdeHJP/EsKChga2oGMeLx6didG5E8qCeFeK
94kUXsy/L6rn8zUWzL1/nWV6mxfLWi6nHIhggSXlZLdxBC/WFhRYKrnOAubz
p7u3evPiPVtTb569yYIXGp5VPed58VzQlbu3oliw+dmWXaE2vJjwlL81J5oF
B59+3FF3gBcnyLEPNMdwzpP1Q/+0Oi8mxqQ8ar/D8Vctp4RbiRf7fRcqao5n
wZ3MC1szJXlx/75DlQ0JLHiWwbP5D4kXN9hNyLUksqDzCWvDlR4evME6eGzV
fU58V/3KV23jwVo5vtGHHnDi+zhfu7aWB+87qmMV/pBj//H2deJFPDhhyaZV
No1zXpbAi7e5PDjz96skv8csUEpr0DiVwYP3GC00DD5hwabU0+oZcTw4/vTN
ppFMFlQoqWbtjeTBqp/ED4Rks+DAo3HViWAebPbP84TaM87+Dy+t2uzKg+0s
fQtTc1gQd/8eo2YPD+6Vl/5Pu4AFDAXbB67Ag9OuhB7XesuCpynqCmIbeTCD
Evt3YzELypLfyp5U5sGfbtwws2CzYCKpXeL3MglL1yZ5VH1gQYDMgzu3p0m4
ydGysPsjC/iSzoptGiVhkQVNz8kaFigkTtOCv5KwpG7SH1IDC/YliAqLviLh
+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
XoMV9v74BQ+n/9dv1dRVYmtW2KV++8nbOPWdvvjFXotnhU3uF154wukf985O
hRtMLrM7agwGDDn9RrlRJNukZ5mtl2BW/ZXTv/TSjUYd3i6zS9eNXv/L6Y8W
B1+5PXJeZgvtcT+4i9OPG5ZFP1MsltnFqrSBf30cvfjcc23Af8vsNOs/519z
+rkmWeenOWuZrXTWUdec0++5KvJshb4usSs/xVoLcPSBjwetzK9qif1UaVqR
0MGCUYY748fLJbbhn887pr6woPWS1rfSqCX2eNt1/8o2Fhhr3Nq6LmCJLRWQ
tSu5lQXvO34nJp9bYjP9FXxtWjj9ZmOOuY/hEnvWsGj2VSML5Icorwe0l9jL
Qz4V+hz9EhvnImqquMS+bv77U249R5/8WdugMb/IXnk7/PYYR+8cePpsT1/O
Inv83nT6r3IWzChkb9snu8jWtXS6wv+aBefrBO4V8S+yHewlHI+95PSvi+fm
VGcW2K0yHtP5eSz49GX1G67GBbadesuCzwvO/74WLub2foFNbj30pouj517p
Dnt8e7rA3ijRE6D/lAUpsRnrCsMW2O1yLWp9GZz/s50vapXXAjt21XcqI50F
Yb/PjsZaL7Cd9GIL93D0pJuJSpbztgV2bnRlgDVHfxryPmGyJufZGWZNUXc5
evbtK1LwrZ559lzSTXvE0b+atnY9S7XzbIfNxPRvsSyQxKzkLxnzbGnbwUtU
jp7+6ZcqHnVynl1UTOcr4ej1mLEH/HPVc2xvslfGRU8WqGTsnWl6Ncd+1D3p
Icx5P5RY/et/9nCO/eZT+aUIFxYMN+9nW/nOsdu2ajtvPscCKFryrladY7/c
F+cSwXmfjIdZ9CeEzbJHtU/mftjF0WsMyfd6hv/Y30X/+a3ivJ/6vpY9pWr9
Y7PyRL7Vi7DA97ZL4k/Zf2ynu3qeIUIsSOOt8rr/d4b95g47noeXBfOjXmt4
02bYx+RDnzbOMiHrbdPdVuIMW0pdr1egkwm8h6M8vdhTbPbOqVDpFCaMOflP
pz+bYndld2dsSWRCS9hZn6+JU2zuGhTiwHmPpxYZXDTwmmI/eZlI7r7JBH3m
7xB+tSm28J8lka5AJnj9ORCbHPuXfVnTbo/+KSb0RdPyKs5MstXyKXORMkxg
18aNiwlNsLOlqbENV5Ugqj9xxf73b7ZY8cHm4CAluL+WzEyv+s2O+29aWuGi
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
H0lmvbeoGaBhwSDJ8uv3QPQ/LPQ8Kw==
        "]]}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}, 
     GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-10.701752291395596`, -0.005805466155888624}, 
     PlotRange -> {{-10.701752291395596`, 
      7.195194394075615}, {-0.005805466155888624, 11.308229297054151`}}, 
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"-UL\"", "\"-Uloop\"", "\"-U\"", "\"-U11\"", "\"-U20\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.744469065649262*^9, 3.744469087929738*^9}, 
   3.744481966968913*^9, 3.7447549142229424`*^9, 3.746037010644614*^9},
 ExpressionUUID -> "7b79932b-af6f-4c8a-8783-44ba2730af57"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"XL", "=", 
   RowBox[{"Interpolation", "[", "XLT", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Xloop", "=", 
   RowBox[{"Interpolation", "[", "XloopT", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"YL", "=", 
   RowBox[{"Interpolation", "[", "YLT", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Yloop", "=", 
   RowBox[{"Interpolation", "[", "YloopT", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"LogLinearPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"XL", "[", "q", "]"}], ",", 
     RowBox[{"Xloop", "[", "q", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0.0001", ",", "300"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<XL\>\"", ",", "\"\<Xloop\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"LogLinearPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"YL", "[", "q", "]"}], ",", 
     RowBox[{"Yloop", "[", "q", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0.0001", ",", "300"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Yloop\>\"", ",", "\"\<Yloop\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.744470752450013*^9, 3.744470824070421*^9}},
 ExpressionUUID -> "26d7d964-a2dd-4df2-971c-3f3713b33bbc"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
XI1WTlPDBbbJw0QN2liiK4a8wHk00Foertg29j3RF0e1M2nBjWby0MbvQ+Py
EUcEZfYgzUQeFNw+bLnCJ45id/zySzSShwiffOPYMjH0Ll31c4+uPLSrrPpP
kFsc6dR5exppy8P8fFR/dKY4ypzK/pCjLg+F083aNlISaIre7PpLmbOv1HPD
wEoC2Tovdzgw5OFPNXtII1EClR/XcaiiyEPCNcPrPZ0SSPBRSJsIQR4Mhhyu
BVtJouCxgq27peVBKraGLHBdEj2jdLxoEpMH/XdmTzXvSCKGvYCVkrA81B3X
oHkdl0RJycaNyXzy8NBgpY65WRL13duH+rnkoVQodbyUIok2Dt2oM16Sg2y/
TxOKvyXQRULfhrzfcnClq6npbocEmt8q+fD3jByss5he3lsmgVwSrfVcp+Rg
Ia6lK6ZUAlXfTrhbPSoHv5sogcOSkkhi4I6WxHc5mF61GPR9UBJFyAxV7P0i
B5Uv94bG10mhV9ZktdZeOXg2VdKxoCmN1P9zuKHaLQed/trHR92lUVrFccXU
DjlQO/Ny/FGgNBr6VFs02CYHFuAiSg2VRpYS0wpmLXIA/10a/bVbGhWbK+df
fiYHrhYXRmSSpNG/aA/CEpaDv7bp9dq10mhKgJd7JE8O6kk/jxgEyaJXmjve
YwcOHm3ujyM/CGjG3zf20TY5KApz43dWJyLCxRD5u9Zy4P6NUXLdlIhYbZGP
yszkwNgDTa5WIqJA7ridxcZykHMmb+COEBGdNDyymGcoB+ePRmWt1iGiO+Fp
+ed05EDxr2XN3yoi6rqaaZyhKQfPrydcWG9MQstdFz8dU5UD9R65kJkSElIS
vZqUqCgHsafUJ3b8IqGtZmW0WKoc9Gc/LmeIkVFU7F2IIMoBa078UdoMCV2o
eLwrREYOVAv0E4sHSajuSwO3n7gcfIr/78BrMzIakH15zV1YDmQF9twwbycj
wW0dlo58cjC49QmJZEdBWkd6vm/hkgPl356fUQEFudwfSDX/Kws23mW04M8U
FD82prJpXhakLH46dqkpoCaXv7s1JmThlYuK8PYbCmginUdEeVgWdnoFfP5V
o4CksMgthQFZeL/lVcRMiwIympXeLvdJFs4/SDt+g0RFvmqUKbEPsqAyuYZ1
9TQVpfoonRXolIXVDyrU/s1T0a1zGuu42mXhCfdB2TBNGlpYNt7/86ks6Dy2
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
trL7iq/QmcFL/0J+/MA7E7tfRru/Qpc1hZk3mn5g9ZLvV7JPv0L1DWPBzJgf
2IqcPTKx8AotjVZMkzqm8BPU8FjzXRuK36jFK5oxiYuOuH/cV/gaxfbqrJ36
N4YV78ZIDeK3KFX52naN7jF8VGGDQOeXt+hCpHRUWNUY9mlM9Vhe1YHu88zW
DHmN4Wb9miJuqw40u/Y+q//xKD53NCmip60D7T9k6PTmwAj2/LpDWn68E0Uo
GP9XPfwd5z6s3HzdrQu5/tCTu42/4/o/hm7DSV3IuEHzXkXud5yVbXYwsrQL
CQfRJq9v/o5jvAwrHP50odJb3LtyS7/hlq4flICibvRlU4vNoZBBXOb611hj
6QNy9nAjWA9/wbXWpZnZk71oo4b9fXP8Beu02t73oPUh5spmJ5T7BRefZfIc
dOxD01c3ZBht/oIZ9Vij6kEfInRu4HKz68fpK23Oysc/oZM/m17T2vtwiefI
tiqdfhSp9TXiXls3Vi+rLeQP+4pSnN/9ETvajZOO/AgsTv2Kzse9OBZm1I3V
+CvOhV37ih43VuYxrnXhvtf+ysmfviKeHfFNZ+Pe434pYLQ7D6Dcw9LUcMVO
nPf1Yi19yyA6fPVU3paZVzjPWdHzqPt3dH183x0u71fYo4vPXTPhO2rRd296
+KIV85df2i56+TuSfqk0o1z4Ett+zt0W9u07Kp2p38Jt04xtjzKfVh0YQq8t
phdqC5/i6sVGu4KCYYRelVW5Z9dgs2S2ow5pDF2SMnx91u4e3i1zV+zy5jH0
y/3Zjybhanyj912Xc8wY2t5avyuM/zZ+5mJpduXtGKKsqAQrjlzHv3jE8htO
jyP6wYz+yv2ueGbjPC1XZhKlhlaip0P30POPyaZ92tNIg0mnZajfR0fKo9yK
t02jjt7sFZeIB2isGL0/HzKNqPZx9UNzj9Bi6JAoV9E0eqhvsUmYj42qrEP2
z0v9RNHJ4fk3/9dAmcdDnT9wmNFEWNfMfJ0hxzhyjNxSn3cqla6Z70hSbJJ0
oHV0S5RS/AplSYU2kkTJUVZps5Skg03FShFylHtyT/vr7+f1/Pe8HuVqIlBb
efyK5Ai5vo6ROmj5isjO2kTdlBKRodyy7Yo1r0iDo7Kms76IOEntXWDp85oI
TGa7il1EpKelf4e9az3JcBoRy54QkaOJXowD4Q3kQcrVZC/md5I7ae04Vv+G
+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
VM6OLs+vpxB/Q/ZmspMQ/wdS0kJG
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}, 
     GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-10.701752291395596`, -0.004187715186183111}, 
     PlotRange -> {{-10.701752291395596`, 
      7.195194394075615}, {-0.004187715186183111, 76.91532350578761}}, 
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"XL\"", "\"Xloop\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.744469096308169*^9, {3.744470814618414*^9, 3.7444708245909777`*^9}, 
   3.744481967123518*^9, 3.744754919127838*^9, 3.7460370139588547`*^9},
 ExpressionUUID -> "fe9c7cf6-4af8-4bfc-b599-cbd3197debb6"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
wqZagzsCqJ9X8Dj9Qj4oSUZ91aoWwPZ93/M1WvMha5MkTfm8AG4eYcwQxvLB
9V/QQbmjArgz6kzbQ93jMLB60Xd2iwC6GAzdcMHjMHXHaOmunACu37r2xMeJ
E8CqueqwOokfafEcZx08Dde0drS+28qPJ9JLfpGunQbTajO7jBB+VOkp2Lmj
/zS4XW237lrPj8k66fzcmgWQVvnVfJMGP1K33Kw7/aoABi8pGhx4x4e2C7Q2
MdMiOHmmhNGxlg/33pyN3GleCgx66Nk4Sz6843J9x8X4UrhapkGXNebDWavB
ee2LpdBcep+6UYkP00KvPfcWLYPJ4n7Cz3+86FziZiD2oQzWFciIydTxcvxe
bVpVehb4j+X89afzYsQ44UTgjXPAkvvLNpTlxameJ2lzPefAojg8U1KYF5/e
yE1+OXMOdl60kmmd4cGEKMkFtzXnYeTenNbKLh5ccYroHN95Hp58CA0WSOVB
w1n/bzf/XoDP4S9UPibwYGAvr24Z4yJwfbf40RDBg1Hb9M17HC6CySw5Zbsn
DxpfuO9LK7gIFcLPTwxr8OCXPcN8VqaXIGvVmie33nBjvnIH3Tv3Mly8V3nk
6DNuPHNmRa3yvcuA5kSvqMfc2N1jcm7t58vwx2HqPf0mN+pYv9p/xPwKRAZW
zGdncWOu/JEO6ekr4HhQVifYmBtVPxktH0qoBKH+7ydFT63A+nSIdqmtBtfc
lEsnclag2OXioOkv1XDcSvAOJX0F3hG93j1LrgFatWK/WtwK9A+oSxU7UAM6
+/3JdmtXoJX3pvGTG66Bh2Zb2Z4lLmSJjB9yEL0BJXsvXJ7YwoU5XF0rZH/d
hPcGK+8mBXKhzp+ocUWpWlAab3yy6MGF/0U5MbaurIVrXgOjwpZcuDQ1L3Nu
ey2gupSmKoULRVsetd+Zq4W2K0tB7NJlNuPjf0XvResgwK0u/ty2f2yxJc+9
17fcgef/ZJ6JB/xj0+pGcsty74BtzQ7tVMd/7HDK17rOW3dAR3jVuI/iP7aE
4yv1Se67wN1yM1T0zRL7Yevaa34X70KF8XWfZNsltnHfob9S0/dgll61Zh11
kZ39XmvdYvsD2NolVFIvuMjeQN3a+OnvA3i/O+qv6uwC+8eGwnKKRgM8fa12
h/vFAvt1zcF7u3IaoOz4Fd17mQvsGHDO4/V4CLb8l1iKU/PsikGdipaJRsj/
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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}, 
     GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-10.701752291395596`, -0.004837528376674559}, 
     PlotRange -> {{-10.701752291395596`, 
      7.195194394075615}, {-0.004837528376674559, 23.985202802323514`}}, 
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Yloop\"", "\"Yloop\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.744469096308169*^9, {3.744470814618414*^9, 3.7444708245909777`*^9}, 
   3.744481967123518*^9, 3.744754919127838*^9, 3.74603701415361*^9},
 ExpressionUUID -> "fe9c7cf6-4af8-4bfc-b599-cbd3197debb6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"X10", "=", 
   RowBox[{"Interpolation", "[", "X10T", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Y10", "=", 
   RowBox[{"Interpolation", "[", "Y10T", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"LogLinearPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"X10", "[", "q", "]"}], ",", 
     RowBox[{"Y10", "[", "q", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0.0001", ",", "300"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<X10\>\"", ",", "\"\<Y10\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.744470774763269*^9, 3.744470785514287*^9}},
 ExpressionUUID -> "65ca40a2-ed94-435d-af19-c0cc4d9666de"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
40L83o3I/wMufCL7
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}, 
     GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-10.701752291395596`, -0.000011291941340930909`}, 
     PlotRange -> {{-10.701752291395596`, 
      7.195194394075615}, {-0.000011291941340930909`, 14.153918536038136`}}, 
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> NCache[{{-9.210340371976182, 
         Log[300]}, {-0.000011291941340930909`, 
        14.153918536038136`}}, {{-9.210340371976182, 
       5.703782474656201}, {-0.000011291941340930909`, 14.153918536038136`}}],
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"X10\"", "\"Y10\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7444691003925743`*^9, 3.744470828149317*^9, 
  3.744481967442597*^9, 3.744754922378525*^9, 3.746037016129711*^9},
 ExpressionUUID -> "8648b864-35f0-43e2-9b2e-f16b49919c82"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"V", "=", 
   RowBox[{"Interpolation", "[", "VT", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", "=", 
   RowBox[{"Interpolation", "[", "TT", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"LogLinearPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"V", "[", "q", "]"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"T", "[", "q", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0.001", ",", "300"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<-V\>\"", ",", "\"\<-T\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.744468134247365*^9, 3.7444681435327263`*^9}, {
  3.7444692643123093`*^9, 3.7444692815627117`*^9}, {3.7444697021166477`*^9, 
  3.744469702255872*^9}, {3.744754976726839*^9, 3.744754977405246*^9}},
 ExpressionUUID -> "b0715f0d-7de4-4f23-b4f6-dd3c908a8874"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxF13c8Vf//AHDrutfmcq91RZJViQaher9KCWVkU1ZGKUlRibTsVSJbRiQj
I6QozkFmViEjlJVVyMzKz/fx+D0+nT/OeTwf5/V+nfN6jzO2nruib89AR0fn
sbn737HxuFZAUIowTvf/28Y65cmTp/+8p3ggKTH2n6Mlb70pePzP54gZP3ru
//NSHeH4jnP/LH6qgr5R/J/d9Q94cqQJ/ctPMVg59FjwP/fnJYakhQn8Zz+n
D3m8kfz/+eA3qpW8D/U/j8jEbfX2pfznBFktF++rfP9ZV7tdN+Qc739eOPHo
6Ed78n/O/HOj4o0Bz7/4+48Megy4//OwCdMv1gLO/6wuqHby/WP2/xwaNNTS
Hcn6n2fO9znpXyH95xtiXRHfHf55tetzqbPlPzNr1ZGCtf+ZtrMwrWrHPz8b
zvl4ets/Sz3NmP0m9M8vjVIFncn/vIczEdZYSPiR/RnbC3xI2JuamPNB9CS8
pVzr2nNbHuzg3YiHAstE/MkVA9/3O3+WVyo9fJ0+Q8Trhn1bPXbuRSdmAnr3
jRHxS7stfyVxq6PGDG/Gqm9E/GXBdZ/lQT2kb3NH9nQnET99VQUzq9NHnYK3
Tn9rJuKBf68Wuozqo7OfXd0v1xDxoj2XrQIO6aPBIOek1TIi3lEmFi5L1kfn
1RxrAl8T8UjLBVVOJn30c9X2F38OEaduNc29zaiPrhVZ8qWnEfHuzyHnLmjq
oz9OZqr7Eog4B8Mbi6CX+shru+G5yggi3nZYY6mL1wAx9OsE6gUTcaZ5rzhm
EwMUEKWZ3/+AiBNT3zzB/QwQp+6xTicPIp6V/KxMP9sARRDR35WrRFxGJfja
+WoDJIArbw90JOJTDvlOml8NUKL7vlP8NkQ8lGU1pmDWAEko7HZ9bkrE1TB8
6gOXIcocl4nbq0fEo/s4ePyVDZHcM4mKihNE/FWu5+D3G4aoyFx0TBcR8cZ5
ppdlM4ZImVeIq1+RiC8E9qfa3jFC5R/5FJ3kiLj53i96BWtG6JgPl8XKdiJe
8YauukvEGNUfZPUJECHi+/5cvuTEZYx0FpiyqRQi7hlk3OeybITaczY+pbET
8XOu4wHdZGNk5rDyZw8TET9AF3cuRdMY9W9ZEK1YZcYpTdckFUONkV3ntLru
HDPOQ+juV+01RuOPJi73TTDjfmGiSdI7TJCzxsiTS4PM+Lv64u1bnE3QPN33
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
tlJBUV9u64WSPOz/ANR84i8=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
nskF/wMSVSmO
        "]]}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}, 
     GridLines -> {None, None}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-8.168908745491985, -0.061961416292579605`}, 
     PlotRange -> {{-8.168908745491985, 
      6.964935941166049}, {-0.061961416292579605`, 64.29907686263378}}, 
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"-V\"", "\"-T\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7444691043486032`*^9, {3.744469264911364*^9, 3.7444692823826017`*^9}, 
   3.74446970276854*^9, 3.744481967598958*^9, 3.744754925750915*^9, 
   3.744754978173582*^9, 3.7460370174777107`*^9},
 ExpressionUUID -> "d3f6fb88-265f-49ac-b122-46cab1093ae2"]
}, Open  ]]
}, Closed]]
},
WindowSize->{1063, 662},
WindowMargins->{{71, Automatic}, {14, Automatic}},
FrontEndVersion->"10.0 for Linux x86 (64-bit) (June 27, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 196, 5, 32, "Input"],
Cell[CellGroupData[{
Cell[779, 29, 2064, 33, 150, "Title"],
Cell[2846, 64, 1319, 27, 242, "Text"],
Cell[4168, 93, 638, 15, 128, "Text"],
Cell[4809, 110, 380, 8, 50, "Text"],
Cell[CellGroupData[{
Cell[5214, 122, 623, 12, 99, "Input"],
Cell[5840, 136, 96, 1, 32, "Output"],
Cell[5939, 139, 96, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6072, 145, 618, 12, 81, "Subtitle"],
Cell[6693, 159, 260, 4, 31, "Text"],
Cell[CellGroupData[{
Cell[6978, 167, 387, 8, 55, "Input"],
Cell[7368, 177, 469, 8, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[7886, 191, 588, 12, 81, "Subtitle"],
Cell[8477, 205, 703, 16, 99, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[9217, 226, 2130, 34, 81, "Subtitle"],
Cell[11350, 262, 1179, 25, 31, "Text"],
Cell[CellGroupData[{
Cell[12554, 291, 850, 19, 45, "Subsection"],
Cell[13407, 312, 574, 10, 32, "Input"],
Cell[13984, 324, 442, 9, 32, "Input"],
Cell[14429, 335, 3067, 91, 253, "Input"],
Cell[CellGroupData[{
Cell[17521, 430, 5312, 166, 451, "Input"],
Cell[22836, 598, 11019, 221, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33892, 824, 732, 16, 55, "Input"],
Cell[34627, 842, 335, 5, 32, "Output"],
Cell[34965, 849, 341, 5, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[35355, 860, 166, 3, 44, "Subsection"],
Cell[35524, 865, 1450, 48, 230, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37011, 918, 330, 5, 45, "Subsection"],
Cell[37344, 925, 537, 12, 32, "Text"],
Cell[CellGroupData[{
Cell[37906, 941, 2177, 50, 196, "Input"],
Cell[40086, 993, 719, 14, 23, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40842, 1012, 2094, 48, 174, "Input"],
Cell[42939, 1062, 678, 13, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[43666, 1081, 535, 11, 46, "Subsection"],
Cell[CellGroupData[{
Cell[44226, 1096, 164, 3, 35, "Subsubsection"],
Cell[44393, 1101, 4218, 139, 323, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48648, 1245, 161, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[48834, 1252, 18691, 456, 2629, "Input"],
Cell[67528, 1710, 499, 10, 32, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[68088, 1727, 324, 5, 44, "Subsection"],
Cell[68415, 1734, 254, 6, 31, "Text"],
Cell[CellGroupData[{
Cell[68694, 1744, 1258, 34, 196, "Input"],
Cell[69955, 1780, 240, 3, 32, "Output"],
Cell[70198, 1785, 245, 3, 32, "Output"],
Cell[70446, 1790, 226, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70709, 1798, 6490, 167, 737, "Input"],
Cell[77202, 1967, 293, 4, 32, "Output"],
Cell[77498, 1973, 384, 8, 32, "Output"]
}, Open  ]],
Cell[77897, 1984, 514, 8, 55, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78448, 1997, 211, 4, 45, "Subsection"],
Cell[CellGroupData[{
Cell[78684, 2005, 3009, 74, 143, "Input"],
Cell[81696, 2081, 319, 6, 32, "Output"],
Cell[82018, 2089, 298, 4, 32, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[82389, 2101, 148, 3, 93, "Title"],
Cell[CellGroupData[{
Cell[82562, 2108, 1162, 34, 121, "Input"],
Cell[83727, 2144, 60914, 1067, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144678, 3216, 1422, 42, 143, "Input"],
Cell[146103, 3260, 121308, 2094, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267448, 5359, 1512, 42, 165, "Input"],
Cell[268963, 5403, 53509, 932, 239, "Output"],
Cell[322475, 6337, 60375, 1044, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[382887, 7386, 752, 21, 77, "Input"],
Cell[383642, 7409, 51376, 897, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[435055, 8311, 977, 24, 77, "Input"],
Cell[436035, 8337, 34790, 626, 237, "Output"]
}, Open  ]]
}, Closed]]
}
]
*)

